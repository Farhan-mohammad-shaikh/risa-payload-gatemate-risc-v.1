#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (c) 2013-2014, 2016-2017, Fabian Greif
# Copyright (c) 2015, Norbert Toth
# Copyright (c) 2019, Felix Passenberg
# Copyright (c) 2022, Tobias Pfeffer
# Copyright (c) 2024, Pieper, Pascal
# Copyright (c) 2024, Janosch Reinking
# Copyright (c) 2024, Reinking, Janosch
#
# This file is part of the Simple Interface Protocols (SIP) examples.
#
# It is supplied solely for the use by TUHH and HAW Hamburg
# in the frame of the PLUTO 1 flight mission.
# Distribution outside of the project or to people with no share in the PLUTO mission requires explicit permit granted by DLR-RY-AVS
# Contact jan-gerd.mess@dlr.de when in doubt.

import os
# should be the same name as the ../src library
module = 'outpost_' + os.path.basename(os.path.abspath('../'))

Import('envGlobal')

# == STUB LIBRARY ==

if envGlobal['OS'] == 'unittest_rtos':
    includepaths = [os.path.abspath('.')]

    lib_deps = [
        module,
    ]
    # envGlobal.RecursiveGlob('.cpp', searchdir = 'unittest') # none
    lib_files = []

    envGlobal.RegisterLibrary(module + '_stubs', lib_files,
                              includepaths=includepaths, dependencies=lib_deps)

    includepaths_mock = [os.path.abspath('.')]
    files_mock = envGlobal.RecursiveGlob('.cpp', searchdir='./unittest')
    # envGlobal.RecursiveGlob('_impl.h', searchdir = '../arch/common/posix/')
    impl_files_mock = []
    # libdeps_mock = [(lib, 'external') for lib in ['rt', 'pthread']]
    libdeps_mock = ['outpost_rtos_posix_base',
                    'outpost_container',
                    'outpost_rtos',
                    'outpost_base_stubs',   # testing assert
                    'googletest-local']

    modulename_mock = 'outpost_rtos_mock'

    envGlobal.RegisterLibrary(modulename_mock, files_mock, impl_files_mock,
                              includepaths=includepaths + includepaths_mock, dependencies=libdeps_mock)


# == UNIT TEST ==

unittest_deps = [
    module,
    module + '_stubs',
    'outpost_base_stubs',   # configurable_event_listener.h
    'outpost_time_stubs',
    'outpost_rtos_utils',
    'googletest-local',
    'outpost_container'  # needed by outpost_rtos_mock
]

if envGlobal['OS'] == 'unittest_rtos':
    files = envGlobal.RecursiveGlob('.cpp', searchdir='outpost/rtos')
    files += [envGlobal.File('main.cpp')]
    library_overrides = {
        'outpost_rtos_posix': 'outpost_rtos_mock'
    }
    envGlobal.RegisterTest(module, files, unittest_deps,
                           link_library_overrides=library_overrides)
else:
    files = []
    files += [envGlobal.File('main.cpp')]
    envGlobal.RegisterTest(module, files, unittest_deps)

files = envGlobal.RecursiveGlob('.cpp', searchdir='outpost/rtos_utils')
files += [envGlobal.File('main.cpp')]

envGlobal.RegisterTest(module + '_utils', files, unittest_deps)