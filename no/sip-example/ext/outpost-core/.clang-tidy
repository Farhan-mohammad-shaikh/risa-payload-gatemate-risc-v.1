Checks: "*,
         -modernize-use-trailing-return-type,
         -llvm-include-order,
         -llvmlibc-restrict-system-libc-headers,
         -llvmlibc-implementation-in-namespace,
         -llvmlibc-callee-namespace,
         -google-build-using-namespace,
         -hicpp-vararg,
         -cppcoreguidelines-pro-type-reinterpret-cast,
         -altera-id-dependent-backward-branch,
         -readability-function-cognitive-complexity,
         -altera-unroll-loops,
         -fuchsia-default-arguments-calls,
         -altera-struct-pack-align
         -bugprone-branch-clone
         -bugprone-easily-swappable-parameters
         -hicpp-deprecated-headers
         -modernize-deprecated-headers"

CheckOptions:
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.ClassMemberCase, value: camelBack }
  - { key: readability-identifier-naming.ConstexprVariableCase, value: camelBack }
  - { key: readability-identifier-naming.EnumCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase, value: camelBack }
  - { key: readability-identifier-naming.FunctionCase, value: camelBack }
  - { key: readability-identifier-naming.GlobalConstantCase, value: camelBack }
  - { key: readability-identifier-naming.StaticConstantCase, value: camelBack }
  - { key: readability-identifier-naming.StaticVariableCase, value: camelBack }
  - { key: readability-identifier-naming.MacroDefinitionCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.MemberCase, value: camelBack }
  - { key: readability-identifier-naming.PrivateMemberPrefix, value: m }
  - { key: readability-identifier-naming.ProtectedMemberPrefix, value: m }
  - { key: readability-identifier-naming.PublicMemberPrefix, value: m }
  - { key: readability-identifier-naming.NamespaceCase, value: lower_case }
  - { key: readability-identifier-naming.ParameterCase, value: camelBack }
  - { key: readability-identifier-naming.TypeAliasCase, value: CamelCase }
  - { key: readability-identifier-naming.TypedefCase, value: CamelCase }
  - { key: readability-identifier-naming.VariableCase, value: camelBack }
  - { key: readability-identifier-naming.IgnoreMainLikeFunctions, value: 1 }