//--------------------------------------------------------------------------------
// Auto-generated by LiteX (c213c4274) on 2025-02-27 00:37:18
//--------------------------------------------------------------------------------
#ifndef __GENERATED_SOC_H
#define __GENERATED_SOC_H
#define CONFIG_PLATFORM_NAME "colognechip_gatemate_evb"
#define CONFIG_CLOCK_FREQUENCY 8000000
#define CONFIG_CPU_HAS_INTERRUPT
#define CONFIG_CPU_RESET_ADDR 0
#define CONFIG_CPU_TYPE_VEXRISCV
#define CONFIG_CPU_VARIANT_MINIMAL
#define CONFIG_CPU_FAMILY "riscv"
#define CONFIG_CPU_NAME "vexriscv"
#define CONFIG_CPU_HUMAN_NAME "VexRiscv_Min"
#define CONFIG_CPU_NOP "nop"
#define CONFIG_ROM_INIT 1
#define CONFIG_IDENTIFIER "LiteX SoC on GateMate EVB 2025-02-27 00:37:18"
#define CONFIG_CSR_DATA_WIDTH 32
#define CONFIG_CSR_ALIGNMENT 32
#define CONFIG_BUS_STANDARD "wishbone"
#define CONFIG_BUS_DATA_WIDTH 32
#define CONFIG_BUS_ADDRESS_WIDTH 32
#define CONFIG_BUS_BURSTING 0
#define CONFIG_CPU_INTERRUPTS 4
#define TIMER0_INTERRUPT 1
#define UART_INTERRUPT 0
#define UART_ICE40_INTERRUPT 3
#define UART_LOGGING_INTERRUPT 2
#define CONFIG_HAS_I2C

#ifndef __ASSEMBLER__
static inline const char * config_platform_name_read(void) {
	return "colognechip_gatemate_evb";
}
static inline int config_clock_frequency_read(void) {
	return 8000000;
}
static inline int config_cpu_reset_addr_read(void) {
	return 0;
}
static inline const char * config_cpu_family_read(void) {
	return "riscv";
}
static inline const char * config_cpu_name_read(void) {
	return "vexriscv";
}
static inline const char * config_cpu_human_name_read(void) {
	return "VexRiscv_Min";
}
static inline const char * config_cpu_nop_read(void) {
	return "nop";
}
static inline int config_rom_init_read(void) {
	return 1;
}
static inline const char * config_identifier_read(void) {
	return "LiteX SoC on GateMate EVB 2025-02-27 00:37:18";
}
static inline int config_csr_data_width_read(void) {
	return 32;
}
static inline int config_csr_alignment_read(void) {
	return 32;
}
static inline const char * config_bus_standard_read(void) {
	return "wishbone";
}
static inline int config_bus_data_width_read(void) {
	return 32;
}
static inline int config_bus_address_width_read(void) {
	return 32;
}
static inline int config_bus_bursting_read(void) {
	return 0;
}
static inline int config_cpu_interrupts_read(void) {
	return 4;
}
static inline int timer0_interrupt_read(void) {
	return 1;
}
static inline int uart_interrupt_read(void) {
	return 0;
}
static inline int uart_ice40_interrupt_read(void) {
	return 3;
}
static inline int uart_logging_interrupt_read(void) {
	return 2;
}
#endif // !__ASSEMBLER__

#endif
