// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : colognechip_gatemate_evb.v
// Device     : CCGM1A1
// LiteX sha1 : c213c4274
// Date       : 2025-02-27 00:37:19
//------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module colognechip_gatemate_evb (
    input  wire          cdone_ice40,
    input  wire          clk10,
    output wire          core_en_ice40,
    inout  wire          creset_ice40,
    inout  wire          gatemate_debug_3,
    inout  wire          gatemate_debug_4,
    inout  wire          gatemate_debug_5,
    output wire          hyperram_clk_n,
    output wire          hyperram_clk_p,
    output wire          hyperram_cs_n,
    inout  wire    [7:0] hyperram_dq,
    output wire          hyperram_rst_n,
    inout  wire          hyperram_rwds,
    inout  wire          i2c0_scl,
    inout  wire          i2c0_sda,
    inout  wire          i2c1_scl,
    inout  wire          i2c1_sda,
    inout  wire          ice40_io_vcore_0,
    inout  wire          ice40_io_vcore_1,
    inout  wire          ice40_io_vcore_2,
    inout  wire          ice40_io_vcore_4,
    inout  wire          ice40_io_vio_0,
    inout  wire          ice40_io_vio_1,
    inout  wire          ice40_io_vio_2,
    inout  wire          ice40_io_vio_3,
    inout  wire          ice40_io_vio_4,
    inout  wire          ice40_io_vio_5,
    output wire          osc_en_ice40,
    input  wire          power_fauld_ice40,
    output wire          spi_flash_clk,
    output wire          spi_flash_cs_n,
    input  wire          spi_flash_miso,
    output wire          spi_flash_mosi,
    output wire          spi_ice40_clk,
    output wire          spi_ice40_cs_n,
    input  wire          spi_ice40_miso,
    output wire          spi_ice40_mosi,
    input  wire          uart_ice40_rx,
    output wire          uart_ice40_tx,
    input  wire          uart_logging_rx,
    output wire          uart_logging_tx,
    input  wire          usb_uart_rx,
    output reg           usb_uart_tx,
    output wire          user_led_n0,
    output wire          user_led_n1,
    output wire          user_led_n2,
    output wire          user_led_n3,
    output wire          vio_en_ice40
);


//------------------------------------------------------------------------------
// Hierarchy
//------------------------------------------------------------------------------

/*
BaseSoC
└─── crg (_CRG)
│    └─── pll (GateMatePLL)
│    │    └─── [CC_PLL]
│    └─── [CC_USR_RSTN]
└─── bus (SoCBusHandler)
│    └─── _interconnect (InterconnectShared)
│    │    └─── arbiter (Arbiter)
│    │    │    └─── rr (RoundRobin)
│    │    └─── decoder (Decoder)
│    │    └─── timeout (Timeout)
│    │    │    └─── waittimer_0* (WaitTimer)
└─── csr (SoCCSRHandler)
└─── irq (SoCIRQHandler)
└─── ctrl (SoCController)
└─── cpu (VexRiscv)
│    └─── [VexRiscv]
└─── rom (SRAM)
└─── sram (SRAM)
└─── identifier (Identifier)
└─── uart_phy (RS232PHY)
│    └─── tx (RS232PHYTX)
│    │    └─── clk_phase_accum (RS232ClkPhaseAccum)
│    │    └─── fsm (FSM)
│    └─── rx (RS232PHYRX)
│    │    └─── clk_phase_accum (RS232ClkPhaseAccum)
│    │    └─── fsm (FSM)
└─── uart (UART)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
│    │    └─── eventsourceprocess_1* (EventSourceProcess)
│    └─── tx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
│    └─── rx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
└─── timer0 (Timer)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
└─── timer1 (Timer)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
└─── leds (GPIOOut)
└─── uart_logging (CustomUart)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
│    └─── [UART]
└─── uart_ice40 (CustomUart)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
│    └─── [UART]
└─── i2c0 (I2CMaster)
└─── i2c1 (I2CMaster)
└─── ice40_power_fauld (GPIOIn)
└─── ice40_core_en (GPIOOut)
└─── ice40_vio_en (GPIOOut)
└─── ice40_osc_en (GPIOOut)
└─── ice40 (CustomSpiMaster)
│    └─── vhd2v_converter (VHD2VConverter)
│    │    └─── [spi_master]
└─── ice40_cp (GPIOTristate)
└─── ice40_cd (GPIOIn)
└─── flash (CustomSpiMaster)
│    └─── vhd2v_converter (VHD2VConverter)
│    │    └─── [spi_master_1]
└─── hyperram (HyperRAM)
│    └─── phy (HyperRAMSDRPHY)
│    │    └─── clk_gen (HyperRAMClkGen)
│    │    └─── fsm (FSM)
│    └─── tx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFO)
│    └─── rx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFO)
│    └─── tx_cdc (ClockDomainCrossing)
│    └─── rx_cdc (ClockDomainCrossing)
│    └─── core (HyperRAMCore)
│    │    └─── cmd_tx_conv (Converter)
│    │    │    └─── _downconverter_0* (_DownConverter)
│    │    └─── reg_tx_conv (StrideConverter)
│    │    │    └─── converter_0* (Converter)
│    │    │    │    └─── _downconverter_0* (_DownConverter)
│    │    └─── reg_rx_conv (StrideConverter)
│    │    │    └─── converter_0* (Converter)
│    │    │    │    └─── _upconverter_0* (_UpConverter)
│    │    └─── dat_tx_conv (StrideConverter)
│    │    │    └─── converter_0* (Converter)
│    │    │    │    └─── _downconverter_0* (_DownConverter)
│    │    └─── dat_rx_conv (StrideConverter)
│    │    │    └─── converter_0* (Converter)
│    │    │    │    └─── _upconverter_0* (_UpConverter)
│    │    └─── fsm (FSM)
│    └─── tx_pipeline (Pipeline)
│    └─── rx_pipeline (Pipeline)
│    └─── reg_fsm (FSM)
└─── ice40_io_vio_0 (GPIOTristate)
└─── ice40_io_vio_1 (GPIOTristate)
└─── ice40_io_vio_2 (GPIOTristate)
└─── ice40_io_vio_3 (GPIOTristate)
└─── ice40_io_vio_4 (GPIOTristate)
└─── ice40_io_vio_5 (GPIOTristate)
└─── ice40_io_vcore_0 (GPIOTristate)
└─── ice40_io_vcore_1 (GPIOTristate)
└─── ice40_io_vcore_2 (GPIOTristate)
└─── ice40_io_vcore_4 (GPIOTristate)
└─── gatemate_debug_4 (GPIOTristate)
└─── gatemate_debug_5 (GPIOTristate)
└─── gatemate_debug_3 (GPIOTristate)
└─── csr_bridge (Wishbone2CSR)
│    └─── fsm (FSM)
└─── csr_bankarray (CSRBankArray)
│    └─── csrbank_0* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_1* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    └─── csrbank_2* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_3* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_4* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_5* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstatus_2* (CSRStatus)
│    └─── csrbank_6* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_7* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_8* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    └─── csrbank_9* (CSRBank)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_10* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    └─── csrbank_11* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_12* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_13* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_14* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_15* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_16* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_17* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_18* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_19* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_20* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_21* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_22* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    └─── csrbank_23* (CSRBank)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_24* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    └─── sram_0* (SRAM)
│    └─── csrbank_25* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    └─── csrbank_26* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstorage_4* (CSRStorage)
│    └─── csrbank_27* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstorage_4* (CSRStorage)
│    └─── csrbank_28* (CSRBank)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstatus_3* (CSRStatus)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_4* (CSRStatus)
│    │    └─── csrstatus_5* (CSRStatus)
│    └─── csrbank_29* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstatus_3* (CSRStatus)
│    │    └─── csrstorage_2* (CSRStorage)
│    └─── csrbank_30* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstatus_3* (CSRStatus)
│    │    └─── csrstorage_2* (CSRStorage)
└─── csr_interconnect (InterconnectShared)
└─── [CC_DFF]
└─── [CC_DFF]
* : Generated name.
[]: BlackBox.
*/

//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

wire   [13:0] basesoc_basesoc_adr;
reg           basesoc_basesoc_adr_burst = 1'd0;
wire   [31:0] basesoc_basesoc_dat_r;
reg           basesoc_basesoc_ram_bus_ack = 1'd0;
wire   [29:0] basesoc_basesoc_ram_bus_adr;
wire    [1:0] basesoc_basesoc_ram_bus_bte;
wire    [2:0] basesoc_basesoc_ram_bus_cti;
wire          basesoc_basesoc_ram_bus_cyc;
wire   [31:0] basesoc_basesoc_ram_bus_dat_r;
wire   [31:0] basesoc_basesoc_ram_bus_dat_w;
reg           basesoc_basesoc_ram_bus_err = 1'd0;
wire    [3:0] basesoc_basesoc_ram_bus_sel;
wire          basesoc_basesoc_ram_bus_stb;
wire          basesoc_basesoc_ram_bus_we;
wire          basesoc_bus_error;
reg    [31:0] basesoc_bus_errors = 32'd0;
reg           basesoc_bus_errors_re = 1'd0;
wire   [31:0] basesoc_bus_errors_status;
wire          basesoc_bus_errors_we;
wire          basesoc_cpu_rst;
wire          basesoc_dbus_ack;
wire   [29:0] basesoc_dbus_adr;
wire    [1:0] basesoc_dbus_bte;
wire    [2:0] basesoc_dbus_cti;
wire          basesoc_dbus_cyc;
wire   [31:0] basesoc_dbus_dat_r;
wire   [31:0] basesoc_dbus_dat_w;
wire          basesoc_dbus_err;
wire    [3:0] basesoc_dbus_sel;
wire          basesoc_dbus_stb;
wire          basesoc_dbus_we;
wire          basesoc_ibus_ack;
wire   [29:0] basesoc_ibus_adr;
wire    [1:0] basesoc_ibus_bte;
wire    [2:0] basesoc_ibus_cti;
wire          basesoc_ibus_cyc;
wire   [31:0] basesoc_ibus_dat_r;
wire   [31:0] basesoc_ibus_dat_w;
wire          basesoc_ibus_err;
wire    [3:0] basesoc_ibus_sel;
wire          basesoc_ibus_stb;
wire          basesoc_ibus_we;
reg    [31:0] basesoc_interrupt = 32'd0;
wire   [13:0] basesoc_ram_adr;
reg           basesoc_ram_adr_burst = 1'd0;
reg           basesoc_ram_bus_ram_bus_ack = 1'd0;
wire   [29:0] basesoc_ram_bus_ram_bus_adr;
wire    [1:0] basesoc_ram_bus_ram_bus_bte;
wire    [2:0] basesoc_ram_bus_ram_bus_cti;
wire          basesoc_ram_bus_ram_bus_cyc;
wire   [31:0] basesoc_ram_bus_ram_bus_dat_r;
wire   [31:0] basesoc_ram_bus_ram_bus_dat_w;
reg           basesoc_ram_bus_ram_bus_err = 1'd0;
wire    [3:0] basesoc_ram_bus_ram_bus_sel;
wire          basesoc_ram_bus_ram_bus_stb;
wire          basesoc_ram_bus_ram_bus_we;
wire   [31:0] basesoc_ram_dat_r;
wire   [31:0] basesoc_ram_dat_w;
reg     [3:0] basesoc_ram_we = 4'd0;
wire          basesoc_reset;
reg           basesoc_reset_re = 1'd0;
reg     [1:0] basesoc_reset_storage = 2'd0;
reg     [3:0] basesoc_rx_count = 4'd0;
reg     [3:0] basesoc_rx_count_builder_rs232phyrx_next_value0 = 4'd0;
reg           basesoc_rx_count_builder_rs232phyrx_next_value_ce0 = 1'd0;
reg     [7:0] basesoc_rx_data = 8'd0;
reg     [7:0] basesoc_rx_data_builder_rs232phyrx_next_value1 = 8'd0;
reg           basesoc_rx_data_builder_rs232phyrx_next_value_ce1 = 1'd0;
reg           basesoc_rx_enable = 1'd0;
reg    [31:0] basesoc_rx_phase = 32'd0;
wire          basesoc_rx_rx;
reg           basesoc_rx_rx_d = 1'd0;
reg           basesoc_rx_source_first = 1'd0;
reg           basesoc_rx_source_last = 1'd0;
reg     [7:0] basesoc_rx_source_payload_data = 8'd0;
wire          basesoc_rx_source_ready;
reg           basesoc_rx_source_valid = 1'd0;
reg           basesoc_rx_tick = 1'd0;
reg           basesoc_scratch_re = 1'd0;
reg    [31:0] basesoc_scratch_storage = 32'd305419896;
reg           basesoc_soc_rst = 1'd0;
reg           basesoc_timer_en_re = 1'd0;
reg           basesoc_timer_en_storage = 1'd0;
reg           basesoc_timer_enable_re = 1'd0;
reg           basesoc_timer_enable_storage = 1'd0;
wire          basesoc_timer_irq;
reg           basesoc_timer_load_re = 1'd0;
reg    [31:0] basesoc_timer_load_storage = 32'd0;
reg           basesoc_timer_pending_r = 1'd0;
reg           basesoc_timer_pending_re = 1'd0;
wire          basesoc_timer_pending_status;
wire          basesoc_timer_pending_we;
reg           basesoc_timer_reload_re = 1'd0;
reg    [31:0] basesoc_timer_reload_storage = 32'd0;
reg           basesoc_timer_status_re = 1'd0;
wire          basesoc_timer_status_status;
wire          basesoc_timer_status_we;
reg           basesoc_timer_update_value_re = 1'd0;
reg           basesoc_timer_update_value_storage = 1'd0;
reg    [31:0] basesoc_timer_value = 32'd0;
reg           basesoc_timer_value_re = 1'd0;
reg    [31:0] basesoc_timer_value_status = 32'd0;
wire          basesoc_timer_value_we;
wire          basesoc_timer_zero0;
wire          basesoc_timer_zero1;
wire          basesoc_timer_zero2;
reg           basesoc_timer_zero_clear = 1'd0;
reg           basesoc_timer_zero_pending = 1'd0;
wire          basesoc_timer_zero_status;
wire          basesoc_timer_zero_trigger;
reg           basesoc_timer_zero_trigger_d = 1'd0;
reg     [3:0] basesoc_tx_count = 4'd0;
reg     [3:0] basesoc_tx_count_builder_rs232phytx_next_value0 = 4'd0;
reg           basesoc_tx_count_builder_rs232phytx_next_value_ce0 = 1'd0;
reg     [7:0] basesoc_tx_data = 8'd0;
reg     [7:0] basesoc_tx_data_builder_rs232phytx_next_value2 = 8'd0;
reg           basesoc_tx_data_builder_rs232phytx_next_value_ce2 = 1'd0;
reg           basesoc_tx_enable = 1'd0;
reg    [31:0] basesoc_tx_phase = 32'd0;
wire          basesoc_tx_sink_first;
wire          basesoc_tx_sink_last;
wire    [7:0] basesoc_tx_sink_payload_data;
reg           basesoc_tx_sink_ready = 1'd0;
wire          basesoc_tx_sink_valid;
reg           basesoc_tx_tick = 1'd0;
reg           basesoc_uart_enable_re = 1'd0;
reg     [1:0] basesoc_uart_enable_storage = 2'd0;
wire          basesoc_uart_irq;
reg     [1:0] basesoc_uart_pending_r = 2'd0;
reg           basesoc_uart_pending_re = 1'd0;
reg     [1:0] basesoc_uart_pending_status = 2'd0;
wire          basesoc_uart_pending_we;
wire          basesoc_uart_rx0;
wire          basesoc_uart_rx1;
wire          basesoc_uart_rx2;
reg           basesoc_uart_rx_clear = 1'd0;
reg     [3:0] basesoc_uart_rx_fifo_consume = 4'd0;
wire          basesoc_uart_rx_fifo_do_read;
wire          basesoc_uart_rx_fifo_fifo_in_first;
wire          basesoc_uart_rx_fifo_fifo_in_last;
wire    [7:0] basesoc_uart_rx_fifo_fifo_in_payload_data;
wire          basesoc_uart_rx_fifo_fifo_out_first;
wire          basesoc_uart_rx_fifo_fifo_out_last;
wire    [7:0] basesoc_uart_rx_fifo_fifo_out_payload_data;
reg     [4:0] basesoc_uart_rx_fifo_level0 = 5'd0;
wire    [4:0] basesoc_uart_rx_fifo_level1;
reg     [3:0] basesoc_uart_rx_fifo_produce = 4'd0;
wire    [3:0] basesoc_uart_rx_fifo_rdport_adr;
wire    [9:0] basesoc_uart_rx_fifo_rdport_dat_r;
wire          basesoc_uart_rx_fifo_rdport_re;
wire          basesoc_uart_rx_fifo_re;
reg           basesoc_uart_rx_fifo_readable = 1'd0;
reg           basesoc_uart_rx_fifo_replace = 1'd0;
wire          basesoc_uart_rx_fifo_sink_first;
wire          basesoc_uart_rx_fifo_sink_last;
wire    [7:0] basesoc_uart_rx_fifo_sink_payload_data;
wire          basesoc_uart_rx_fifo_sink_ready;
wire          basesoc_uart_rx_fifo_sink_valid;
wire          basesoc_uart_rx_fifo_source_first;
wire          basesoc_uart_rx_fifo_source_last;
wire    [7:0] basesoc_uart_rx_fifo_source_payload_data;
wire          basesoc_uart_rx_fifo_source_ready;
wire          basesoc_uart_rx_fifo_source_valid;
wire    [9:0] basesoc_uart_rx_fifo_syncfifo_din;
wire    [9:0] basesoc_uart_rx_fifo_syncfifo_dout;
wire          basesoc_uart_rx_fifo_syncfifo_re;
wire          basesoc_uart_rx_fifo_syncfifo_readable;
wire          basesoc_uart_rx_fifo_syncfifo_we;
wire          basesoc_uart_rx_fifo_syncfifo_writable;
reg     [3:0] basesoc_uart_rx_fifo_wrport_adr = 4'd0;
wire    [9:0] basesoc_uart_rx_fifo_wrport_dat_r;
wire    [9:0] basesoc_uart_rx_fifo_wrport_dat_w;
wire          basesoc_uart_rx_fifo_wrport_we;
reg           basesoc_uart_rx_pending = 1'd0;
wire          basesoc_uart_rx_status;
wire          basesoc_uart_rx_trigger;
reg           basesoc_uart_rx_trigger_d = 1'd0;
reg           basesoc_uart_rxempty_re = 1'd0;
wire          basesoc_uart_rxempty_status;
wire          basesoc_uart_rxempty_we;
reg           basesoc_uart_rxfull_re = 1'd0;
wire          basesoc_uart_rxfull_status;
wire          basesoc_uart_rxfull_we;
wire    [7:0] basesoc_uart_rxtx_r;
reg           basesoc_uart_rxtx_re = 1'd0;
wire    [7:0] basesoc_uart_rxtx_w;
reg           basesoc_uart_rxtx_we = 1'd0;
reg           basesoc_uart_status_re = 1'd0;
reg     [1:0] basesoc_uart_status_status = 2'd0;
wire          basesoc_uart_status_we;
wire          basesoc_uart_tx0;
wire          basesoc_uart_tx1;
wire          basesoc_uart_tx2;
reg           basesoc_uart_tx_clear = 1'd0;
reg     [3:0] basesoc_uart_tx_fifo_consume = 4'd0;
wire          basesoc_uart_tx_fifo_do_read;
wire          basesoc_uart_tx_fifo_fifo_in_first;
wire          basesoc_uart_tx_fifo_fifo_in_last;
wire    [7:0] basesoc_uart_tx_fifo_fifo_in_payload_data;
wire          basesoc_uart_tx_fifo_fifo_out_first;
wire          basesoc_uart_tx_fifo_fifo_out_last;
wire    [7:0] basesoc_uart_tx_fifo_fifo_out_payload_data;
reg     [4:0] basesoc_uart_tx_fifo_level0 = 5'd0;
wire    [4:0] basesoc_uart_tx_fifo_level1;
reg     [3:0] basesoc_uart_tx_fifo_produce = 4'd0;
wire    [3:0] basesoc_uart_tx_fifo_rdport_adr;
wire    [9:0] basesoc_uart_tx_fifo_rdport_dat_r;
wire          basesoc_uart_tx_fifo_rdport_re;
wire          basesoc_uart_tx_fifo_re;
reg           basesoc_uart_tx_fifo_readable = 1'd0;
reg           basesoc_uart_tx_fifo_replace = 1'd0;
reg           basesoc_uart_tx_fifo_sink_first = 1'd0;
reg           basesoc_uart_tx_fifo_sink_last = 1'd0;
wire    [7:0] basesoc_uart_tx_fifo_sink_payload_data;
wire          basesoc_uart_tx_fifo_sink_ready;
wire          basesoc_uart_tx_fifo_sink_valid;
wire          basesoc_uart_tx_fifo_source_first;
wire          basesoc_uart_tx_fifo_source_last;
wire    [7:0] basesoc_uart_tx_fifo_source_payload_data;
wire          basesoc_uart_tx_fifo_source_ready;
wire          basesoc_uart_tx_fifo_source_valid;
wire    [9:0] basesoc_uart_tx_fifo_syncfifo_din;
wire    [9:0] basesoc_uart_tx_fifo_syncfifo_dout;
wire          basesoc_uart_tx_fifo_syncfifo_re;
wire          basesoc_uart_tx_fifo_syncfifo_readable;
wire          basesoc_uart_tx_fifo_syncfifo_we;
wire          basesoc_uart_tx_fifo_syncfifo_writable;
reg     [3:0] basesoc_uart_tx_fifo_wrport_adr = 4'd0;
wire    [9:0] basesoc_uart_tx_fifo_wrport_dat_r;
wire    [9:0] basesoc_uart_tx_fifo_wrport_dat_w;
wire          basesoc_uart_tx_fifo_wrport_we;
reg           basesoc_uart_tx_pending = 1'd0;
wire          basesoc_uart_tx_status;
wire          basesoc_uart_tx_trigger;
reg           basesoc_uart_tx_trigger_d = 1'd0;
reg           basesoc_uart_txempty_re = 1'd0;
wire          basesoc_uart_txempty_status;
wire          basesoc_uart_txempty_we;
reg           basesoc_uart_txfull_re = 1'd0;
wire          basesoc_uart_txfull_status;
wire          basesoc_uart_txfull_we;
wire          basesoc_uart_uart_sink_first;
wire          basesoc_uart_uart_sink_last;
wire    [7:0] basesoc_uart_uart_sink_payload_data;
wire          basesoc_uart_uart_sink_ready;
wire          basesoc_uart_uart_sink_valid;
wire          basesoc_uart_uart_source_first;
wire          basesoc_uart_uart_source_last;
wire    [7:0] basesoc_uart_uart_source_payload_data;
wire          basesoc_uart_uart_source_ready;
wire          basesoc_uart_uart_source_valid;
reg           basesoc_usb_uart_tx_builder_rs232phytx_next_value1 = 1'd0;
reg           basesoc_usb_uart_tx_builder_rs232phytx_next_value_ce1 = 1'd0;
reg    [31:0] basesoc_vexriscv = 32'd0;
wire          bus_bus_ack;
wire   [29:0] bus_bus_adr;
wire    [1:0] bus_bus_bte;
wire    [2:0] bus_bus_cti;
wire          bus_bus_cyc;
wire   [31:0] bus_bus_dat_r;
wire   [31:0] bus_bus_dat_w;
wire          bus_bus_err;
wire    [3:0] bus_bus_sel;
wire          bus_bus_stb;
wire          bus_bus_we;
reg     [1:0] clockdomainsrenamer_next_state = 2'd0;
reg     [1:0] clockdomainsrenamer_state = 2'd0;
wire          core_burst_r;
reg           core_burst_r_first = 1'd0;
reg           core_burst_r_first_main_next_value2 = 1'd0;
reg           core_burst_r_first_main_next_value_ce2 = 1'd0;
wire          core_burst_w;
reg           core_bus_ack = 1'd0;
wire   [29:0] core_bus_adr0;
reg    [31:0] core_bus_adr1 = 32'd0;
wire    [1:0] core_bus_bte;
wire    [2:0] core_bus_cti0;
reg     [2:0] core_bus_cti1 = 3'd0;
wire          core_bus_cyc;
reg    [31:0] core_bus_dat_r = 32'd0;
wire   [31:0] core_bus_dat_w0;
reg    [31:0] core_bus_dat_w1 = 32'd0;
reg           core_bus_err = 1'd0;
reg           core_bus_latch = 1'd0;
wire    [3:0] core_bus_sel0;
reg     [3:0] core_bus_sel1 = 4'd0;
wire          core_bus_stb;
wire          core_bus_we0;
reg           core_bus_we1 = 1'd0;
reg    [47:0] core_cmd = 48'd0;
wire          core_cmd_tx_conv_converter_first;
wire          core_cmd_tx_conv_converter_last;
reg     [2:0] core_cmd_tx_conv_converter_mux = 3'd0;
reg           core_cmd_tx_conv_converter_sink_first = 1'd0;
reg           core_cmd_tx_conv_converter_sink_last = 1'd0;
reg    [47:0] core_cmd_tx_conv_converter_sink_payload_data = 48'd0;
wire          core_cmd_tx_conv_converter_sink_ready;
reg           core_cmd_tx_conv_converter_sink_valid = 1'd0;
wire          core_cmd_tx_conv_converter_source_first;
wire          core_cmd_tx_conv_converter_source_last;
reg     [7:0] core_cmd_tx_conv_converter_source_payload_data = 8'd0;
wire          core_cmd_tx_conv_converter_source_payload_valid_token_count;
wire          core_cmd_tx_conv_converter_source_ready;
wire          core_cmd_tx_conv_converter_source_valid;
wire          core_cmd_tx_conv_source_source_first;
wire          core_cmd_tx_conv_source_source_last;
wire    [7:0] core_cmd_tx_conv_source_source_payload_data;
reg           core_cmd_tx_conv_source_source_ready = 1'd0;
wire          core_cmd_tx_conv_source_source_valid;
reg     [7:0] core_cycles = 8'd0;
reg     [7:0] core_cycles_main_next_value1 = 8'd0;
reg           core_cycles_main_next_value_ce1 = 1'd0;
reg     [1:0] core_dat_rx_conv_converter_demux = 2'd0;
wire          core_dat_rx_conv_converter_load_part;
wire          core_dat_rx_conv_converter_sink_first;
wire          core_dat_rx_conv_converter_sink_last;
wire    [7:0] core_dat_rx_conv_converter_sink_payload_data;
wire          core_dat_rx_conv_converter_sink_ready;
wire          core_dat_rx_conv_converter_sink_valid;
reg           core_dat_rx_conv_converter_source_first = 1'd0;
reg           core_dat_rx_conv_converter_source_last = 1'd0;
reg    [31:0] core_dat_rx_conv_converter_source_payload_data = 32'd0;
reg     [2:0] core_dat_rx_conv_converter_source_payload_valid_token_count = 3'd0;
wire          core_dat_rx_conv_converter_source_ready;
wire          core_dat_rx_conv_converter_source_valid;
reg           core_dat_rx_conv_converter_strobe_all = 1'd0;
reg           core_dat_rx_conv_sink_first = 1'd0;
reg           core_dat_rx_conv_sink_last = 1'd0;
reg     [7:0] core_dat_rx_conv_sink_payload_dq = 8'd0;
wire          core_dat_rx_conv_sink_ready;
reg           core_dat_rx_conv_sink_valid = 1'd0;
wire          core_dat_rx_conv_source_first;
wire          core_dat_rx_conv_source_last;
reg    [31:0] core_dat_rx_conv_source_payload_dq = 32'd0;
wire          core_dat_rx_conv_source_ready;
wire          core_dat_rx_conv_source_source_first;
wire          core_dat_rx_conv_source_source_last;
wire   [31:0] core_dat_rx_conv_source_source_payload_data;
wire          core_dat_rx_conv_source_source_ready;
wire          core_dat_rx_conv_source_source_valid;
wire          core_dat_rx_conv_source_valid;
wire          core_dat_tx_conv_converter_first;
wire          core_dat_tx_conv_converter_last;
reg     [1:0] core_dat_tx_conv_converter_mux = 2'd0;
wire          core_dat_tx_conv_converter_sink_first;
wire          core_dat_tx_conv_converter_sink_last;
reg    [35:0] core_dat_tx_conv_converter_sink_payload_data = 36'd0;
wire          core_dat_tx_conv_converter_sink_ready;
wire          core_dat_tx_conv_converter_sink_valid;
wire          core_dat_tx_conv_converter_source_first;
wire          core_dat_tx_conv_converter_source_last;
reg     [8:0] core_dat_tx_conv_converter_source_payload_data = 9'd0;
wire          core_dat_tx_conv_converter_source_payload_valid_token_count;
wire          core_dat_tx_conv_converter_source_ready;
wire          core_dat_tx_conv_converter_source_valid;
reg           core_dat_tx_conv_sink_first = 1'd0;
reg           core_dat_tx_conv_sink_last = 1'd0;
reg    [31:0] core_dat_tx_conv_sink_payload_dq = 32'd0;
reg     [3:0] core_dat_tx_conv_sink_payload_rwds = 4'd0;
wire          core_dat_tx_conv_sink_ready;
reg           core_dat_tx_conv_sink_valid = 1'd0;
wire          core_dat_tx_conv_source_first;
wire          core_dat_tx_conv_source_last;
wire    [7:0] core_dat_tx_conv_source_payload_dq;
wire          core_dat_tx_conv_source_payload_rwds;
reg           core_dat_tx_conv_source_ready = 1'd0;
wire          core_dat_tx_conv_source_source_first;
wire          core_dat_tx_conv_source_source_last;
wire    [8:0] core_dat_tx_conv_source_source_payload_data;
wire          core_dat_tx_conv_source_source_ready;
wire          core_dat_tx_conv_source_source_valid;
wire          core_dat_tx_conv_source_valid;
wire    [7:0] core_latency;
reg           core_latency_x2 = 1'd0;
reg           core_latency_x2_main_next_value0 = 1'd0;
reg           core_latency_x2_main_next_value_ce0 = 1'd0;
reg     [2:0] core_next_state = 3'd0;
reg           core_reg_ack = 1'd0;
reg     [2:0] core_reg_adr = 3'd0;
reg    [15:0] core_reg_dat_r = 16'd0;
reg    [15:0] core_reg_dat_w = 16'd0;
reg           core_reg_rx_conv_converter_demux = 1'd0;
wire          core_reg_rx_conv_converter_load_part;
wire          core_reg_rx_conv_converter_sink_first;
wire          core_reg_rx_conv_converter_sink_last;
wire    [7:0] core_reg_rx_conv_converter_sink_payload_data;
wire          core_reg_rx_conv_converter_sink_ready;
wire          core_reg_rx_conv_converter_sink_valid;
reg           core_reg_rx_conv_converter_source_first = 1'd0;
reg           core_reg_rx_conv_converter_source_last = 1'd0;
reg    [15:0] core_reg_rx_conv_converter_source_payload_data = 16'd0;
reg     [1:0] core_reg_rx_conv_converter_source_payload_valid_token_count = 2'd0;
wire          core_reg_rx_conv_converter_source_ready;
wire          core_reg_rx_conv_converter_source_valid;
reg           core_reg_rx_conv_converter_strobe_all = 1'd0;
reg           core_reg_rx_conv_sink_first = 1'd0;
reg           core_reg_rx_conv_sink_last = 1'd0;
reg     [7:0] core_reg_rx_conv_sink_payload_dq = 8'd0;
wire          core_reg_rx_conv_sink_ready;
reg           core_reg_rx_conv_sink_valid = 1'd0;
wire          core_reg_rx_conv_source_first;
wire          core_reg_rx_conv_source_last;
reg    [15:0] core_reg_rx_conv_source_payload_dq = 16'd0;
wire          core_reg_rx_conv_source_ready;
wire          core_reg_rx_conv_source_source_first;
wire          core_reg_rx_conv_source_source_last;
wire   [15:0] core_reg_rx_conv_source_source_payload_data;
wire          core_reg_rx_conv_source_source_ready;
wire          core_reg_rx_conv_source_source_valid;
wire          core_reg_rx_conv_source_valid;
reg           core_reg_stb = 1'd0;
wire          core_reg_tx_conv_converter_first;
wire          core_reg_tx_conv_converter_last;
reg           core_reg_tx_conv_converter_mux = 1'd0;
wire          core_reg_tx_conv_converter_sink_first;
wire          core_reg_tx_conv_converter_sink_last;
reg    [17:0] core_reg_tx_conv_converter_sink_payload_data = 18'd0;
wire          core_reg_tx_conv_converter_sink_ready;
wire          core_reg_tx_conv_converter_sink_valid;
wire          core_reg_tx_conv_converter_source_first;
wire          core_reg_tx_conv_converter_source_last;
reg     [8:0] core_reg_tx_conv_converter_source_payload_data = 9'd0;
wire          core_reg_tx_conv_converter_source_payload_valid_token_count;
wire          core_reg_tx_conv_converter_source_ready;
wire          core_reg_tx_conv_converter_source_valid;
reg           core_reg_tx_conv_sink_first = 1'd0;
reg           core_reg_tx_conv_sink_last = 1'd0;
reg    [15:0] core_reg_tx_conv_sink_payload_dq = 16'd0;
reg     [1:0] core_reg_tx_conv_sink_payload_rwds = 2'd0;
wire          core_reg_tx_conv_sink_ready;
reg           core_reg_tx_conv_sink_valid = 1'd0;
wire          core_reg_tx_conv_source_first;
wire          core_reg_tx_conv_source_last;
wire    [7:0] core_reg_tx_conv_source_payload_dq;
wire          core_reg_tx_conv_source_payload_rwds;
reg           core_reg_tx_conv_source_ready = 1'd0;
wire          core_reg_tx_conv_source_source_first;
wire          core_reg_tx_conv_source_source_last;
wire    [8:0] core_reg_tx_conv_source_source_payload_data;
wire          core_reg_tx_conv_source_source_ready;
wire          core_reg_tx_conv_source_source_valid;
wire          core_reg_tx_conv_source_valid;
reg           core_reg_we = 1'd0;
wire          core_rst;
wire          core_sink_sink_first;
wire          core_sink_sink_last;
wire    [7:0] core_sink_sink_payload_dq;
reg           core_sink_sink_ready = 1'd0;
wire          core_sink_sink_valid;
reg           core_source_source_first = 1'd0;
reg           core_source_source_last = 1'd0;
reg           core_source_source_payload_cmd = 1'd0;
reg           core_source_source_payload_dat_r = 1'd0;
reg           core_source_source_payload_dat_w = 1'd0;
reg     [7:0] core_source_source_payload_dq = 8'd0;
reg           core_source_source_payload_dq_oe = 1'd0;
reg           core_source_source_payload_rwds = 1'd0;
reg           core_source_source_payload_rwds_oe = 1'd0;
wire          core_source_source_ready;
reg           core_source_source_valid = 1'd0;
reg     [2:0] core_state = 3'd0;
reg    [19:0] count = 20'd1000000;
wire          crg_clkin;
wire          crg_clkout;
wire          crg_locked;
wire          crg_reset;
wire          crg_rst_n;
wire    [5:0] csr_bankarray_adr;
wire   [31:0] csr_bankarray_csrbank0_bus_errors_r;
reg           csr_bankarray_csrbank0_bus_errors_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_bus_errors_w;
reg           csr_bankarray_csrbank0_bus_errors_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank0_reset0_r;
reg           csr_bankarray_csrbank0_reset0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank0_reset0_w;
reg           csr_bankarray_csrbank0_reset0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_scratch0_r;
reg           csr_bankarray_csrbank0_scratch0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_scratch0_w;
reg           csr_bankarray_csrbank0_scratch0_we = 1'd0;
wire          csr_bankarray_csrbank0_sel;
wire          csr_bankarray_csrbank10_out0_r;
reg           csr_bankarray_csrbank10_out0_re = 1'd0;
wire          csr_bankarray_csrbank10_out0_w;
reg           csr_bankarray_csrbank10_out0_we = 1'd0;
wire          csr_bankarray_csrbank10_sel;
wire          csr_bankarray_csrbank11_in_r;
reg           csr_bankarray_csrbank11_in_re = 1'd0;
wire          csr_bankarray_csrbank11_in_w;
reg           csr_bankarray_csrbank11_in_we = 1'd0;
wire          csr_bankarray_csrbank11_oe0_r;
reg           csr_bankarray_csrbank11_oe0_re = 1'd0;
wire          csr_bankarray_csrbank11_oe0_w;
reg           csr_bankarray_csrbank11_oe0_we = 1'd0;
wire          csr_bankarray_csrbank11_out0_r;
reg           csr_bankarray_csrbank11_out0_re = 1'd0;
wire          csr_bankarray_csrbank11_out0_w;
reg           csr_bankarray_csrbank11_out0_we = 1'd0;
wire          csr_bankarray_csrbank11_sel;
wire          csr_bankarray_csrbank12_in_r;
reg           csr_bankarray_csrbank12_in_re = 1'd0;
wire          csr_bankarray_csrbank12_in_w;
reg           csr_bankarray_csrbank12_in_we = 1'd0;
wire          csr_bankarray_csrbank12_oe0_r;
reg           csr_bankarray_csrbank12_oe0_re = 1'd0;
wire          csr_bankarray_csrbank12_oe0_w;
reg           csr_bankarray_csrbank12_oe0_we = 1'd0;
wire          csr_bankarray_csrbank12_out0_r;
reg           csr_bankarray_csrbank12_out0_re = 1'd0;
wire          csr_bankarray_csrbank12_out0_w;
reg           csr_bankarray_csrbank12_out0_we = 1'd0;
wire          csr_bankarray_csrbank12_sel;
wire          csr_bankarray_csrbank13_in_r;
reg           csr_bankarray_csrbank13_in_re = 1'd0;
wire          csr_bankarray_csrbank13_in_w;
reg           csr_bankarray_csrbank13_in_we = 1'd0;
wire          csr_bankarray_csrbank13_oe0_r;
reg           csr_bankarray_csrbank13_oe0_re = 1'd0;
wire          csr_bankarray_csrbank13_oe0_w;
reg           csr_bankarray_csrbank13_oe0_we = 1'd0;
wire          csr_bankarray_csrbank13_out0_r;
reg           csr_bankarray_csrbank13_out0_re = 1'd0;
wire          csr_bankarray_csrbank13_out0_w;
reg           csr_bankarray_csrbank13_out0_we = 1'd0;
wire          csr_bankarray_csrbank13_sel;
wire          csr_bankarray_csrbank14_in_r;
reg           csr_bankarray_csrbank14_in_re = 1'd0;
wire          csr_bankarray_csrbank14_in_w;
reg           csr_bankarray_csrbank14_in_we = 1'd0;
wire          csr_bankarray_csrbank14_oe0_r;
reg           csr_bankarray_csrbank14_oe0_re = 1'd0;
wire          csr_bankarray_csrbank14_oe0_w;
reg           csr_bankarray_csrbank14_oe0_we = 1'd0;
wire          csr_bankarray_csrbank14_out0_r;
reg           csr_bankarray_csrbank14_out0_re = 1'd0;
wire          csr_bankarray_csrbank14_out0_w;
reg           csr_bankarray_csrbank14_out0_we = 1'd0;
wire          csr_bankarray_csrbank14_sel;
wire          csr_bankarray_csrbank15_in_r;
reg           csr_bankarray_csrbank15_in_re = 1'd0;
wire          csr_bankarray_csrbank15_in_w;
reg           csr_bankarray_csrbank15_in_we = 1'd0;
wire          csr_bankarray_csrbank15_oe0_r;
reg           csr_bankarray_csrbank15_oe0_re = 1'd0;
wire          csr_bankarray_csrbank15_oe0_w;
reg           csr_bankarray_csrbank15_oe0_we = 1'd0;
wire          csr_bankarray_csrbank15_out0_r;
reg           csr_bankarray_csrbank15_out0_re = 1'd0;
wire          csr_bankarray_csrbank15_out0_w;
reg           csr_bankarray_csrbank15_out0_we = 1'd0;
wire          csr_bankarray_csrbank15_sel;
wire          csr_bankarray_csrbank16_in_r;
reg           csr_bankarray_csrbank16_in_re = 1'd0;
wire          csr_bankarray_csrbank16_in_w;
reg           csr_bankarray_csrbank16_in_we = 1'd0;
wire          csr_bankarray_csrbank16_oe0_r;
reg           csr_bankarray_csrbank16_oe0_re = 1'd0;
wire          csr_bankarray_csrbank16_oe0_w;
reg           csr_bankarray_csrbank16_oe0_we = 1'd0;
wire          csr_bankarray_csrbank16_out0_r;
reg           csr_bankarray_csrbank16_out0_re = 1'd0;
wire          csr_bankarray_csrbank16_out0_w;
reg           csr_bankarray_csrbank16_out0_we = 1'd0;
wire          csr_bankarray_csrbank16_sel;
wire          csr_bankarray_csrbank17_in_r;
reg           csr_bankarray_csrbank17_in_re = 1'd0;
wire          csr_bankarray_csrbank17_in_w;
reg           csr_bankarray_csrbank17_in_we = 1'd0;
wire          csr_bankarray_csrbank17_oe0_r;
reg           csr_bankarray_csrbank17_oe0_re = 1'd0;
wire          csr_bankarray_csrbank17_oe0_w;
reg           csr_bankarray_csrbank17_oe0_we = 1'd0;
wire          csr_bankarray_csrbank17_out0_r;
reg           csr_bankarray_csrbank17_out0_re = 1'd0;
wire          csr_bankarray_csrbank17_out0_w;
reg           csr_bankarray_csrbank17_out0_we = 1'd0;
wire          csr_bankarray_csrbank17_sel;
wire          csr_bankarray_csrbank18_in_r;
reg           csr_bankarray_csrbank18_in_re = 1'd0;
wire          csr_bankarray_csrbank18_in_w;
reg           csr_bankarray_csrbank18_in_we = 1'd0;
wire          csr_bankarray_csrbank18_oe0_r;
reg           csr_bankarray_csrbank18_oe0_re = 1'd0;
wire          csr_bankarray_csrbank18_oe0_w;
reg           csr_bankarray_csrbank18_oe0_we = 1'd0;
wire          csr_bankarray_csrbank18_out0_r;
reg           csr_bankarray_csrbank18_out0_re = 1'd0;
wire          csr_bankarray_csrbank18_out0_w;
reg           csr_bankarray_csrbank18_out0_we = 1'd0;
wire          csr_bankarray_csrbank18_sel;
wire          csr_bankarray_csrbank19_in_r;
reg           csr_bankarray_csrbank19_in_re = 1'd0;
wire          csr_bankarray_csrbank19_in_w;
reg           csr_bankarray_csrbank19_in_we = 1'd0;
wire          csr_bankarray_csrbank19_oe0_r;
reg           csr_bankarray_csrbank19_oe0_re = 1'd0;
wire          csr_bankarray_csrbank19_oe0_w;
reg           csr_bankarray_csrbank19_oe0_we = 1'd0;
wire          csr_bankarray_csrbank19_out0_r;
reg           csr_bankarray_csrbank19_out0_re = 1'd0;
wire          csr_bankarray_csrbank19_out0_w;
reg           csr_bankarray_csrbank19_out0_we = 1'd0;
wire          csr_bankarray_csrbank19_sel;
wire          csr_bankarray_csrbank1_busy_r;
reg           csr_bankarray_csrbank1_busy_re = 1'd0;
wire          csr_bankarray_csrbank1_busy_w;
reg           csr_bankarray_csrbank1_busy_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank1_control0_r;
reg           csr_bankarray_csrbank1_control0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank1_control0_w;
reg           csr_bankarray_csrbank1_control0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank1_rx_r;
reg           csr_bankarray_csrbank1_rx_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank1_rx_w;
reg           csr_bankarray_csrbank1_rx_we = 1'd0;
wire          csr_bankarray_csrbank1_sel;
wire          csr_bankarray_csrbank1_ss_n0_r;
reg           csr_bankarray_csrbank1_ss_n0_re = 1'd0;
wire          csr_bankarray_csrbank1_ss_n0_w;
reg           csr_bankarray_csrbank1_ss_n0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank1_tx0_r;
reg           csr_bankarray_csrbank1_tx0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank1_tx0_w;
reg           csr_bankarray_csrbank1_tx0_we = 1'd0;
wire          csr_bankarray_csrbank20_in_r;
reg           csr_bankarray_csrbank20_in_re = 1'd0;
wire          csr_bankarray_csrbank20_in_w;
reg           csr_bankarray_csrbank20_in_we = 1'd0;
wire          csr_bankarray_csrbank20_oe0_r;
reg           csr_bankarray_csrbank20_oe0_re = 1'd0;
wire          csr_bankarray_csrbank20_oe0_w;
reg           csr_bankarray_csrbank20_oe0_we = 1'd0;
wire          csr_bankarray_csrbank20_out0_r;
reg           csr_bankarray_csrbank20_out0_re = 1'd0;
wire          csr_bankarray_csrbank20_out0_w;
reg           csr_bankarray_csrbank20_out0_we = 1'd0;
wire          csr_bankarray_csrbank20_sel;
wire          csr_bankarray_csrbank21_in_r;
reg           csr_bankarray_csrbank21_in_re = 1'd0;
wire          csr_bankarray_csrbank21_in_w;
reg           csr_bankarray_csrbank21_in_we = 1'd0;
wire          csr_bankarray_csrbank21_oe0_r;
reg           csr_bankarray_csrbank21_oe0_re = 1'd0;
wire          csr_bankarray_csrbank21_oe0_w;
reg           csr_bankarray_csrbank21_oe0_we = 1'd0;
wire          csr_bankarray_csrbank21_out0_r;
reg           csr_bankarray_csrbank21_out0_re = 1'd0;
wire          csr_bankarray_csrbank21_out0_w;
reg           csr_bankarray_csrbank21_out0_we = 1'd0;
wire          csr_bankarray_csrbank21_sel;
wire          csr_bankarray_csrbank22_out0_r;
reg           csr_bankarray_csrbank22_out0_re = 1'd0;
wire          csr_bankarray_csrbank22_out0_w;
reg           csr_bankarray_csrbank22_out0_we = 1'd0;
wire          csr_bankarray_csrbank22_sel;
wire          csr_bankarray_csrbank23_in_r;
reg           csr_bankarray_csrbank23_in_re = 1'd0;
wire          csr_bankarray_csrbank23_in_w;
reg           csr_bankarray_csrbank23_in_we = 1'd0;
wire          csr_bankarray_csrbank23_sel;
wire          csr_bankarray_csrbank24_out0_r;
reg           csr_bankarray_csrbank24_out0_re = 1'd0;
wire          csr_bankarray_csrbank24_out0_w;
reg           csr_bankarray_csrbank24_out0_we = 1'd0;
wire          csr_bankarray_csrbank24_sel;
wire    [3:0] csr_bankarray_csrbank25_out0_r;
reg           csr_bankarray_csrbank25_out0_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank25_out0_w;
reg           csr_bankarray_csrbank25_out0_we = 1'd0;
wire          csr_bankarray_csrbank25_sel;
wire          csr_bankarray_csrbank26_en0_r;
reg           csr_bankarray_csrbank26_en0_re = 1'd0;
wire          csr_bankarray_csrbank26_en0_w;
reg           csr_bankarray_csrbank26_en0_we = 1'd0;
wire          csr_bankarray_csrbank26_ev_enable0_r;
reg           csr_bankarray_csrbank26_ev_enable0_re = 1'd0;
wire          csr_bankarray_csrbank26_ev_enable0_w;
reg           csr_bankarray_csrbank26_ev_enable0_we = 1'd0;
wire          csr_bankarray_csrbank26_ev_pending_r;
reg           csr_bankarray_csrbank26_ev_pending_re = 1'd0;
wire          csr_bankarray_csrbank26_ev_pending_w;
reg           csr_bankarray_csrbank26_ev_pending_we = 1'd0;
wire          csr_bankarray_csrbank26_ev_status_r;
reg           csr_bankarray_csrbank26_ev_status_re = 1'd0;
wire          csr_bankarray_csrbank26_ev_status_w;
reg           csr_bankarray_csrbank26_ev_status_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank26_load0_r;
reg           csr_bankarray_csrbank26_load0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank26_load0_w;
reg           csr_bankarray_csrbank26_load0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank26_reload0_r;
reg           csr_bankarray_csrbank26_reload0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank26_reload0_w;
reg           csr_bankarray_csrbank26_reload0_we = 1'd0;
wire          csr_bankarray_csrbank26_sel;
wire          csr_bankarray_csrbank26_update_value0_r;
reg           csr_bankarray_csrbank26_update_value0_re = 1'd0;
wire          csr_bankarray_csrbank26_update_value0_w;
reg           csr_bankarray_csrbank26_update_value0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank26_value_r;
reg           csr_bankarray_csrbank26_value_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank26_value_w;
reg           csr_bankarray_csrbank26_value_we = 1'd0;
wire          csr_bankarray_csrbank27_en0_r;
reg           csr_bankarray_csrbank27_en0_re = 1'd0;
wire          csr_bankarray_csrbank27_en0_w;
reg           csr_bankarray_csrbank27_en0_we = 1'd0;
wire          csr_bankarray_csrbank27_ev_enable0_r;
reg           csr_bankarray_csrbank27_ev_enable0_re = 1'd0;
wire          csr_bankarray_csrbank27_ev_enable0_w;
reg           csr_bankarray_csrbank27_ev_enable0_we = 1'd0;
wire          csr_bankarray_csrbank27_ev_pending_r;
reg           csr_bankarray_csrbank27_ev_pending_re = 1'd0;
wire          csr_bankarray_csrbank27_ev_pending_w;
reg           csr_bankarray_csrbank27_ev_pending_we = 1'd0;
wire          csr_bankarray_csrbank27_ev_status_r;
reg           csr_bankarray_csrbank27_ev_status_re = 1'd0;
wire          csr_bankarray_csrbank27_ev_status_w;
reg           csr_bankarray_csrbank27_ev_status_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank27_load0_r;
reg           csr_bankarray_csrbank27_load0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank27_load0_w;
reg           csr_bankarray_csrbank27_load0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank27_reload0_r;
reg           csr_bankarray_csrbank27_reload0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank27_reload0_w;
reg           csr_bankarray_csrbank27_reload0_we = 1'd0;
wire          csr_bankarray_csrbank27_sel;
wire          csr_bankarray_csrbank27_update_value0_r;
reg           csr_bankarray_csrbank27_update_value0_re = 1'd0;
wire          csr_bankarray_csrbank27_update_value0_w;
reg           csr_bankarray_csrbank27_update_value0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank27_value_r;
reg           csr_bankarray_csrbank27_value_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank27_value_w;
reg           csr_bankarray_csrbank27_value_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank28_ev_enable0_r;
reg           csr_bankarray_csrbank28_ev_enable0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank28_ev_enable0_w;
reg           csr_bankarray_csrbank28_ev_enable0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank28_ev_pending_r;
reg           csr_bankarray_csrbank28_ev_pending_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank28_ev_pending_w;
reg           csr_bankarray_csrbank28_ev_pending_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank28_ev_status_r;
reg           csr_bankarray_csrbank28_ev_status_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank28_ev_status_w;
reg           csr_bankarray_csrbank28_ev_status_we = 1'd0;
wire          csr_bankarray_csrbank28_rxempty_r;
reg           csr_bankarray_csrbank28_rxempty_re = 1'd0;
wire          csr_bankarray_csrbank28_rxempty_w;
reg           csr_bankarray_csrbank28_rxempty_we = 1'd0;
wire          csr_bankarray_csrbank28_rxfull_r;
reg           csr_bankarray_csrbank28_rxfull_re = 1'd0;
wire          csr_bankarray_csrbank28_rxfull_w;
reg           csr_bankarray_csrbank28_rxfull_we = 1'd0;
wire          csr_bankarray_csrbank28_sel;
wire          csr_bankarray_csrbank28_txempty_r;
reg           csr_bankarray_csrbank28_txempty_re = 1'd0;
wire          csr_bankarray_csrbank28_txempty_w;
reg           csr_bankarray_csrbank28_txempty_we = 1'd0;
wire          csr_bankarray_csrbank28_txfull_r;
reg           csr_bankarray_csrbank28_txfull_re = 1'd0;
wire          csr_bankarray_csrbank28_txfull_w;
reg           csr_bankarray_csrbank28_txfull_we = 1'd0;
wire          csr_bankarray_csrbank29_control0_r;
reg           csr_bankarray_csrbank29_control0_re = 1'd0;
wire          csr_bankarray_csrbank29_control0_w;
reg           csr_bankarray_csrbank29_control0_we = 1'd0;
wire          csr_bankarray_csrbank29_ev_enable0_r;
reg           csr_bankarray_csrbank29_ev_enable0_re = 1'd0;
wire          csr_bankarray_csrbank29_ev_enable0_w;
reg           csr_bankarray_csrbank29_ev_enable0_we = 1'd0;
wire          csr_bankarray_csrbank29_ev_pending_r;
reg           csr_bankarray_csrbank29_ev_pending_re = 1'd0;
wire          csr_bankarray_csrbank29_ev_pending_w;
reg           csr_bankarray_csrbank29_ev_pending_we = 1'd0;
wire          csr_bankarray_csrbank29_ev_status_r;
reg           csr_bankarray_csrbank29_ev_status_re = 1'd0;
wire          csr_bankarray_csrbank29_ev_status_w;
reg           csr_bankarray_csrbank29_ev_status_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank29_rx_data_r;
reg           csr_bankarray_csrbank29_rx_data_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank29_rx_data_w;
reg           csr_bankarray_csrbank29_rx_data_we = 1'd0;
wire          csr_bankarray_csrbank29_sel;
wire    [3:0] csr_bankarray_csrbank29_status_r;
reg           csr_bankarray_csrbank29_status_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank29_status_w;
reg           csr_bankarray_csrbank29_status_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank29_tx_data0_r;
reg           csr_bankarray_csrbank29_tx_data0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank29_tx_data0_w;
reg           csr_bankarray_csrbank29_tx_data0_we = 1'd0;
wire          csr_bankarray_csrbank2_in_r;
reg           csr_bankarray_csrbank2_in_re = 1'd0;
wire          csr_bankarray_csrbank2_in_w;
reg           csr_bankarray_csrbank2_in_we = 1'd0;
wire          csr_bankarray_csrbank2_oe0_r;
reg           csr_bankarray_csrbank2_oe0_re = 1'd0;
wire          csr_bankarray_csrbank2_oe0_w;
reg           csr_bankarray_csrbank2_oe0_we = 1'd0;
wire          csr_bankarray_csrbank2_out0_r;
reg           csr_bankarray_csrbank2_out0_re = 1'd0;
wire          csr_bankarray_csrbank2_out0_w;
reg           csr_bankarray_csrbank2_out0_we = 1'd0;
wire          csr_bankarray_csrbank2_sel;
wire          csr_bankarray_csrbank30_control0_r;
reg           csr_bankarray_csrbank30_control0_re = 1'd0;
wire          csr_bankarray_csrbank30_control0_w;
reg           csr_bankarray_csrbank30_control0_we = 1'd0;
wire          csr_bankarray_csrbank30_ev_enable0_r;
reg           csr_bankarray_csrbank30_ev_enable0_re = 1'd0;
wire          csr_bankarray_csrbank30_ev_enable0_w;
reg           csr_bankarray_csrbank30_ev_enable0_we = 1'd0;
wire          csr_bankarray_csrbank30_ev_pending_r;
reg           csr_bankarray_csrbank30_ev_pending_re = 1'd0;
wire          csr_bankarray_csrbank30_ev_pending_w;
reg           csr_bankarray_csrbank30_ev_pending_we = 1'd0;
wire          csr_bankarray_csrbank30_ev_status_r;
reg           csr_bankarray_csrbank30_ev_status_re = 1'd0;
wire          csr_bankarray_csrbank30_ev_status_w;
reg           csr_bankarray_csrbank30_ev_status_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank30_rx_data_r;
reg           csr_bankarray_csrbank30_rx_data_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank30_rx_data_w;
reg           csr_bankarray_csrbank30_rx_data_we = 1'd0;
wire          csr_bankarray_csrbank30_sel;
wire    [3:0] csr_bankarray_csrbank30_status_r;
reg           csr_bankarray_csrbank30_status_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank30_status_w;
reg           csr_bankarray_csrbank30_status_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank30_tx_data0_r;
reg           csr_bankarray_csrbank30_tx_data0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank30_tx_data0_w;
reg           csr_bankarray_csrbank30_tx_data0_we = 1'd0;
wire          csr_bankarray_csrbank3_in_r;
reg           csr_bankarray_csrbank3_in_re = 1'd0;
wire          csr_bankarray_csrbank3_in_w;
reg           csr_bankarray_csrbank3_in_we = 1'd0;
wire          csr_bankarray_csrbank3_oe0_r;
reg           csr_bankarray_csrbank3_oe0_re = 1'd0;
wire          csr_bankarray_csrbank3_oe0_w;
reg           csr_bankarray_csrbank3_oe0_we = 1'd0;
wire          csr_bankarray_csrbank3_out0_r;
reg           csr_bankarray_csrbank3_out0_re = 1'd0;
wire          csr_bankarray_csrbank3_out0_w;
reg           csr_bankarray_csrbank3_out0_we = 1'd0;
wire          csr_bankarray_csrbank3_sel;
wire          csr_bankarray_csrbank4_in_r;
reg           csr_bankarray_csrbank4_in_re = 1'd0;
wire          csr_bankarray_csrbank4_in_w;
reg           csr_bankarray_csrbank4_in_we = 1'd0;
wire          csr_bankarray_csrbank4_oe0_r;
reg           csr_bankarray_csrbank4_oe0_re = 1'd0;
wire          csr_bankarray_csrbank4_oe0_w;
reg           csr_bankarray_csrbank4_oe0_we = 1'd0;
wire          csr_bankarray_csrbank4_out0_r;
reg           csr_bankarray_csrbank4_out0_re = 1'd0;
wire          csr_bankarray_csrbank4_out0_w;
reg           csr_bankarray_csrbank4_out0_we = 1'd0;
wire          csr_bankarray_csrbank4_sel;
wire   [15:0] csr_bankarray_csrbank5_config0_r;
reg           csr_bankarray_csrbank5_config0_re = 1'd0;
wire   [15:0] csr_bankarray_csrbank5_config0_w;
reg           csr_bankarray_csrbank5_config0_we = 1'd0;
wire    [9:0] csr_bankarray_csrbank5_reg_control0_r;
reg           csr_bankarray_csrbank5_reg_control0_re = 1'd0;
wire    [9:0] csr_bankarray_csrbank5_reg_control0_w;
reg           csr_bankarray_csrbank5_reg_control0_we = 1'd0;
wire   [15:0] csr_bankarray_csrbank5_reg_rdata_r;
reg           csr_bankarray_csrbank5_reg_rdata_re = 1'd0;
wire   [15:0] csr_bankarray_csrbank5_reg_rdata_w;
reg           csr_bankarray_csrbank5_reg_rdata_we = 1'd0;
wire          csr_bankarray_csrbank5_reg_status_r;
reg           csr_bankarray_csrbank5_reg_status_re = 1'd0;
wire          csr_bankarray_csrbank5_reg_status_w;
reg           csr_bankarray_csrbank5_reg_status_we = 1'd0;
wire   [15:0] csr_bankarray_csrbank5_reg_wdata0_r;
reg           csr_bankarray_csrbank5_reg_wdata0_re = 1'd0;
wire   [15:0] csr_bankarray_csrbank5_reg_wdata0_w;
reg           csr_bankarray_csrbank5_reg_wdata0_we = 1'd0;
wire          csr_bankarray_csrbank5_sel;
wire    [4:0] csr_bankarray_csrbank5_status_r;
reg           csr_bankarray_csrbank5_status_re = 1'd0;
wire    [4:0] csr_bankarray_csrbank5_status_w;
reg           csr_bankarray_csrbank5_status_we = 1'd0;
wire          csr_bankarray_csrbank6_r_r;
reg           csr_bankarray_csrbank6_r_re = 1'd0;
wire          csr_bankarray_csrbank6_r_w;
reg           csr_bankarray_csrbank6_r_we = 1'd0;
wire          csr_bankarray_csrbank6_sel;
wire    [2:0] csr_bankarray_csrbank6_w0_r;
reg           csr_bankarray_csrbank6_w0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank6_w0_w;
reg           csr_bankarray_csrbank6_w0_we = 1'd0;
wire          csr_bankarray_csrbank7_r_r;
reg           csr_bankarray_csrbank7_r_re = 1'd0;
wire          csr_bankarray_csrbank7_r_w;
reg           csr_bankarray_csrbank7_r_we = 1'd0;
wire          csr_bankarray_csrbank7_sel;
wire    [2:0] csr_bankarray_csrbank7_w0_r;
reg           csr_bankarray_csrbank7_w0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank7_w0_w;
reg           csr_bankarray_csrbank7_w0_we = 1'd0;
wire          csr_bankarray_csrbank8_busy_r;
reg           csr_bankarray_csrbank8_busy_re = 1'd0;
wire          csr_bankarray_csrbank8_busy_w;
reg           csr_bankarray_csrbank8_busy_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank8_control0_r;
reg           csr_bankarray_csrbank8_control0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank8_control0_w;
reg           csr_bankarray_csrbank8_control0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank8_rx_r;
reg           csr_bankarray_csrbank8_rx_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank8_rx_w;
reg           csr_bankarray_csrbank8_rx_we = 1'd0;
wire          csr_bankarray_csrbank8_sel;
wire          csr_bankarray_csrbank8_ss_n0_r;
reg           csr_bankarray_csrbank8_ss_n0_re = 1'd0;
wire          csr_bankarray_csrbank8_ss_n0_w;
reg           csr_bankarray_csrbank8_ss_n0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank8_tx0_r;
reg           csr_bankarray_csrbank8_tx0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank8_tx0_w;
reg           csr_bankarray_csrbank8_tx0_we = 1'd0;
wire          csr_bankarray_csrbank9_in_r;
reg           csr_bankarray_csrbank9_in_re = 1'd0;
wire          csr_bankarray_csrbank9_in_w;
reg           csr_bankarray_csrbank9_in_we = 1'd0;
wire          csr_bankarray_csrbank9_sel;
wire    [7:0] csr_bankarray_dat_r;
wire   [13:0] csr_bankarray_interface0_bank_bus_adr;
reg    [31:0] csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface0_bank_bus_dat_w;
wire          csr_bankarray_interface0_bank_bus_re;
wire          csr_bankarray_interface0_bank_bus_we;
wire   [13:0] csr_bankarray_interface10_bank_bus_adr;
reg    [31:0] csr_bankarray_interface10_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface10_bank_bus_dat_w;
wire          csr_bankarray_interface10_bank_bus_re;
wire          csr_bankarray_interface10_bank_bus_we;
wire   [13:0] csr_bankarray_interface11_bank_bus_adr;
reg    [31:0] csr_bankarray_interface11_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface11_bank_bus_dat_w;
wire          csr_bankarray_interface11_bank_bus_re;
wire          csr_bankarray_interface11_bank_bus_we;
wire   [13:0] csr_bankarray_interface12_bank_bus_adr;
reg    [31:0] csr_bankarray_interface12_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface12_bank_bus_dat_w;
wire          csr_bankarray_interface12_bank_bus_re;
wire          csr_bankarray_interface12_bank_bus_we;
wire   [13:0] csr_bankarray_interface13_bank_bus_adr;
reg    [31:0] csr_bankarray_interface13_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface13_bank_bus_dat_w;
wire          csr_bankarray_interface13_bank_bus_re;
wire          csr_bankarray_interface13_bank_bus_we;
wire   [13:0] csr_bankarray_interface14_bank_bus_adr;
reg    [31:0] csr_bankarray_interface14_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface14_bank_bus_dat_w;
wire          csr_bankarray_interface14_bank_bus_re;
wire          csr_bankarray_interface14_bank_bus_we;
wire   [13:0] csr_bankarray_interface15_bank_bus_adr;
reg    [31:0] csr_bankarray_interface15_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface15_bank_bus_dat_w;
wire          csr_bankarray_interface15_bank_bus_re;
wire          csr_bankarray_interface15_bank_bus_we;
wire   [13:0] csr_bankarray_interface16_bank_bus_adr;
reg    [31:0] csr_bankarray_interface16_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface16_bank_bus_dat_w;
wire          csr_bankarray_interface16_bank_bus_re;
wire          csr_bankarray_interface16_bank_bus_we;
wire   [13:0] csr_bankarray_interface17_bank_bus_adr;
reg    [31:0] csr_bankarray_interface17_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface17_bank_bus_dat_w;
wire          csr_bankarray_interface17_bank_bus_re;
wire          csr_bankarray_interface17_bank_bus_we;
wire   [13:0] csr_bankarray_interface18_bank_bus_adr;
reg    [31:0] csr_bankarray_interface18_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface18_bank_bus_dat_w;
wire          csr_bankarray_interface18_bank_bus_re;
wire          csr_bankarray_interface18_bank_bus_we;
wire   [13:0] csr_bankarray_interface19_bank_bus_adr;
reg    [31:0] csr_bankarray_interface19_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface19_bank_bus_dat_w;
wire          csr_bankarray_interface19_bank_bus_re;
wire          csr_bankarray_interface19_bank_bus_we;
wire   [13:0] csr_bankarray_interface1_bank_bus_adr;
reg    [31:0] csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface1_bank_bus_dat_w;
wire          csr_bankarray_interface1_bank_bus_re;
wire          csr_bankarray_interface1_bank_bus_we;
wire   [13:0] csr_bankarray_interface20_bank_bus_adr;
reg    [31:0] csr_bankarray_interface20_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface20_bank_bus_dat_w;
wire          csr_bankarray_interface20_bank_bus_re;
wire          csr_bankarray_interface20_bank_bus_we;
wire   [13:0] csr_bankarray_interface21_bank_bus_adr;
reg    [31:0] csr_bankarray_interface21_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface21_bank_bus_dat_w;
wire          csr_bankarray_interface21_bank_bus_re;
wire          csr_bankarray_interface21_bank_bus_we;
wire   [13:0] csr_bankarray_interface22_bank_bus_adr;
reg    [31:0] csr_bankarray_interface22_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface22_bank_bus_dat_w;
wire          csr_bankarray_interface22_bank_bus_re;
wire          csr_bankarray_interface22_bank_bus_we;
wire   [13:0] csr_bankarray_interface23_bank_bus_adr;
reg    [31:0] csr_bankarray_interface23_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface23_bank_bus_dat_w;
wire          csr_bankarray_interface23_bank_bus_re;
wire          csr_bankarray_interface23_bank_bus_we;
wire   [13:0] csr_bankarray_interface24_bank_bus_adr;
reg    [31:0] csr_bankarray_interface24_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface24_bank_bus_dat_w;
wire          csr_bankarray_interface24_bank_bus_re;
wire          csr_bankarray_interface24_bank_bus_we;
wire   [13:0] csr_bankarray_interface25_bank_bus_adr;
reg    [31:0] csr_bankarray_interface25_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface25_bank_bus_dat_w;
wire          csr_bankarray_interface25_bank_bus_re;
wire          csr_bankarray_interface25_bank_bus_we;
wire   [13:0] csr_bankarray_interface26_bank_bus_adr;
reg    [31:0] csr_bankarray_interface26_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface26_bank_bus_dat_w;
wire          csr_bankarray_interface26_bank_bus_re;
wire          csr_bankarray_interface26_bank_bus_we;
wire   [13:0] csr_bankarray_interface27_bank_bus_adr;
reg    [31:0] csr_bankarray_interface27_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface27_bank_bus_dat_w;
wire          csr_bankarray_interface27_bank_bus_re;
wire          csr_bankarray_interface27_bank_bus_we;
wire   [13:0] csr_bankarray_interface28_bank_bus_adr;
reg    [31:0] csr_bankarray_interface28_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface28_bank_bus_dat_w;
wire          csr_bankarray_interface28_bank_bus_re;
wire          csr_bankarray_interface28_bank_bus_we;
wire   [13:0] csr_bankarray_interface29_bank_bus_adr;
reg    [31:0] csr_bankarray_interface29_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface29_bank_bus_dat_w;
wire          csr_bankarray_interface29_bank_bus_re;
wire          csr_bankarray_interface29_bank_bus_we;
wire   [13:0] csr_bankarray_interface2_bank_bus_adr;
reg    [31:0] csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface2_bank_bus_dat_w;
wire          csr_bankarray_interface2_bank_bus_re;
wire          csr_bankarray_interface2_bank_bus_we;
wire   [13:0] csr_bankarray_interface30_bank_bus_adr;
reg    [31:0] csr_bankarray_interface30_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface30_bank_bus_dat_w;
wire          csr_bankarray_interface30_bank_bus_re;
wire          csr_bankarray_interface30_bank_bus_we;
wire   [13:0] csr_bankarray_interface3_bank_bus_adr;
reg    [31:0] csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface3_bank_bus_dat_w;
wire          csr_bankarray_interface3_bank_bus_re;
wire          csr_bankarray_interface3_bank_bus_we;
wire   [13:0] csr_bankarray_interface4_bank_bus_adr;
reg    [31:0] csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface4_bank_bus_dat_w;
wire          csr_bankarray_interface4_bank_bus_re;
wire          csr_bankarray_interface4_bank_bus_we;
wire   [13:0] csr_bankarray_interface5_bank_bus_adr;
reg    [31:0] csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface5_bank_bus_dat_w;
wire          csr_bankarray_interface5_bank_bus_re;
wire          csr_bankarray_interface5_bank_bus_we;
wire   [13:0] csr_bankarray_interface6_bank_bus_adr;
reg    [31:0] csr_bankarray_interface6_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface6_bank_bus_dat_w;
wire          csr_bankarray_interface6_bank_bus_re;
wire          csr_bankarray_interface6_bank_bus_we;
wire   [13:0] csr_bankarray_interface7_bank_bus_adr;
reg    [31:0] csr_bankarray_interface7_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface7_bank_bus_dat_w;
wire          csr_bankarray_interface7_bank_bus_re;
wire          csr_bankarray_interface7_bank_bus_we;
wire   [13:0] csr_bankarray_interface8_bank_bus_adr;
reg    [31:0] csr_bankarray_interface8_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface8_bank_bus_dat_w;
wire          csr_bankarray_interface8_bank_bus_re;
wire          csr_bankarray_interface8_bank_bus_we;
wire   [13:0] csr_bankarray_interface9_bank_bus_adr;
reg    [31:0] csr_bankarray_interface9_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface9_bank_bus_dat_w;
wire          csr_bankarray_interface9_bank_bus_re;
wire          csr_bankarray_interface9_bank_bus_we;
wire          csr_bankarray_sel;
reg           csr_bankarray_sel_r = 1'd0;
wire   [13:0] csr_bankarray_sram_bus_adr;
reg    [31:0] csr_bankarray_sram_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_sram_bus_dat_w;
wire          csr_bankarray_sram_bus_re;
wire          csr_bankarray_sram_bus_we;
wire   [13:0] csr_interconnect_adr;
wire   [31:0] csr_interconnect_dat_r;
wire   [31:0] csr_interconnect_dat_w;
wire          csr_interconnect_re;
wire          csr_interconnect_we;
wire          done;
reg           error = 1'd0;
reg           flash_busy_re = 1'd0;
wire          flash_busy_status;
wire          flash_busy_we;
reg           flash_control_re = 1'd0;
reg     [2:0] flash_control_storage = 3'd0;
wire          flash_cpha0;
wire          flash_cpha1;
wire          flash_cpol0;
wire          flash_cpol1;
reg           flash_enable0 = 1'd0;
wire          flash_enable1;
wire    [7:0] flash_rx;
reg           flash_rx_re = 1'd0;
wire    [7:0] flash_rx_status;
wire          flash_rx_we;
reg           flash_spi_clk = 1'd0;
reg    [15:0] flash_spi_clk_counter = 16'd0;
reg           flash_ss_n_re = 1'd0;
reg           flash_ss_n_storage = 1'd1;
wire    [7:0] flash_tx;
reg           flash_tx_re = 1'd0;
reg     [7:0] flash_tx_storage = 8'd0;
reg     [1:0] fsm_next_state = 2'd0;
reg     [1:0] fsm_state = 2'd0;
wire          gatemate_debug_3_i;
reg           gatemate_debug_3_in_re = 1'd0;
wire          gatemate_debug_3_in_status;
wire          gatemate_debug_3_in_we;
wire          gatemate_debug_3_o;
wire          gatemate_debug_3_oe;
reg           gatemate_debug_3_oe_re = 1'd0;
reg           gatemate_debug_3_oe_storage = 1'd0;
reg           gatemate_debug_3_out_re = 1'd0;
reg           gatemate_debug_3_out_storage = 1'd0;
wire          gatemate_debug_4_i;
reg           gatemate_debug_4_in_re = 1'd0;
wire          gatemate_debug_4_in_status;
wire          gatemate_debug_4_in_we;
wire          gatemate_debug_4_o;
wire          gatemate_debug_4_oe;
reg           gatemate_debug_4_oe_re = 1'd0;
reg           gatemate_debug_4_oe_storage = 1'd0;
reg           gatemate_debug_4_out_re = 1'd0;
reg           gatemate_debug_4_out_storage = 1'd0;
wire          gatemate_debug_5_i;
reg           gatemate_debug_5_in_re = 1'd0;
wire          gatemate_debug_5_in_status;
wire          gatemate_debug_5_in_we;
wire          gatemate_debug_5_o;
wire          gatemate_debug_5_oe;
reg           gatemate_debug_5_oe_re = 1'd0;
reg           gatemate_debug_5_oe_storage = 1'd0;
reg           gatemate_debug_5_out_re = 1'd0;
reg           gatemate_debug_5_out_storage = 1'd0;
wire          gatematepll0;
wire          gatematepll1;
wire          gatematepll2;
reg           gatematepll3 = 1'd0;
wire          gatematepll4;
wire          gatematepll5;
wire          gatematepll_locked_s1;
reg           grant = 1'd0;
wire    [1:0] hyperram_addr;
reg           hyperram_clk = 1'd0;
reg     [3:0] hyperram_clk_ratio = 4'd4;
reg           hyperram_config_re = 1'd0;
reg    [15:0] hyperram_config_storage = 16'd1792;
reg           hyperram_done = 1'd0;
wire    [7:0] hyperram_latency;
reg           hyperram_latency_mode = 1'd0;
reg           hyperram_read = 1'd0;
reg           hyperram_reg_control_re = 1'd0;
reg     [9:0] hyperram_reg_control_storage = 10'd0;
reg           hyperram_reg_rdata_re = 1'd0;
reg    [15:0] hyperram_reg_rdata_status = 16'd0;
reg    [15:0] hyperram_reg_rdata_status_builder_next_value = 16'd0;
reg           hyperram_reg_rdata_status_builder_next_value_ce = 1'd0;
wire          hyperram_reg_rdata_we;
reg           hyperram_reg_status_re = 1'd0;
wire          hyperram_reg_status_status;
wire          hyperram_reg_status_we;
reg           hyperram_reg_wdata_re = 1'd0;
reg    [15:0] hyperram_reg_wdata_storage = 16'd0;
reg           hyperram_rst = 1'd0;
reg           hyperram_status_re = 1'd0;
reg     [4:0] hyperram_status_status = 5'd8;
wire          hyperram_status_we;
reg           hyperram_write = 1'd0;
wire    [7:0] hyperramsdrphy_dq_i;
reg     [7:0] hyperramsdrphy_dq_o = 8'd0;
wire          hyperramsdrphy_dq_oe;
wire          hyperramsdrphy_fall;
reg           hyperramsdrphy_ios_clk = 1'd0;
reg           hyperramsdrphy_ios_cs_n = 1'd0;
reg     [7:0] hyperramsdrphy_ios_dq_i = 8'd0;
reg     [7:0] hyperramsdrphy_ios_dq_o = 8'd0;
reg           hyperramsdrphy_ios_dq_oe = 1'd0;
wire          hyperramsdrphy_ios_rst_n;
wire          hyperramsdrphy_ios_rwds_i;
reg           hyperramsdrphy_ios_rwds_o = 1'd0;
reg           hyperramsdrphy_ios_rwds_oe = 1'd0;
reg     [1:0] hyperramsdrphy_phase = 2'd0;
wire          hyperramsdrphy_rise;
wire          hyperramsdrphy_rwds_i;
reg           hyperramsdrphy_rwds_i_d = 1'd0;
wire          hyperramsdrphy_rwds_o;
wire          hyperramsdrphy_rwds_oe;
wire          hyperramsdrphy_sink_first;
wire          hyperramsdrphy_sink_last;
wire          hyperramsdrphy_sink_payload_cmd;
wire          hyperramsdrphy_sink_payload_dat_r;
wire          hyperramsdrphy_sink_payload_dat_w;
wire    [7:0] hyperramsdrphy_sink_payload_dq;
wire          hyperramsdrphy_sink_payload_dq_oe;
wire          hyperramsdrphy_sink_payload_rwds;
wire          hyperramsdrphy_sink_payload_rwds_oe;
reg           hyperramsdrphy_sink_ready = 1'd0;
wire          hyperramsdrphy_sink_valid;
reg           hyperramsdrphy_source_first = 1'd0;
reg           hyperramsdrphy_source_last = 1'd0;
reg     [7:0] hyperramsdrphy_source_payload_dq = 8'd0;
wire          hyperramsdrphy_source_ready;
reg           hyperramsdrphy_source_valid = 1'd0;
reg           i2c0__r_re = 1'd0;
wire          i2c0__r_status;
wire          i2c0__r_we;
reg           i2c0__w_re = 1'd0;
reg     [2:0] i2c0__w_storage = 3'd5;
wire          i2c0_oe;
wire          i2c0_scl_1;
wire          i2c0_sda0;
wire          i2c0_sda1;
reg           i2c1__r_re = 1'd0;
wire          i2c1__r_status;
wire          i2c1__r_we;
reg           i2c1__w_re = 1'd0;
reg     [2:0] i2c1__w_storage = 3'd5;
wire          i2c1_oe;
wire          i2c1_scl_1;
wire          i2c1_sda0;
wire          i2c1_sda1;
reg           ice40_busy_re = 1'd0;
wire          ice40_busy_status;
wire          ice40_busy_we;
reg           ice40_cd_re = 1'd0;
wire          ice40_cd_status;
wire          ice40_cd_we;
reg           ice40_control_re = 1'd0;
reg     [2:0] ice40_control_storage = 3'd0;
reg           ice40_core_en_re = 1'd0;
reg           ice40_core_en_storage = 1'd0;
wire          ice40_cp_i;
reg           ice40_cp_in_re = 1'd0;
wire          ice40_cp_in_status;
wire          ice40_cp_in_we;
wire          ice40_cp_o;
wire          ice40_cp_oe;
reg           ice40_cp_oe_re = 1'd0;
reg           ice40_cp_oe_storage = 1'd0;
reg           ice40_cp_out_re = 1'd0;
reg           ice40_cp_out_storage = 1'd0;
wire          ice40_cpha0;
wire          ice40_cpha1;
wire          ice40_cpol0;
wire          ice40_cpol1;
reg           ice40_enable0 = 1'd0;
wire          ice40_enable1;
wire          ice40_io_vcore_0_i;
reg           ice40_io_vcore_0_in_re = 1'd0;
wire          ice40_io_vcore_0_in_status;
wire          ice40_io_vcore_0_in_we;
wire          ice40_io_vcore_0_o;
wire          ice40_io_vcore_0_oe;
reg           ice40_io_vcore_0_oe_re = 1'd0;
reg           ice40_io_vcore_0_oe_storage = 1'd0;
reg           ice40_io_vcore_0_out_re = 1'd0;
reg           ice40_io_vcore_0_out_storage = 1'd0;
wire          ice40_io_vcore_1_i;
reg           ice40_io_vcore_1_in_re = 1'd0;
wire          ice40_io_vcore_1_in_status;
wire          ice40_io_vcore_1_in_we;
wire          ice40_io_vcore_1_o;
wire          ice40_io_vcore_1_oe;
reg           ice40_io_vcore_1_oe_re = 1'd0;
reg           ice40_io_vcore_1_oe_storage = 1'd0;
reg           ice40_io_vcore_1_out_re = 1'd0;
reg           ice40_io_vcore_1_out_storage = 1'd0;
wire          ice40_io_vcore_2_i;
reg           ice40_io_vcore_2_in_re = 1'd0;
wire          ice40_io_vcore_2_in_status;
wire          ice40_io_vcore_2_in_we;
wire          ice40_io_vcore_2_o;
wire          ice40_io_vcore_2_oe;
reg           ice40_io_vcore_2_oe_re = 1'd0;
reg           ice40_io_vcore_2_oe_storage = 1'd0;
reg           ice40_io_vcore_2_out_re = 1'd0;
reg           ice40_io_vcore_2_out_storage = 1'd0;
wire          ice40_io_vcore_4_i;
reg           ice40_io_vcore_4_in_re = 1'd0;
wire          ice40_io_vcore_4_in_status;
wire          ice40_io_vcore_4_in_we;
wire          ice40_io_vcore_4_o;
wire          ice40_io_vcore_4_oe;
reg           ice40_io_vcore_4_oe_re = 1'd0;
reg           ice40_io_vcore_4_oe_storage = 1'd0;
reg           ice40_io_vcore_4_out_re = 1'd0;
reg           ice40_io_vcore_4_out_storage = 1'd0;
wire          ice40_io_vio_0_i;
reg           ice40_io_vio_0_in_re = 1'd0;
wire          ice40_io_vio_0_in_status;
wire          ice40_io_vio_0_in_we;
wire          ice40_io_vio_0_o;
wire          ice40_io_vio_0_oe;
reg           ice40_io_vio_0_oe_re = 1'd0;
reg           ice40_io_vio_0_oe_storage = 1'd0;
reg           ice40_io_vio_0_out_re = 1'd0;
reg           ice40_io_vio_0_out_storage = 1'd0;
wire          ice40_io_vio_1_i;
reg           ice40_io_vio_1_in_re = 1'd0;
wire          ice40_io_vio_1_in_status;
wire          ice40_io_vio_1_in_we;
wire          ice40_io_vio_1_o;
wire          ice40_io_vio_1_oe;
reg           ice40_io_vio_1_oe_re = 1'd0;
reg           ice40_io_vio_1_oe_storage = 1'd0;
reg           ice40_io_vio_1_out_re = 1'd0;
reg           ice40_io_vio_1_out_storage = 1'd0;
wire          ice40_io_vio_2_i;
reg           ice40_io_vio_2_in_re = 1'd0;
wire          ice40_io_vio_2_in_status;
wire          ice40_io_vio_2_in_we;
wire          ice40_io_vio_2_o;
wire          ice40_io_vio_2_oe;
reg           ice40_io_vio_2_oe_re = 1'd0;
reg           ice40_io_vio_2_oe_storage = 1'd0;
reg           ice40_io_vio_2_out_re = 1'd0;
reg           ice40_io_vio_2_out_storage = 1'd0;
wire          ice40_io_vio_3_i;
reg           ice40_io_vio_3_in_re = 1'd0;
wire          ice40_io_vio_3_in_status;
wire          ice40_io_vio_3_in_we;
wire          ice40_io_vio_3_o;
wire          ice40_io_vio_3_oe;
reg           ice40_io_vio_3_oe_re = 1'd0;
reg           ice40_io_vio_3_oe_storage = 1'd0;
reg           ice40_io_vio_3_out_re = 1'd0;
reg           ice40_io_vio_3_out_storage = 1'd0;
wire          ice40_io_vio_4_i;
reg           ice40_io_vio_4_in_re = 1'd0;
wire          ice40_io_vio_4_in_status;
wire          ice40_io_vio_4_in_we;
wire          ice40_io_vio_4_o;
wire          ice40_io_vio_4_oe;
reg           ice40_io_vio_4_oe_re = 1'd0;
reg           ice40_io_vio_4_oe_storage = 1'd0;
reg           ice40_io_vio_4_out_re = 1'd0;
reg           ice40_io_vio_4_out_storage = 1'd0;
wire          ice40_io_vio_5_i;
reg           ice40_io_vio_5_in_re = 1'd0;
wire          ice40_io_vio_5_in_status;
wire          ice40_io_vio_5_in_we;
wire          ice40_io_vio_5_o;
wire          ice40_io_vio_5_oe;
reg           ice40_io_vio_5_oe_re = 1'd0;
reg           ice40_io_vio_5_oe_storage = 1'd0;
reg           ice40_io_vio_5_out_re = 1'd0;
reg           ice40_io_vio_5_out_storage = 1'd0;
reg           ice40_osc_en_re = 1'd0;
reg           ice40_osc_en_storage = 1'd0;
reg           ice40_power_fauld_re = 1'd0;
wire          ice40_power_fauld_status;
wire          ice40_power_fauld_we;
wire    [7:0] ice40_rx;
reg           ice40_rx_re = 1'd0;
wire    [7:0] ice40_rx_status;
wire          ice40_rx_we;
reg           ice40_spi_clk = 1'd0;
reg    [15:0] ice40_spi_clk_counter = 16'd0;
reg           ice40_ss_n_re = 1'd0;
reg           ice40_ss_n_storage = 1'd1;
wire    [7:0] ice40_tx;
reg           ice40_tx_re = 1'd0;
reg     [7:0] ice40_tx_storage = 8'd0;
reg           ice40_vio_en_re = 1'd0;
reg           ice40_vio_en_storage = 1'd0;
reg           interface0_ack = 1'd0;
wire   [29:0] interface0_adr;
wire    [1:0] interface0_bte;
wire    [2:0] interface0_cti;
wire          interface0_cyc;
reg    [31:0] interface0_dat_r = 32'd0;
wire   [31:0] interface0_dat_w;
reg           interface0_err = 1'd0;
wire    [3:0] interface0_sel;
wire          interface0_stb;
wire          interface0_we;
reg    [13:0] interface1_adr = 14'd0;
wire   [31:0] interface1_dat_r;
reg    [31:0] interface1_dat_w = 32'd0;
reg           interface1_re = 1'd0;
reg           interface1_we = 1'd0;
reg           leds_re = 1'd0;
reg     [3:0] leds_storage = 4'd0;
reg           multiregimpl00 = 1'd0;
reg           multiregimpl01 = 1'd0;
reg           multiregimpl10 = 1'd0;
reg           multiregimpl10_1 = 1'd0;
reg           multiregimpl11 = 1'd0;
reg           multiregimpl110 = 1'd0;
reg           multiregimpl111 = 1'd0;
reg           multiregimpl112 = 1'd0;
reg           multiregimpl12 = 1'd0;
reg           multiregimpl130 = 1'd0;
reg           multiregimpl131 = 1'd0;
reg           multiregimpl132 = 1'd0;
reg           multiregimpl14 = 1'd0;
reg           multiregimpl150 = 1'd0;
reg           multiregimpl151 = 1'd0;
reg           multiregimpl152 = 1'd0;
reg           multiregimpl16 = 1'd0;
reg           multiregimpl170 = 1'd0;
reg           multiregimpl171 = 1'd0;
reg           multiregimpl172 = 1'd0;
reg           multiregimpl18 = 1'd0;
reg           multiregimpl190 = 1'd0;
reg           multiregimpl191 = 1'd0;
reg           multiregimpl192 = 1'd0;
reg           multiregimpl20 = 1'd0;
reg           multiregimpl20_1 = 1'd0;
reg           multiregimpl21 = 1'd0;
reg           multiregimpl210 = 1'd0;
reg           multiregimpl211 = 1'd0;
reg           multiregimpl212 = 1'd0;
reg           multiregimpl22 = 1'd0;
reg           multiregimpl230 = 1'd0;
reg           multiregimpl231 = 1'd0;
reg           multiregimpl232 = 1'd0;
reg           multiregimpl24 = 1'd0;
reg           multiregimpl250 = 1'd0;
reg           multiregimpl251 = 1'd0;
reg           multiregimpl252 = 1'd0;
reg           multiregimpl260 = 1'd0;
reg           multiregimpl261 = 1'd0;
reg           multiregimpl262 = 1'd0;
reg           multiregimpl27 = 1'd0;
reg           multiregimpl280 = 1'd0;
reg           multiregimpl281 = 1'd0;
reg           multiregimpl290 = 1'd0;
reg           multiregimpl291 = 1'd0;
reg           multiregimpl30 = 1'd0;
reg           multiregimpl300 = 1'd0;
reg           multiregimpl301 = 1'd0;
reg           multiregimpl31 = 1'd0;
reg           multiregimpl310 = 1'd0;
reg           multiregimpl311 = 1'd0;
reg           multiregimpl320 = 1'd0;
reg           multiregimpl321 = 1'd0;
reg           multiregimpl330 = 1'd0;
reg           multiregimpl331 = 1'd0;
reg           multiregimpl340 = 1'd0;
reg           multiregimpl341 = 1'd0;
reg           multiregimpl350 = 1'd0;
reg           multiregimpl351 = 1'd0;
reg           multiregimpl360 = 1'd0;
reg           multiregimpl361 = 1'd0;
reg           multiregimpl370 = 1'd0;
reg           multiregimpl371 = 1'd0;
reg           multiregimpl380 = 1'd0;
reg           multiregimpl381 = 1'd0;
reg           multiregimpl390 = 1'd0;
reg           multiregimpl391 = 1'd0;
reg           multiregimpl4 = 1'd0;
reg           multiregimpl400 = 1'd0;
reg           multiregimpl401 = 1'd0;
reg           multiregimpl5 = 1'd0;
reg           multiregimpl60 = 1'd0;
reg           multiregimpl61 = 1'd0;
reg           multiregimpl62 = 1'd0;
reg           multiregimpl70 = 1'd0;
reg           multiregimpl71 = 1'd0;
reg           multiregimpl72 = 1'd0;
reg           multiregimpl80 = 1'd0;
reg           multiregimpl81 = 1'd0;
reg           multiregimpl82 = 1'd0;
reg           multiregimpl90 = 1'd0;
reg           multiregimpl91 = 1'd0;
reg           multiregimpl92 = 1'd0;
reg           next_state = 1'd0;
wire    [1:0] request;
reg           rs232phyrx_next_state = 1'd0;
reg           rs232phyrx_state = 1'd0;
reg           rs232phytx_next_state = 1'd0;
reg           rs232phytx_state = 1'd0;
wire          rst1;
wire          rx_cdc_sink_first;
wire          rx_cdc_sink_last;
wire    [7:0] rx_cdc_sink_payload_dq;
wire          rx_cdc_sink_ready;
wire          rx_cdc_sink_valid;
wire          rx_cdc_source_first;
wire          rx_cdc_source_last;
wire    [7:0] rx_cdc_source_payload_dq;
wire          rx_cdc_source_ready;
wire          rx_cdc_source_valid;
reg    [29:0] self0 = 30'd0;
reg    [31:0] self1 = 32'd0;
reg     [3:0] self2 = 4'd0;
reg           self3 = 1'd0;
reg           self4 = 1'd0;
reg           self5 = 1'd0;
reg     [2:0] self6 = 3'd0;
reg     [1:0] self7 = 2'd0;
reg           shared_ack = 1'd0;
wire   [29:0] shared_adr;
wire    [1:0] shared_bte;
wire    [2:0] shared_cti;
wire          shared_cyc;
reg    [31:0] shared_dat_r = 32'd0;
wire   [31:0] shared_dat_w;
wire          shared_err;
wire    [3:0] shared_sel;
wire          shared_stb;
wire          shared_we;
reg     [3:0] slave_sel = 4'd0;
reg     [3:0] slave_sel_r = 4'd0;
reg           state = 1'd0;
reg     [1:0] syncfifo0_consume = 2'd0;
wire          syncfifo0_do_read;
wire          syncfifo0_fifo_in_first;
wire          syncfifo0_fifo_in_last;
wire          syncfifo0_fifo_in_payload_cmd;
wire          syncfifo0_fifo_in_payload_dat_r;
wire          syncfifo0_fifo_in_payload_dat_w;
wire    [7:0] syncfifo0_fifo_in_payload_dq;
wire          syncfifo0_fifo_in_payload_dq_oe;
wire          syncfifo0_fifo_in_payload_rwds;
wire          syncfifo0_fifo_in_payload_rwds_oe;
wire          syncfifo0_fifo_out_first;
wire          syncfifo0_fifo_out_last;
wire          syncfifo0_fifo_out_payload_cmd;
wire          syncfifo0_fifo_out_payload_dat_r;
wire          syncfifo0_fifo_out_payload_dat_w;
wire    [7:0] syncfifo0_fifo_out_payload_dq;
wire          syncfifo0_fifo_out_payload_dq_oe;
wire          syncfifo0_fifo_out_payload_rwds;
wire          syncfifo0_fifo_out_payload_rwds_oe;
reg     [2:0] syncfifo0_level = 3'd0;
reg     [1:0] syncfifo0_produce = 2'd0;
wire    [1:0] syncfifo0_rdport_adr;
wire   [15:0] syncfifo0_rdport_dat_r;
reg           syncfifo0_replace = 1'd0;
wire          syncfifo0_sink_first;
wire          syncfifo0_sink_last;
wire          syncfifo0_sink_payload_cmd;
wire          syncfifo0_sink_payload_dat_r;
wire          syncfifo0_sink_payload_dat_w;
wire    [7:0] syncfifo0_sink_payload_dq;
wire          syncfifo0_sink_payload_dq_oe;
wire          syncfifo0_sink_payload_rwds;
wire          syncfifo0_sink_payload_rwds_oe;
wire          syncfifo0_sink_ready;
wire          syncfifo0_sink_valid;
wire          syncfifo0_source_first;
wire          syncfifo0_source_last;
wire          syncfifo0_source_payload_cmd;
wire          syncfifo0_source_payload_dat_r;
wire          syncfifo0_source_payload_dat_w;
wire    [7:0] syncfifo0_source_payload_dq;
wire          syncfifo0_source_payload_dq_oe;
wire          syncfifo0_source_payload_rwds;
wire          syncfifo0_source_payload_rwds_oe;
wire          syncfifo0_source_ready;
wire          syncfifo0_source_valid;
wire   [15:0] syncfifo0_syncfifo0_din;
wire   [15:0] syncfifo0_syncfifo0_dout;
wire          syncfifo0_syncfifo0_re;
wire          syncfifo0_syncfifo0_readable;
wire          syncfifo0_syncfifo0_we;
wire          syncfifo0_syncfifo0_writable;
reg     [1:0] syncfifo0_wrport_adr = 2'd0;
wire   [15:0] syncfifo0_wrport_dat_r;
wire   [15:0] syncfifo0_wrport_dat_w;
wire          syncfifo0_wrport_we;
reg     [1:0] syncfifo1_consume = 2'd0;
wire          syncfifo1_do_read;
wire          syncfifo1_fifo_in_first;
wire          syncfifo1_fifo_in_last;
wire    [7:0] syncfifo1_fifo_in_payload_dq;
wire          syncfifo1_fifo_out_first;
wire          syncfifo1_fifo_out_last;
wire    [7:0] syncfifo1_fifo_out_payload_dq;
reg     [2:0] syncfifo1_level = 3'd0;
reg     [1:0] syncfifo1_produce = 2'd0;
wire    [1:0] syncfifo1_rdport_adr;
wire    [9:0] syncfifo1_rdport_dat_r;
reg           syncfifo1_replace = 1'd0;
wire          syncfifo1_sink_first;
wire          syncfifo1_sink_last;
wire    [7:0] syncfifo1_sink_payload_dq;
wire          syncfifo1_sink_ready;
wire          syncfifo1_sink_valid;
wire          syncfifo1_source_first;
wire          syncfifo1_source_last;
wire    [7:0] syncfifo1_source_payload_dq;
wire          syncfifo1_source_ready;
wire          syncfifo1_source_valid;
wire    [9:0] syncfifo1_syncfifo1_din;
wire    [9:0] syncfifo1_syncfifo1_dout;
wire          syncfifo1_syncfifo1_re;
wire          syncfifo1_syncfifo1_readable;
wire          syncfifo1_syncfifo1_we;
wire          syncfifo1_syncfifo1_writable;
reg     [1:0] syncfifo1_wrport_adr = 2'd0;
wire    [9:0] syncfifo1_wrport_dat_r;
wire    [9:0] syncfifo1_wrport_dat_w;
wire          syncfifo1_wrport_we;
wire          sys_clk;
wire          sys_rst;
reg           timer1_en_re = 1'd0;
reg           timer1_en_storage = 1'd0;
reg           timer1_enable_re = 1'd0;
reg           timer1_enable_storage = 1'd0;
wire          timer1_irq;
reg           timer1_load_re = 1'd0;
reg    [31:0] timer1_load_storage = 32'd0;
reg           timer1_pending_r = 1'd0;
reg           timer1_pending_re = 1'd0;
wire          timer1_pending_status;
wire          timer1_pending_we;
reg           timer1_reload_re = 1'd0;
reg    [31:0] timer1_reload_storage = 32'd0;
reg           timer1_status_re = 1'd0;
wire          timer1_status_status;
wire          timer1_status_we;
reg           timer1_update_value_re = 1'd0;
reg           timer1_update_value_storage = 1'd0;
reg    [31:0] timer1_value = 32'd0;
reg           timer1_value_re = 1'd0;
reg    [31:0] timer1_value_status = 32'd0;
wire          timer1_value_we;
wire          timer1_zero0;
wire          timer1_zero1;
wire          timer1_zero2;
reg           timer1_zero_clear = 1'd0;
reg           timer1_zero_pending = 1'd0;
wire          timer1_zero_status;
wire          timer1_zero_trigger;
reg           timer1_zero_trigger_d = 1'd0;
wire          tx_cdc_sink_first;
wire          tx_cdc_sink_last;
wire          tx_cdc_sink_payload_cmd;
wire          tx_cdc_sink_payload_dat_r;
wire          tx_cdc_sink_payload_dat_w;
wire    [7:0] tx_cdc_sink_payload_dq;
wire          tx_cdc_sink_payload_dq_oe;
wire          tx_cdc_sink_payload_rwds;
wire          tx_cdc_sink_payload_rwds_oe;
wire          tx_cdc_sink_ready;
wire          tx_cdc_sink_valid;
wire          tx_cdc_source_first;
wire          tx_cdc_source_last;
wire          tx_cdc_source_payload_cmd;
wire          tx_cdc_source_payload_dat_r;
wire          tx_cdc_source_payload_dat_w;
wire    [7:0] tx_cdc_source_payload_dq;
wire          tx_cdc_source_payload_dq_oe;
wire          tx_cdc_source_payload_rwds;
wire          tx_cdc_source_payload_rwds_oe;
wire          tx_cdc_source_ready;
wire          tx_cdc_source_valid;
wire          uart_ice40_DIN_RDY;
reg           uart_ice40_DIN_VLD = 1'd0;
wire          uart_ice40_DOUT_VLD;
wire          uart_ice40_FE;
wire          uart_ice40_PE;
reg           uart_ice40_control_re = 1'd0;
reg           uart_ice40_control_storage = 1'd0;
wire          uart_ice40_dout_vld_sig;
reg           uart_ice40_enable_re = 1'd0;
reg           uart_ice40_enable_storage = 1'd0;
wire          uart_ice40_irq;
reg           uart_ice40_pending_r = 1'd0;
reg           uart_ice40_pending_re = 1'd0;
wire          uart_ice40_pending_status;
wire          uart_ice40_pending_we;
wire          uart_ice40_rx0;
wire          uart_ice40_rx1;
wire          uart_ice40_rx2;
reg           uart_ice40_rx_clear = 1'd0;
reg     [7:0] uart_ice40_rx_data_buffer = 8'd0;
wire    [7:0] uart_ice40_rx_data_raw;
reg           uart_ice40_rx_data_re = 1'd0;
wire    [7:0] uart_ice40_rx_data_status;
wire          uart_ice40_rx_data_we;
reg           uart_ice40_rx_pending = 1'd0;
wire          uart_ice40_rx_status;
wire          uart_ice40_rx_trigger;
reg           uart_ice40_rx_trigger_d = 1'd0;
reg           uart_ice40_status_re0 = 1'd0;
reg           uart_ice40_status_re1 = 1'd0;
reg     [3:0] uart_ice40_status_status0 = 4'd0;
wire          uart_ice40_status_status1;
wire          uart_ice40_status_we0;
wire          uart_ice40_status_we1;
reg           uart_ice40_tx_data_re = 1'd0;
reg     [7:0] uart_ice40_tx_data_storage = 8'd0;
wire          uart_logging_DIN_RDY;
reg           uart_logging_DIN_VLD = 1'd0;
wire          uart_logging_DOUT_VLD;
wire          uart_logging_FE;
wire          uart_logging_PE;
reg           uart_logging_control_re = 1'd0;
reg           uart_logging_control_storage = 1'd0;
wire          uart_logging_dout_vld_sig;
reg           uart_logging_enable_re = 1'd0;
reg           uart_logging_enable_storage = 1'd0;
wire          uart_logging_irq;
reg           uart_logging_pending_r = 1'd0;
reg           uart_logging_pending_re = 1'd0;
wire          uart_logging_pending_status;
wire          uart_logging_pending_we;
wire          uart_logging_rx0;
wire          uart_logging_rx1;
wire          uart_logging_rx2;
reg           uart_logging_rx_clear = 1'd0;
reg     [7:0] uart_logging_rx_data_buffer = 8'd0;
wire    [7:0] uart_logging_rx_data_raw;
reg           uart_logging_rx_data_re = 1'd0;
wire    [7:0] uart_logging_rx_data_status;
wire          uart_logging_rx_data_we;
reg           uart_logging_rx_pending = 1'd0;
wire          uart_logging_rx_status;
wire          uart_logging_rx_trigger;
reg           uart_logging_rx_trigger_d = 1'd0;
reg           uart_logging_status_re0 = 1'd0;
reg           uart_logging_status_re1 = 1'd0;
reg     [3:0] uart_logging_status_status0 = 4'd0;
wire          uart_logging_status_status1;
wire          uart_logging_status_we0;
wire          uart_logging_status_we1;
reg           uart_logging_tx_data_re = 1'd0;
reg     [7:0] uart_logging_tx_data_storage = 8'd0;
wire          wait_1;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign basesoc_reset = (basesoc_soc_rst | basesoc_cpu_rst);
assign basesoc_bus_error = error;
always @(*) begin
    basesoc_interrupt <= 32'd0;
    basesoc_interrupt[1] <= basesoc_timer_irq;
    basesoc_interrupt[0] <= basesoc_uart_irq;
    basesoc_interrupt[3] <= uart_ice40_irq;
    basesoc_interrupt[2] <= uart_logging_irq;
end
assign crg_reset = ((~crg_rst_n) | 1'd0);
assign crg_clkin = clk10;
assign sys_clk = crg_clkout;
assign crg_locked = (gatematepll_locked_s1 & (~crg_reset));
assign shared_adr = self0;
assign shared_dat_w = self1;
assign shared_sel = self2;
assign shared_cyc = self3;
assign shared_stb = self4;
assign shared_we = self5;
assign shared_cti = self6;
assign shared_bte = self7;
assign basesoc_ibus_dat_r = shared_dat_r;
assign basesoc_dbus_dat_r = shared_dat_r;
assign basesoc_ibus_ack = (shared_ack & (grant == 1'd0));
assign basesoc_dbus_ack = (shared_ack & (grant == 1'd1));
assign basesoc_ibus_err = (shared_err & (grant == 1'd0));
assign basesoc_dbus_err = (shared_err & (grant == 1'd1));
assign request = {basesoc_dbus_cyc, basesoc_ibus_cyc};
always @(*) begin
    slave_sel <= 4'd0;
    slave_sel[0] <= (shared_adr[29:14] == 1'd0);
    slave_sel[1] <= (shared_adr[29:14] == 13'd4096);
    slave_sel[2] <= (shared_adr[29:21] == 7'd64);
    slave_sel[3] <= (shared_adr[29:14] == 16'd61440);
end
assign basesoc_basesoc_ram_bus_adr = shared_adr;
assign basesoc_basesoc_ram_bus_dat_w = shared_dat_w;
assign basesoc_basesoc_ram_bus_sel = shared_sel;
assign basesoc_basesoc_ram_bus_stb = shared_stb;
assign basesoc_basesoc_ram_bus_we = shared_we;
assign basesoc_basesoc_ram_bus_cti = shared_cti;
assign basesoc_basesoc_ram_bus_bte = shared_bte;
assign basesoc_ram_bus_ram_bus_adr = shared_adr;
assign basesoc_ram_bus_ram_bus_dat_w = shared_dat_w;
assign basesoc_ram_bus_ram_bus_sel = shared_sel;
assign basesoc_ram_bus_ram_bus_stb = shared_stb;
assign basesoc_ram_bus_ram_bus_we = shared_we;
assign basesoc_ram_bus_ram_bus_cti = shared_cti;
assign basesoc_ram_bus_ram_bus_bte = shared_bte;
assign bus_bus_adr = shared_adr;
assign bus_bus_dat_w = shared_dat_w;
assign bus_bus_sel = shared_sel;
assign bus_bus_stb = shared_stb;
assign bus_bus_we = shared_we;
assign bus_bus_cti = shared_cti;
assign bus_bus_bte = shared_bte;
assign interface0_adr = shared_adr;
assign interface0_dat_w = shared_dat_w;
assign interface0_sel = shared_sel;
assign interface0_stb = shared_stb;
assign interface0_we = shared_we;
assign interface0_cti = shared_cti;
assign interface0_bte = shared_bte;
assign basesoc_basesoc_ram_bus_cyc = (shared_cyc & slave_sel[0]);
assign basesoc_ram_bus_ram_bus_cyc = (shared_cyc & slave_sel[1]);
assign bus_bus_cyc = (shared_cyc & slave_sel[2]);
assign interface0_cyc = (shared_cyc & slave_sel[3]);
assign shared_err = (((basesoc_basesoc_ram_bus_err | basesoc_ram_bus_ram_bus_err) | bus_bus_err) | interface0_err);
assign wait_1 = ((shared_stb & shared_cyc) & (~shared_ack));
always @(*) begin
    error <= 1'd0;
    shared_ack <= 1'd0;
    shared_dat_r <= 32'd0;
    shared_ack <= (((basesoc_basesoc_ram_bus_ack | basesoc_ram_bus_ram_bus_ack) | bus_bus_ack) | interface0_ack);
    shared_dat_r <= (((({32{slave_sel_r[0]}} & basesoc_basesoc_ram_bus_dat_r) | ({32{slave_sel_r[1]}} & basesoc_ram_bus_ram_bus_dat_r)) | ({32{slave_sel_r[2]}} & bus_bus_dat_r)) | ({32{slave_sel_r[3]}} & interface0_dat_r));
    if (done) begin
        shared_dat_r <= 32'd4294967295;
        shared_ack <= 1'd1;
        error <= 1'd1;
    end
end
assign done = (count == 1'd0);
assign basesoc_bus_errors_status = basesoc_bus_errors;
assign basesoc_basesoc_adr = basesoc_basesoc_ram_bus_adr[13:0];
assign basesoc_basesoc_ram_bus_dat_r = basesoc_basesoc_dat_r;
always @(*) begin
    basesoc_ram_we <= 4'd0;
    basesoc_ram_we[0] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[0]);
    basesoc_ram_we[1] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[1]);
    basesoc_ram_we[2] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[2]);
    basesoc_ram_we[3] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[3]);
end
assign basesoc_ram_adr = basesoc_ram_bus_ram_bus_adr[13:0];
assign basesoc_ram_bus_ram_bus_dat_r = basesoc_ram_dat_r;
assign basesoc_ram_dat_w = basesoc_ram_bus_ram_bus_dat_w;
always @(*) begin
    basesoc_tx_count_builder_rs232phytx_next_value0 <= 4'd0;
    basesoc_tx_count_builder_rs232phytx_next_value_ce0 <= 1'd0;
    basesoc_tx_data_builder_rs232phytx_next_value2 <= 8'd0;
    basesoc_tx_data_builder_rs232phytx_next_value_ce2 <= 1'd0;
    basesoc_tx_enable <= 1'd0;
    basesoc_tx_sink_ready <= 1'd0;
    basesoc_usb_uart_tx_builder_rs232phytx_next_value1 <= 1'd0;
    basesoc_usb_uart_tx_builder_rs232phytx_next_value_ce1 <= 1'd0;
    rs232phytx_next_state <= 1'd0;
    rs232phytx_next_state <= rs232phytx_state;
    case (rs232phytx_state)
        1'd1: begin
            basesoc_tx_enable <= 1'd1;
            if (basesoc_tx_tick) begin
                basesoc_usb_uart_tx_builder_rs232phytx_next_value1 <= basesoc_tx_data;
                basesoc_usb_uart_tx_builder_rs232phytx_next_value_ce1 <= 1'd1;
                basesoc_tx_count_builder_rs232phytx_next_value0 <= (basesoc_tx_count + 1'd1);
                basesoc_tx_count_builder_rs232phytx_next_value_ce0 <= 1'd1;
                basesoc_tx_data_builder_rs232phytx_next_value2 <= {1'd1, basesoc_tx_data[7:1]};
                basesoc_tx_data_builder_rs232phytx_next_value_ce2 <= 1'd1;
                if ((basesoc_tx_count == 4'd9)) begin
                    basesoc_tx_sink_ready <= 1'd1;
                    rs232phytx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            basesoc_tx_count_builder_rs232phytx_next_value0 <= 1'd0;
            basesoc_tx_count_builder_rs232phytx_next_value_ce0 <= 1'd1;
            basesoc_usb_uart_tx_builder_rs232phytx_next_value1 <= 1'd1;
            basesoc_usb_uart_tx_builder_rs232phytx_next_value_ce1 <= 1'd1;
            if (basesoc_tx_sink_valid) begin
                basesoc_usb_uart_tx_builder_rs232phytx_next_value1 <= 1'd0;
                basesoc_usb_uart_tx_builder_rs232phytx_next_value_ce1 <= 1'd1;
                basesoc_tx_data_builder_rs232phytx_next_value2 <= basesoc_tx_sink_payload_data;
                basesoc_tx_data_builder_rs232phytx_next_value_ce2 <= 1'd1;
                rs232phytx_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    basesoc_rx_count_builder_rs232phyrx_next_value0 <= 4'd0;
    basesoc_rx_count_builder_rs232phyrx_next_value_ce0 <= 1'd0;
    basesoc_rx_data_builder_rs232phyrx_next_value1 <= 8'd0;
    basesoc_rx_data_builder_rs232phyrx_next_value_ce1 <= 1'd0;
    basesoc_rx_enable <= 1'd0;
    basesoc_rx_source_payload_data <= 8'd0;
    basesoc_rx_source_valid <= 1'd0;
    rs232phyrx_next_state <= 1'd0;
    rs232phyrx_next_state <= rs232phyrx_state;
    case (rs232phyrx_state)
        1'd1: begin
            basesoc_rx_enable <= 1'd1;
            if (basesoc_rx_tick) begin
                basesoc_rx_count_builder_rs232phyrx_next_value0 <= (basesoc_rx_count + 1'd1);
                basesoc_rx_count_builder_rs232phyrx_next_value_ce0 <= 1'd1;
                basesoc_rx_data_builder_rs232phyrx_next_value1 <= {basesoc_rx_rx, basesoc_rx_data[7:1]};
                basesoc_rx_data_builder_rs232phyrx_next_value_ce1 <= 1'd1;
                if ((basesoc_rx_count == 4'd9)) begin
                    basesoc_rx_source_valid <= (basesoc_rx_rx == 1'd1);
                    basesoc_rx_source_payload_data <= basesoc_rx_data;
                    rs232phyrx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            basesoc_rx_count_builder_rs232phyrx_next_value0 <= 1'd0;
            basesoc_rx_count_builder_rs232phyrx_next_value_ce0 <= 1'd1;
            if (((basesoc_rx_rx == 1'd0) & (basesoc_rx_rx_d == 1'd1))) begin
                rs232phyrx_next_state <= 1'd1;
            end
        end
    endcase
end
assign basesoc_uart_uart_sink_valid = basesoc_rx_source_valid;
assign basesoc_rx_source_ready = basesoc_uart_uart_sink_ready;
assign basesoc_uart_uart_sink_first = basesoc_rx_source_first;
assign basesoc_uart_uart_sink_last = basesoc_rx_source_last;
assign basesoc_uart_uart_sink_payload_data = basesoc_rx_source_payload_data;
assign basesoc_tx_sink_valid = basesoc_uart_uart_source_valid;
assign basesoc_uart_uart_source_ready = basesoc_tx_sink_ready;
assign basesoc_tx_sink_first = basesoc_uart_uart_source_first;
assign basesoc_tx_sink_last = basesoc_uart_uart_source_last;
assign basesoc_tx_sink_payload_data = basesoc_uart_uart_source_payload_data;
assign basesoc_uart_tx_fifo_sink_valid = basesoc_uart_rxtx_re;
assign basesoc_uart_tx_fifo_sink_payload_data = basesoc_uart_rxtx_r;
assign basesoc_uart_uart_source_valid = basesoc_uart_tx_fifo_source_valid;
assign basesoc_uart_tx_fifo_source_ready = basesoc_uart_uart_source_ready;
assign basesoc_uart_uart_source_first = basesoc_uart_tx_fifo_source_first;
assign basesoc_uart_uart_source_last = basesoc_uart_tx_fifo_source_last;
assign basesoc_uart_uart_source_payload_data = basesoc_uart_tx_fifo_source_payload_data;
assign basesoc_uart_txfull_status = (~basesoc_uart_tx_fifo_sink_ready);
assign basesoc_uart_txempty_status = (~basesoc_uart_tx_fifo_source_valid);
assign basesoc_uart_tx_trigger = basesoc_uart_tx_fifo_sink_ready;
assign basesoc_uart_rx_fifo_sink_valid = basesoc_uart_uart_sink_valid;
assign basesoc_uart_uart_sink_ready = basesoc_uart_rx_fifo_sink_ready;
assign basesoc_uart_rx_fifo_sink_first = basesoc_uart_uart_sink_first;
assign basesoc_uart_rx_fifo_sink_last = basesoc_uart_uart_sink_last;
assign basesoc_uart_rx_fifo_sink_payload_data = basesoc_uart_uart_sink_payload_data;
assign basesoc_uart_rxtx_w = basesoc_uart_rx_fifo_source_payload_data;
assign basesoc_uart_rx_fifo_source_ready = (basesoc_uart_rx_clear | (1'd0 & basesoc_uart_rxtx_we));
assign basesoc_uart_rxempty_status = (~basesoc_uart_rx_fifo_source_valid);
assign basesoc_uart_rxfull_status = (~basesoc_uart_rx_fifo_sink_ready);
assign basesoc_uart_rx_trigger = basesoc_uart_rx_fifo_source_valid;
assign basesoc_uart_tx0 = basesoc_uart_tx_status;
assign basesoc_uart_tx1 = basesoc_uart_tx_pending;
always @(*) begin
    basesoc_uart_tx_clear <= 1'd0;
    if ((basesoc_uart_pending_re & basesoc_uart_pending_r[0])) begin
        basesoc_uart_tx_clear <= 1'd1;
    end
end
assign basesoc_uart_rx0 = basesoc_uart_rx_status;
assign basesoc_uart_rx1 = basesoc_uart_rx_pending;
always @(*) begin
    basesoc_uart_rx_clear <= 1'd0;
    if ((basesoc_uart_pending_re & basesoc_uart_pending_r[1])) begin
        basesoc_uart_rx_clear <= 1'd1;
    end
end
assign basesoc_uart_irq = ((basesoc_uart_pending_status[0] & basesoc_uart_enable_storage[0]) | (basesoc_uart_pending_status[1] & basesoc_uart_enable_storage[1]));
assign basesoc_uart_tx_status = basesoc_uart_tx_trigger;
assign basesoc_uart_rx_status = basesoc_uart_rx_trigger;
assign basesoc_uart_tx_fifo_syncfifo_din = {basesoc_uart_tx_fifo_fifo_in_last, basesoc_uart_tx_fifo_fifo_in_first, basesoc_uart_tx_fifo_fifo_in_payload_data};
assign {basesoc_uart_tx_fifo_fifo_out_last, basesoc_uart_tx_fifo_fifo_out_first, basesoc_uart_tx_fifo_fifo_out_payload_data} = basesoc_uart_tx_fifo_syncfifo_dout;
assign basesoc_uart_tx_fifo_sink_ready = basesoc_uart_tx_fifo_syncfifo_writable;
assign basesoc_uart_tx_fifo_syncfifo_we = basesoc_uart_tx_fifo_sink_valid;
assign basesoc_uart_tx_fifo_fifo_in_first = basesoc_uart_tx_fifo_sink_first;
assign basesoc_uart_tx_fifo_fifo_in_last = basesoc_uart_tx_fifo_sink_last;
assign basesoc_uart_tx_fifo_fifo_in_payload_data = basesoc_uart_tx_fifo_sink_payload_data;
assign basesoc_uart_tx_fifo_source_valid = basesoc_uart_tx_fifo_readable;
assign basesoc_uart_tx_fifo_source_first = basesoc_uart_tx_fifo_fifo_out_first;
assign basesoc_uart_tx_fifo_source_last = basesoc_uart_tx_fifo_fifo_out_last;
assign basesoc_uart_tx_fifo_source_payload_data = basesoc_uart_tx_fifo_fifo_out_payload_data;
assign basesoc_uart_tx_fifo_re = basesoc_uart_tx_fifo_source_ready;
assign basesoc_uart_tx_fifo_syncfifo_re = (basesoc_uart_tx_fifo_syncfifo_readable & ((~basesoc_uart_tx_fifo_readable) | basesoc_uart_tx_fifo_re));
assign basesoc_uart_tx_fifo_level1 = (basesoc_uart_tx_fifo_level0 + basesoc_uart_tx_fifo_readable);
always @(*) begin
    basesoc_uart_tx_fifo_wrport_adr <= 4'd0;
    if (basesoc_uart_tx_fifo_replace) begin
        basesoc_uart_tx_fifo_wrport_adr <= (basesoc_uart_tx_fifo_produce - 1'd1);
    end else begin
        basesoc_uart_tx_fifo_wrport_adr <= basesoc_uart_tx_fifo_produce;
    end
end
assign basesoc_uart_tx_fifo_wrport_dat_w = basesoc_uart_tx_fifo_syncfifo_din;
assign basesoc_uart_tx_fifo_wrport_we = (basesoc_uart_tx_fifo_syncfifo_we & (basesoc_uart_tx_fifo_syncfifo_writable | basesoc_uart_tx_fifo_replace));
assign basesoc_uart_tx_fifo_do_read = (basesoc_uart_tx_fifo_syncfifo_readable & basesoc_uart_tx_fifo_syncfifo_re);
assign basesoc_uart_tx_fifo_rdport_adr = basesoc_uart_tx_fifo_consume;
assign basesoc_uart_tx_fifo_syncfifo_dout = basesoc_uart_tx_fifo_rdport_dat_r;
assign basesoc_uart_tx_fifo_rdport_re = basesoc_uart_tx_fifo_do_read;
assign basesoc_uart_tx_fifo_syncfifo_writable = (basesoc_uart_tx_fifo_level0 != 5'd16);
assign basesoc_uart_tx_fifo_syncfifo_readable = (basesoc_uart_tx_fifo_level0 != 1'd0);
assign basesoc_uart_rx_fifo_syncfifo_din = {basesoc_uart_rx_fifo_fifo_in_last, basesoc_uart_rx_fifo_fifo_in_first, basesoc_uart_rx_fifo_fifo_in_payload_data};
assign {basesoc_uart_rx_fifo_fifo_out_last, basesoc_uart_rx_fifo_fifo_out_first, basesoc_uart_rx_fifo_fifo_out_payload_data} = basesoc_uart_rx_fifo_syncfifo_dout;
assign basesoc_uart_rx_fifo_sink_ready = basesoc_uart_rx_fifo_syncfifo_writable;
assign basesoc_uart_rx_fifo_syncfifo_we = basesoc_uart_rx_fifo_sink_valid;
assign basesoc_uart_rx_fifo_fifo_in_first = basesoc_uart_rx_fifo_sink_first;
assign basesoc_uart_rx_fifo_fifo_in_last = basesoc_uart_rx_fifo_sink_last;
assign basesoc_uart_rx_fifo_fifo_in_payload_data = basesoc_uart_rx_fifo_sink_payload_data;
assign basesoc_uart_rx_fifo_source_valid = basesoc_uart_rx_fifo_readable;
assign basesoc_uart_rx_fifo_source_first = basesoc_uart_rx_fifo_fifo_out_first;
assign basesoc_uart_rx_fifo_source_last = basesoc_uart_rx_fifo_fifo_out_last;
assign basesoc_uart_rx_fifo_source_payload_data = basesoc_uart_rx_fifo_fifo_out_payload_data;
assign basesoc_uart_rx_fifo_re = basesoc_uart_rx_fifo_source_ready;
assign basesoc_uart_rx_fifo_syncfifo_re = (basesoc_uart_rx_fifo_syncfifo_readable & ((~basesoc_uart_rx_fifo_readable) | basesoc_uart_rx_fifo_re));
assign basesoc_uart_rx_fifo_level1 = (basesoc_uart_rx_fifo_level0 + basesoc_uart_rx_fifo_readable);
always @(*) begin
    basesoc_uart_rx_fifo_wrport_adr <= 4'd0;
    if (basesoc_uart_rx_fifo_replace) begin
        basesoc_uart_rx_fifo_wrport_adr <= (basesoc_uart_rx_fifo_produce - 1'd1);
    end else begin
        basesoc_uart_rx_fifo_wrport_adr <= basesoc_uart_rx_fifo_produce;
    end
end
assign basesoc_uart_rx_fifo_wrport_dat_w = basesoc_uart_rx_fifo_syncfifo_din;
assign basesoc_uart_rx_fifo_wrport_we = (basesoc_uart_rx_fifo_syncfifo_we & (basesoc_uart_rx_fifo_syncfifo_writable | basesoc_uart_rx_fifo_replace));
assign basesoc_uart_rx_fifo_do_read = (basesoc_uart_rx_fifo_syncfifo_readable & basesoc_uart_rx_fifo_syncfifo_re);
assign basesoc_uart_rx_fifo_rdport_adr = basesoc_uart_rx_fifo_consume;
assign basesoc_uart_rx_fifo_syncfifo_dout = basesoc_uart_rx_fifo_rdport_dat_r;
assign basesoc_uart_rx_fifo_rdport_re = basesoc_uart_rx_fifo_do_read;
assign basesoc_uart_rx_fifo_syncfifo_writable = (basesoc_uart_rx_fifo_level0 != 5'd16);
assign basesoc_uart_rx_fifo_syncfifo_readable = (basesoc_uart_rx_fifo_level0 != 1'd0);
assign basesoc_timer_zero_trigger = (basesoc_timer_value == 1'd0);
assign basesoc_timer_zero0 = basesoc_timer_zero_status;
assign basesoc_timer_zero1 = basesoc_timer_zero_pending;
always @(*) begin
    basesoc_timer_zero_clear <= 1'd0;
    if ((basesoc_timer_pending_re & basesoc_timer_pending_r)) begin
        basesoc_timer_zero_clear <= 1'd1;
    end
end
assign basesoc_timer_irq = (basesoc_timer_pending_status & basesoc_timer_enable_storage);
assign basesoc_timer_zero_status = basesoc_timer_zero_trigger;
assign timer1_zero_trigger = (timer1_value == 1'd0);
assign timer1_zero0 = timer1_zero_status;
assign timer1_zero1 = timer1_zero_pending;
always @(*) begin
    timer1_zero_clear <= 1'd0;
    if ((timer1_pending_re & timer1_pending_r)) begin
        timer1_zero_clear <= 1'd1;
    end
end
assign timer1_irq = (timer1_pending_status & timer1_enable_storage);
assign timer1_zero_status = timer1_zero_trigger;
assign {user_led_n3, user_led_n2, user_led_n1, user_led_n0} = leds_storage;
assign uart_logging_rx_data_status = uart_logging_rx_data_buffer;
assign uart_logging_rx_trigger = (uart_logging_dout_vld_sig == 1'd1);
assign uart_logging_DOUT_VLD = uart_logging_dout_vld_sig;
assign uart_logging_rx0 = uart_logging_rx_status;
assign uart_logging_rx1 = uart_logging_rx_pending;
always @(*) begin
    uart_logging_rx_clear <= 1'd0;
    if ((uart_logging_pending_re & uart_logging_pending_r)) begin
        uart_logging_rx_clear <= 1'd1;
    end
end
assign uart_logging_irq = (uart_logging_pending_status & uart_logging_enable_storage);
assign uart_logging_rx_status = uart_logging_rx_trigger;
assign uart_ice40_rx_data_status = uart_ice40_rx_data_buffer;
assign uart_ice40_rx_trigger = (uart_ice40_dout_vld_sig == 1'd1);
assign uart_ice40_DOUT_VLD = uart_ice40_dout_vld_sig;
assign uart_ice40_rx0 = uart_ice40_rx_status;
assign uart_ice40_rx1 = uart_ice40_rx_pending;
always @(*) begin
    uart_ice40_rx_clear <= 1'd0;
    if ((uart_ice40_pending_re & uart_ice40_pending_r)) begin
        uart_ice40_rx_clear <= 1'd1;
    end
end
assign uart_ice40_irq = (uart_ice40_pending_status & uart_ice40_enable_storage);
assign uart_ice40_rx_status = uart_ice40_rx_trigger;
assign core_en_ice40 = ice40_core_en_storage;
assign vio_en_ice40 = ice40_vio_en_storage;
assign osc_en_ice40 = ice40_osc_en_storage;
assign ice40_tx = ice40_tx_storage;
assign ice40_rx = ice40_rx_status;
assign ice40_enable1 = ice40_enable0;
assign ice40_cpol1 = ice40_cpol0;
assign ice40_cpha1 = ice40_cpha0;
assign spi_ice40_cs_n = ice40_ss_n_storage;
assign ice40_cp_oe = ice40_cp_oe_storage;
assign ice40_cp_o = ice40_cp_out_storage;
assign flash_tx = flash_tx_storage;
assign flash_rx = flash_rx_status;
assign flash_enable1 = flash_enable0;
assign flash_cpol1 = flash_cpol0;
assign flash_cpha1 = flash_cpha0;
assign spi_flash_cs_n = flash_ss_n_storage;
assign core_bus_adr0 = bus_bus_adr;
assign core_bus_dat_w0 = bus_bus_dat_w;
assign bus_bus_dat_r = core_bus_dat_r;
assign core_bus_sel0 = bus_bus_sel;
assign core_bus_cyc = bus_bus_cyc;
assign core_bus_stb = bus_bus_stb;
assign bus_bus_ack = core_bus_ack;
assign core_bus_we0 = bus_bus_we;
assign core_bus_cti0 = bus_bus_cti;
assign core_bus_bte = bus_bus_bte;
assign bus_bus_err = core_bus_err;
assign core_rst = hyperram_rst;
assign core_latency = hyperram_latency;
assign hyperramsdrphy_rise = (hyperramsdrphy_phase == 2'd3);
assign hyperramsdrphy_fall = (hyperramsdrphy_phase == 1'd1);
always @(*) begin
    hyperram_clk <= 1'd0;
    case (hyperramsdrphy_phase)
        1'd0: begin
            hyperram_clk <= 1'd0;
        end
        1'd1: begin
            hyperram_clk <= 1'd1;
        end
        2'd2: begin
            hyperram_clk <= 1'd1;
        end
        2'd3: begin
            hyperram_clk <= 1'd0;
        end
    endcase
end
always @(*) begin
    clockdomainsrenamer_next_state <= 2'd0;
    hyperramsdrphy_ios_clk <= 1'd0;
    hyperramsdrphy_ios_cs_n <= 1'd0;
    hyperramsdrphy_ios_dq_o <= 8'd0;
    hyperramsdrphy_ios_dq_oe <= 1'd0;
    hyperramsdrphy_ios_rwds_o <= 1'd0;
    hyperramsdrphy_ios_rwds_oe <= 1'd0;
    hyperramsdrphy_sink_ready <= 1'd0;
    hyperramsdrphy_source_last <= 1'd0;
    hyperramsdrphy_source_payload_dq <= 8'd0;
    hyperramsdrphy_source_valid <= 1'd0;
    if ((hyperramsdrphy_sink_valid & hyperramsdrphy_sink_payload_dat_r)) begin
        if ((hyperramsdrphy_ios_rwds_i ^ hyperramsdrphy_rwds_i_d)) begin
            hyperramsdrphy_source_valid <= 1'd1;
            hyperramsdrphy_source_payload_dq <= hyperramsdrphy_ios_dq_i;
        end
    end
    clockdomainsrenamer_next_state <= clockdomainsrenamer_state;
    case (clockdomainsrenamer_state)
        1'd1: begin
            if (hyperramsdrphy_sink_valid) begin
                hyperramsdrphy_ios_clk <= 1'd1;
                hyperramsdrphy_ios_dq_o <= hyperramsdrphy_sink_payload_dq;
                hyperramsdrphy_ios_dq_oe <= hyperramsdrphy_sink_payload_dq_oe;
                hyperramsdrphy_ios_rwds_o <= hyperramsdrphy_sink_payload_rwds;
                hyperramsdrphy_ios_rwds_oe <= hyperramsdrphy_sink_payload_rwds_oe;
                if ((hyperramsdrphy_rise | hyperramsdrphy_fall)) begin
                    hyperramsdrphy_sink_ready <= 1'd1;
                end
            end else begin
                clockdomainsrenamer_next_state <= 2'd2;
            end
        end
        2'd2: begin
            hyperramsdrphy_source_valid <= 1'd1;
            hyperramsdrphy_source_last <= 1'd1;
            if (hyperramsdrphy_source_ready) begin
                clockdomainsrenamer_next_state <= 1'd0;
            end
        end
        default: begin
            hyperramsdrphy_ios_cs_n <= 1'd1;
            if ((hyperramsdrphy_sink_valid & hyperramsdrphy_rise)) begin
                clockdomainsrenamer_next_state <= 1'd1;
            end
        end
    endcase
end
assign syncfifo0_syncfifo0_din = {syncfifo0_fifo_in_last, syncfifo0_fifo_in_first, syncfifo0_fifo_in_payload_rwds_oe, syncfifo0_fifo_in_payload_rwds, syncfifo0_fifo_in_payload_dq_oe, syncfifo0_fifo_in_payload_dq, syncfifo0_fifo_in_payload_dat_r, syncfifo0_fifo_in_payload_dat_w, syncfifo0_fifo_in_payload_cmd};
assign {syncfifo0_fifo_out_last, syncfifo0_fifo_out_first, syncfifo0_fifo_out_payload_rwds_oe, syncfifo0_fifo_out_payload_rwds, syncfifo0_fifo_out_payload_dq_oe, syncfifo0_fifo_out_payload_dq, syncfifo0_fifo_out_payload_dat_r, syncfifo0_fifo_out_payload_dat_w, syncfifo0_fifo_out_payload_cmd} = syncfifo0_syncfifo0_dout;
assign syncfifo0_sink_ready = syncfifo0_syncfifo0_writable;
assign syncfifo0_syncfifo0_we = syncfifo0_sink_valid;
assign syncfifo0_fifo_in_first = syncfifo0_sink_first;
assign syncfifo0_fifo_in_last = syncfifo0_sink_last;
assign syncfifo0_fifo_in_payload_cmd = syncfifo0_sink_payload_cmd;
assign syncfifo0_fifo_in_payload_dat_w = syncfifo0_sink_payload_dat_w;
assign syncfifo0_fifo_in_payload_dat_r = syncfifo0_sink_payload_dat_r;
assign syncfifo0_fifo_in_payload_dq = syncfifo0_sink_payload_dq;
assign syncfifo0_fifo_in_payload_dq_oe = syncfifo0_sink_payload_dq_oe;
assign syncfifo0_fifo_in_payload_rwds = syncfifo0_sink_payload_rwds;
assign syncfifo0_fifo_in_payload_rwds_oe = syncfifo0_sink_payload_rwds_oe;
assign syncfifo0_source_valid = syncfifo0_syncfifo0_readable;
assign syncfifo0_source_first = syncfifo0_fifo_out_first;
assign syncfifo0_source_last = syncfifo0_fifo_out_last;
assign syncfifo0_source_payload_cmd = syncfifo0_fifo_out_payload_cmd;
assign syncfifo0_source_payload_dat_w = syncfifo0_fifo_out_payload_dat_w;
assign syncfifo0_source_payload_dat_r = syncfifo0_fifo_out_payload_dat_r;
assign syncfifo0_source_payload_dq = syncfifo0_fifo_out_payload_dq;
assign syncfifo0_source_payload_dq_oe = syncfifo0_fifo_out_payload_dq_oe;
assign syncfifo0_source_payload_rwds = syncfifo0_fifo_out_payload_rwds;
assign syncfifo0_source_payload_rwds_oe = syncfifo0_fifo_out_payload_rwds_oe;
assign syncfifo0_syncfifo0_re = syncfifo0_source_ready;
always @(*) begin
    syncfifo0_wrport_adr <= 2'd0;
    if (syncfifo0_replace) begin
        syncfifo0_wrport_adr <= (syncfifo0_produce - 1'd1);
    end else begin
        syncfifo0_wrport_adr <= syncfifo0_produce;
    end
end
assign syncfifo0_wrport_dat_w = syncfifo0_syncfifo0_din;
assign syncfifo0_wrport_we = (syncfifo0_syncfifo0_we & (syncfifo0_syncfifo0_writable | syncfifo0_replace));
assign syncfifo0_do_read = (syncfifo0_syncfifo0_readable & syncfifo0_syncfifo0_re);
assign syncfifo0_rdport_adr = syncfifo0_consume;
assign syncfifo0_syncfifo0_dout = syncfifo0_rdport_dat_r;
assign syncfifo0_syncfifo0_writable = (syncfifo0_level != 3'd4);
assign syncfifo0_syncfifo0_readable = (syncfifo0_level != 1'd0);
assign syncfifo1_syncfifo1_din = {syncfifo1_fifo_in_last, syncfifo1_fifo_in_first, syncfifo1_fifo_in_payload_dq};
assign {syncfifo1_fifo_out_last, syncfifo1_fifo_out_first, syncfifo1_fifo_out_payload_dq} = syncfifo1_syncfifo1_dout;
assign syncfifo1_sink_ready = syncfifo1_syncfifo1_writable;
assign syncfifo1_syncfifo1_we = syncfifo1_sink_valid;
assign syncfifo1_fifo_in_first = syncfifo1_sink_first;
assign syncfifo1_fifo_in_last = syncfifo1_sink_last;
assign syncfifo1_fifo_in_payload_dq = syncfifo1_sink_payload_dq;
assign syncfifo1_source_valid = syncfifo1_syncfifo1_readable;
assign syncfifo1_source_first = syncfifo1_fifo_out_first;
assign syncfifo1_source_last = syncfifo1_fifo_out_last;
assign syncfifo1_source_payload_dq = syncfifo1_fifo_out_payload_dq;
assign syncfifo1_syncfifo1_re = syncfifo1_source_ready;
always @(*) begin
    syncfifo1_wrport_adr <= 2'd0;
    if (syncfifo1_replace) begin
        syncfifo1_wrport_adr <= (syncfifo1_produce - 1'd1);
    end else begin
        syncfifo1_wrport_adr <= syncfifo1_produce;
    end
end
assign syncfifo1_wrport_dat_w = syncfifo1_syncfifo1_din;
assign syncfifo1_wrport_we = (syncfifo1_syncfifo1_we & (syncfifo1_syncfifo1_writable | syncfifo1_replace));
assign syncfifo1_do_read = (syncfifo1_syncfifo1_readable & syncfifo1_syncfifo1_re);
assign syncfifo1_rdport_adr = syncfifo1_consume;
assign syncfifo1_syncfifo1_dout = syncfifo1_rdport_dat_r;
assign syncfifo1_syncfifo1_writable = (syncfifo1_level != 3'd4);
assign syncfifo1_syncfifo1_readable = (syncfifo1_level != 1'd0);
assign tx_cdc_source_valid = tx_cdc_sink_valid;
assign tx_cdc_sink_ready = tx_cdc_source_ready;
assign tx_cdc_source_first = tx_cdc_sink_first;
assign tx_cdc_source_last = tx_cdc_sink_last;
assign tx_cdc_source_payload_cmd = tx_cdc_sink_payload_cmd;
assign tx_cdc_source_payload_dat_w = tx_cdc_sink_payload_dat_w;
assign tx_cdc_source_payload_dat_r = tx_cdc_sink_payload_dat_r;
assign tx_cdc_source_payload_dq = tx_cdc_sink_payload_dq;
assign tx_cdc_source_payload_dq_oe = tx_cdc_sink_payload_dq_oe;
assign tx_cdc_source_payload_rwds = tx_cdc_sink_payload_rwds;
assign tx_cdc_source_payload_rwds_oe = tx_cdc_sink_payload_rwds_oe;
assign rx_cdc_source_valid = rx_cdc_sink_valid;
assign rx_cdc_sink_ready = rx_cdc_source_ready;
assign rx_cdc_source_first = rx_cdc_sink_first;
assign rx_cdc_source_last = rx_cdc_sink_last;
assign rx_cdc_source_payload_dq = rx_cdc_sink_payload_dq;
assign hyperramsdrphy_ios_rst_n = (~core_rst);
always @(*) begin
    core_dat_rx_conv_sink_first <= 1'd0;
    core_dat_rx_conv_sink_last <= 1'd0;
    core_dat_rx_conv_sink_payload_dq <= 8'd0;
    core_dat_rx_conv_sink_valid <= 1'd0;
    core_reg_rx_conv_sink_first <= 1'd0;
    core_reg_rx_conv_sink_last <= 1'd0;
    core_reg_rx_conv_sink_payload_dq <= 8'd0;
    core_reg_rx_conv_sink_valid <= 1'd0;
    core_sink_sink_ready <= 1'd0;
    if ((core_reg_stb & (~core_reg_we))) begin
        core_reg_rx_conv_sink_valid <= core_sink_sink_valid;
        core_sink_sink_ready <= core_reg_rx_conv_sink_ready;
        core_reg_rx_conv_sink_first <= core_sink_sink_first;
        core_reg_rx_conv_sink_last <= core_sink_sink_last;
        core_reg_rx_conv_sink_payload_dq <= core_sink_sink_payload_dq;
    end else begin
        core_dat_rx_conv_sink_valid <= core_sink_sink_valid;
        core_sink_sink_ready <= core_dat_rx_conv_sink_ready;
        core_dat_rx_conv_sink_first <= core_sink_sink_first;
        core_dat_rx_conv_sink_last <= core_sink_sink_last;
        core_dat_rx_conv_sink_payload_dq <= core_sink_sink_payload_dq;
    end
end
assign core_dat_rx_conv_source_ready = 1'd1;
assign core_reg_rx_conv_source_ready = 1'd1;
always @(*) begin
    core_cmd <= 48'd0;
    if (core_reg_stb) begin
        core_cmd[47] <= (~core_reg_we);
        core_cmd[46] <= 1'd1;
        core_cmd[45] <= 1'd1;
        case (core_reg_adr)
            1'd0: begin
                core_cmd[39:0] <= 1'd0;
            end
            1'd1: begin
                core_cmd[39:0] <= 1'd1;
            end
            2'd2: begin
                core_cmd[39:0] <= 25'd16777216;
            end
            2'd3: begin
                core_cmd[39:0] <= 25'd16777217;
            end
        endcase
    end else begin
        core_cmd[47] <= (~core_bus_we0);
        core_cmd[46] <= 1'd0;
        core_cmd[45] <= 1'd1;
        core_cmd[44:16] <= core_bus_adr0[29:2];
        core_cmd[2:1] <= core_bus_adr0;
    end
end
assign core_burst_w = ((core_bus_cti1 == 2'd2) | ((core_bus_we0 == core_bus_we1) & (core_bus_adr0 == (core_bus_adr1 + 1'd1))));
assign core_burst_r = ((core_bus_cti1 == 2'd2) | ((core_bus_we0 == core_bus_we1) & (core_bus_adr0 == (core_bus_adr1 + 1'd1))));
assign core_cmd_tx_conv_source_source_valid = core_cmd_tx_conv_converter_source_valid;
assign core_cmd_tx_conv_converter_source_ready = core_cmd_tx_conv_source_source_ready;
assign core_cmd_tx_conv_source_source_first = core_cmd_tx_conv_converter_source_first;
assign core_cmd_tx_conv_source_source_last = core_cmd_tx_conv_converter_source_last;
assign core_cmd_tx_conv_source_source_payload_data = core_cmd_tx_conv_converter_source_payload_data;
assign core_cmd_tx_conv_converter_first = (core_cmd_tx_conv_converter_mux == 1'd0);
assign core_cmd_tx_conv_converter_last = (core_cmd_tx_conv_converter_mux == 3'd5);
assign core_cmd_tx_conv_converter_source_valid = core_cmd_tx_conv_converter_sink_valid;
assign core_cmd_tx_conv_converter_source_first = (core_cmd_tx_conv_converter_sink_first & core_cmd_tx_conv_converter_first);
assign core_cmd_tx_conv_converter_source_last = (core_cmd_tx_conv_converter_sink_last & core_cmd_tx_conv_converter_last);
assign core_cmd_tx_conv_converter_sink_ready = (core_cmd_tx_conv_converter_last & core_cmd_tx_conv_converter_source_ready);
always @(*) begin
    core_cmd_tx_conv_converter_source_payload_data <= 8'd0;
    case (core_cmd_tx_conv_converter_mux)
        1'd0: begin
            core_cmd_tx_conv_converter_source_payload_data <= core_cmd_tx_conv_converter_sink_payload_data[47:40];
        end
        1'd1: begin
            core_cmd_tx_conv_converter_source_payload_data <= core_cmd_tx_conv_converter_sink_payload_data[39:32];
        end
        2'd2: begin
            core_cmd_tx_conv_converter_source_payload_data <= core_cmd_tx_conv_converter_sink_payload_data[31:24];
        end
        2'd3: begin
            core_cmd_tx_conv_converter_source_payload_data <= core_cmd_tx_conv_converter_sink_payload_data[23:16];
        end
        3'd4: begin
            core_cmd_tx_conv_converter_source_payload_data <= core_cmd_tx_conv_converter_sink_payload_data[15:8];
        end
        default: begin
            core_cmd_tx_conv_converter_source_payload_data <= core_cmd_tx_conv_converter_sink_payload_data[7:0];
        end
    endcase
end
assign core_cmd_tx_conv_converter_source_payload_valid_token_count = core_cmd_tx_conv_converter_last;
assign core_reg_tx_conv_converter_sink_valid = core_reg_tx_conv_sink_valid;
assign core_reg_tx_conv_converter_sink_first = core_reg_tx_conv_sink_first;
assign core_reg_tx_conv_converter_sink_last = core_reg_tx_conv_sink_last;
assign core_reg_tx_conv_sink_ready = core_reg_tx_conv_converter_sink_ready;
always @(*) begin
    core_reg_tx_conv_converter_sink_payload_data <= 18'd0;
    core_reg_tx_conv_converter_sink_payload_data[7:0] <= core_reg_tx_conv_sink_payload_dq[7:0];
    core_reg_tx_conv_converter_sink_payload_data[8] <= core_reg_tx_conv_sink_payload_rwds[0];
    core_reg_tx_conv_converter_sink_payload_data[16:9] <= core_reg_tx_conv_sink_payload_dq[15:8];
    core_reg_tx_conv_converter_sink_payload_data[17] <= core_reg_tx_conv_sink_payload_rwds[1];
end
assign core_reg_tx_conv_source_valid = core_reg_tx_conv_source_source_valid;
assign core_reg_tx_conv_source_first = core_reg_tx_conv_source_source_first;
assign core_reg_tx_conv_source_last = core_reg_tx_conv_source_source_last;
assign core_reg_tx_conv_source_source_ready = core_reg_tx_conv_source_ready;
assign {core_reg_tx_conv_source_payload_rwds, core_reg_tx_conv_source_payload_dq} = core_reg_tx_conv_source_source_payload_data;
assign core_reg_tx_conv_source_source_valid = core_reg_tx_conv_converter_source_valid;
assign core_reg_tx_conv_converter_source_ready = core_reg_tx_conv_source_source_ready;
assign core_reg_tx_conv_source_source_first = core_reg_tx_conv_converter_source_first;
assign core_reg_tx_conv_source_source_last = core_reg_tx_conv_converter_source_last;
assign core_reg_tx_conv_source_source_payload_data = core_reg_tx_conv_converter_source_payload_data;
assign core_reg_tx_conv_converter_first = (core_reg_tx_conv_converter_mux == 1'd0);
assign core_reg_tx_conv_converter_last = (core_reg_tx_conv_converter_mux == 1'd1);
assign core_reg_tx_conv_converter_source_valid = core_reg_tx_conv_converter_sink_valid;
assign core_reg_tx_conv_converter_source_first = (core_reg_tx_conv_converter_sink_first & core_reg_tx_conv_converter_first);
assign core_reg_tx_conv_converter_source_last = (core_reg_tx_conv_converter_sink_last & core_reg_tx_conv_converter_last);
assign core_reg_tx_conv_converter_sink_ready = (core_reg_tx_conv_converter_last & core_reg_tx_conv_converter_source_ready);
always @(*) begin
    core_reg_tx_conv_converter_source_payload_data <= 9'd0;
    case (core_reg_tx_conv_converter_mux)
        1'd0: begin
            core_reg_tx_conv_converter_source_payload_data <= core_reg_tx_conv_converter_sink_payload_data[17:9];
        end
        default: begin
            core_reg_tx_conv_converter_source_payload_data <= core_reg_tx_conv_converter_sink_payload_data[8:0];
        end
    endcase
end
assign core_reg_tx_conv_converter_source_payload_valid_token_count = core_reg_tx_conv_converter_last;
assign core_reg_rx_conv_converter_sink_valid = core_reg_rx_conv_sink_valid;
assign core_reg_rx_conv_converter_sink_first = core_reg_rx_conv_sink_first;
assign core_reg_rx_conv_converter_sink_last = core_reg_rx_conv_sink_last;
assign core_reg_rx_conv_sink_ready = core_reg_rx_conv_converter_sink_ready;
assign core_reg_rx_conv_converter_sink_payload_data = {core_reg_rx_conv_sink_payload_dq};
assign core_reg_rx_conv_source_valid = core_reg_rx_conv_source_source_valid;
assign core_reg_rx_conv_source_first = core_reg_rx_conv_source_source_first;
assign core_reg_rx_conv_source_last = core_reg_rx_conv_source_source_last;
assign core_reg_rx_conv_source_source_ready = core_reg_rx_conv_source_ready;
always @(*) begin
    core_reg_rx_conv_source_payload_dq <= 16'd0;
    core_reg_rx_conv_source_payload_dq[7:0] <= core_reg_rx_conv_source_source_payload_data[7:0];
    core_reg_rx_conv_source_payload_dq[15:8] <= core_reg_rx_conv_source_source_payload_data[15:8];
end
assign core_reg_rx_conv_source_source_valid = core_reg_rx_conv_converter_source_valid;
assign core_reg_rx_conv_converter_source_ready = core_reg_rx_conv_source_source_ready;
assign core_reg_rx_conv_source_source_first = core_reg_rx_conv_converter_source_first;
assign core_reg_rx_conv_source_source_last = core_reg_rx_conv_converter_source_last;
assign core_reg_rx_conv_source_source_payload_data = core_reg_rx_conv_converter_source_payload_data;
assign core_reg_rx_conv_converter_sink_ready = ((~core_reg_rx_conv_converter_strobe_all) | core_reg_rx_conv_converter_source_ready);
assign core_reg_rx_conv_converter_source_valid = core_reg_rx_conv_converter_strobe_all;
assign core_reg_rx_conv_converter_load_part = (core_reg_rx_conv_converter_sink_valid & core_reg_rx_conv_converter_sink_ready);
assign core_dat_tx_conv_converter_sink_valid = core_dat_tx_conv_sink_valid;
assign core_dat_tx_conv_converter_sink_first = core_dat_tx_conv_sink_first;
assign core_dat_tx_conv_converter_sink_last = core_dat_tx_conv_sink_last;
assign core_dat_tx_conv_sink_ready = core_dat_tx_conv_converter_sink_ready;
always @(*) begin
    core_dat_tx_conv_converter_sink_payload_data <= 36'd0;
    core_dat_tx_conv_converter_sink_payload_data[7:0] <= core_dat_tx_conv_sink_payload_dq[7:0];
    core_dat_tx_conv_converter_sink_payload_data[8] <= core_dat_tx_conv_sink_payload_rwds[0];
    core_dat_tx_conv_converter_sink_payload_data[16:9] <= core_dat_tx_conv_sink_payload_dq[15:8];
    core_dat_tx_conv_converter_sink_payload_data[17] <= core_dat_tx_conv_sink_payload_rwds[1];
    core_dat_tx_conv_converter_sink_payload_data[25:18] <= core_dat_tx_conv_sink_payload_dq[23:16];
    core_dat_tx_conv_converter_sink_payload_data[26] <= core_dat_tx_conv_sink_payload_rwds[2];
    core_dat_tx_conv_converter_sink_payload_data[34:27] <= core_dat_tx_conv_sink_payload_dq[31:24];
    core_dat_tx_conv_converter_sink_payload_data[35] <= core_dat_tx_conv_sink_payload_rwds[3];
end
assign core_dat_tx_conv_source_valid = core_dat_tx_conv_source_source_valid;
assign core_dat_tx_conv_source_first = core_dat_tx_conv_source_source_first;
assign core_dat_tx_conv_source_last = core_dat_tx_conv_source_source_last;
assign core_dat_tx_conv_source_source_ready = core_dat_tx_conv_source_ready;
assign {core_dat_tx_conv_source_payload_rwds, core_dat_tx_conv_source_payload_dq} = core_dat_tx_conv_source_source_payload_data;
assign core_dat_tx_conv_source_source_valid = core_dat_tx_conv_converter_source_valid;
assign core_dat_tx_conv_converter_source_ready = core_dat_tx_conv_source_source_ready;
assign core_dat_tx_conv_source_source_first = core_dat_tx_conv_converter_source_first;
assign core_dat_tx_conv_source_source_last = core_dat_tx_conv_converter_source_last;
assign core_dat_tx_conv_source_source_payload_data = core_dat_tx_conv_converter_source_payload_data;
assign core_dat_tx_conv_converter_first = (core_dat_tx_conv_converter_mux == 1'd0);
assign core_dat_tx_conv_converter_last = (core_dat_tx_conv_converter_mux == 2'd3);
assign core_dat_tx_conv_converter_source_valid = core_dat_tx_conv_converter_sink_valid;
assign core_dat_tx_conv_converter_source_first = (core_dat_tx_conv_converter_sink_first & core_dat_tx_conv_converter_first);
assign core_dat_tx_conv_converter_source_last = (core_dat_tx_conv_converter_sink_last & core_dat_tx_conv_converter_last);
assign core_dat_tx_conv_converter_sink_ready = (core_dat_tx_conv_converter_last & core_dat_tx_conv_converter_source_ready);
always @(*) begin
    core_dat_tx_conv_converter_source_payload_data <= 9'd0;
    case (core_dat_tx_conv_converter_mux)
        1'd0: begin
            core_dat_tx_conv_converter_source_payload_data <= core_dat_tx_conv_converter_sink_payload_data[35:27];
        end
        1'd1: begin
            core_dat_tx_conv_converter_source_payload_data <= core_dat_tx_conv_converter_sink_payload_data[26:18];
        end
        2'd2: begin
            core_dat_tx_conv_converter_source_payload_data <= core_dat_tx_conv_converter_sink_payload_data[17:9];
        end
        default: begin
            core_dat_tx_conv_converter_source_payload_data <= core_dat_tx_conv_converter_sink_payload_data[8:0];
        end
    endcase
end
assign core_dat_tx_conv_converter_source_payload_valid_token_count = core_dat_tx_conv_converter_last;
assign core_dat_rx_conv_converter_sink_valid = core_dat_rx_conv_sink_valid;
assign core_dat_rx_conv_converter_sink_first = core_dat_rx_conv_sink_first;
assign core_dat_rx_conv_converter_sink_last = core_dat_rx_conv_sink_last;
assign core_dat_rx_conv_sink_ready = core_dat_rx_conv_converter_sink_ready;
assign core_dat_rx_conv_converter_sink_payload_data = {core_dat_rx_conv_sink_payload_dq};
assign core_dat_rx_conv_source_valid = core_dat_rx_conv_source_source_valid;
assign core_dat_rx_conv_source_first = core_dat_rx_conv_source_source_first;
assign core_dat_rx_conv_source_last = core_dat_rx_conv_source_source_last;
assign core_dat_rx_conv_source_source_ready = core_dat_rx_conv_source_ready;
always @(*) begin
    core_dat_rx_conv_source_payload_dq <= 32'd0;
    core_dat_rx_conv_source_payload_dq[7:0] <= core_dat_rx_conv_source_source_payload_data[7:0];
    core_dat_rx_conv_source_payload_dq[15:8] <= core_dat_rx_conv_source_source_payload_data[15:8];
    core_dat_rx_conv_source_payload_dq[23:16] <= core_dat_rx_conv_source_source_payload_data[23:16];
    core_dat_rx_conv_source_payload_dq[31:24] <= core_dat_rx_conv_source_source_payload_data[31:24];
end
assign core_dat_rx_conv_source_source_valid = core_dat_rx_conv_converter_source_valid;
assign core_dat_rx_conv_converter_source_ready = core_dat_rx_conv_source_source_ready;
assign core_dat_rx_conv_source_source_first = core_dat_rx_conv_converter_source_first;
assign core_dat_rx_conv_source_source_last = core_dat_rx_conv_converter_source_last;
assign core_dat_rx_conv_source_source_payload_data = core_dat_rx_conv_converter_source_payload_data;
assign core_dat_rx_conv_converter_sink_ready = ((~core_dat_rx_conv_converter_strobe_all) | core_dat_rx_conv_converter_source_ready);
assign core_dat_rx_conv_converter_source_valid = core_dat_rx_conv_converter_strobe_all;
assign core_dat_rx_conv_converter_load_part = (core_dat_rx_conv_converter_sink_valid & core_dat_rx_conv_converter_sink_ready);
always @(*) begin
    core_burst_r_first_main_next_value2 <= 1'd0;
    core_burst_r_first_main_next_value_ce2 <= 1'd0;
    core_bus_ack <= 1'd0;
    core_bus_dat_r <= 32'd0;
    core_bus_latch <= 1'd0;
    core_cmd_tx_conv_converter_sink_payload_data <= 48'd0;
    core_cmd_tx_conv_converter_sink_valid <= 1'd0;
    core_cmd_tx_conv_source_source_ready <= 1'd0;
    core_cycles_main_next_value1 <= 8'd0;
    core_cycles_main_next_value_ce1 <= 1'd0;
    core_dat_tx_conv_sink_payload_dq <= 32'd0;
    core_dat_tx_conv_sink_payload_rwds <= 4'd0;
    core_dat_tx_conv_sink_valid <= 1'd0;
    core_dat_tx_conv_source_ready <= 1'd0;
    core_latency_x2_main_next_value0 <= 1'd0;
    core_latency_x2_main_next_value_ce0 <= 1'd0;
    core_next_state <= 3'd0;
    core_reg_ack <= 1'd0;
    core_reg_dat_r <= 16'd0;
    core_reg_tx_conv_sink_payload_dq <= 16'd0;
    core_reg_tx_conv_sink_valid <= 1'd0;
    core_reg_tx_conv_source_ready <= 1'd0;
    core_source_source_first <= 1'd0;
    core_source_source_last <= 1'd0;
    core_source_source_payload_cmd <= 1'd0;
    core_source_source_payload_dat_r <= 1'd0;
    core_source_source_payload_dat_w <= 1'd0;
    core_source_source_payload_dq <= 8'd0;
    core_source_source_payload_dq_oe <= 1'd0;
    core_source_source_payload_rwds <= 1'd0;
    core_source_source_payload_rwds_oe <= 1'd0;
    core_source_source_valid <= 1'd0;
    core_next_state <= core_state;
    case (core_state)
        1'd1: begin
            core_cmd_tx_conv_converter_sink_valid <= 1'd1;
            core_cmd_tx_conv_converter_sink_payload_data <= core_cmd;
            core_source_source_valid <= core_cmd_tx_conv_source_source_valid;
            core_cmd_tx_conv_source_source_ready <= core_source_source_ready;
            core_source_source_payload_cmd <= 1'd1;
            core_source_source_payload_dq <= core_cmd_tx_conv_source_source_payload_data;
            core_source_source_payload_dq_oe <= 1'd1;
            if (core_cmd_tx_conv_converter_sink_ready) begin
                if ((core_reg_stb & core_reg_we)) begin
                    core_next_state <= 2'd3;
                end else begin
                    core_next_state <= 2'd2;
                end
            end
        end
        2'd2: begin
            if ((core_cycles == 1'd0)) begin
                core_latency_x2_main_next_value0 <= (hyperramsdrphy_ios_rwds_i | 1'd1);
                core_latency_x2_main_next_value_ce0 <= 1'd1;
            end
            core_source_source_valid <= 1'd1;
            if (core_source_source_ready) begin
                core_cycles_main_next_value1 <= (core_cycles + 1'd1);
                core_cycles_main_next_value_ce1 <= 1'd1;
                if ((core_cycles == ((2'd2 * (((core_latency_x2 + 1'd1) * core_latency) - 1'd1)) - 1'd1))) begin
                    if ((core_reg_stb & (~core_reg_we))) begin
                        core_next_state <= 3'd4;
                    end else begin
                        core_bus_latch <= 1'd1;
                        if (core_bus_we0) begin
                            core_bus_ack <= 1'd1;
                            core_next_state <= 3'd5;
                        end else begin
                            core_burst_r_first_main_next_value2 <= 1'd1;
                            core_burst_r_first_main_next_value_ce2 <= 1'd1;
                            core_next_state <= 3'd6;
                        end
                    end
                end
            end
        end
        2'd3: begin
            core_reg_tx_conv_sink_valid <= 1'd1;
            core_reg_tx_conv_sink_payload_dq <= core_reg_dat_w;
            core_source_source_valid <= core_reg_tx_conv_source_valid;
            core_reg_tx_conv_source_ready <= core_source_source_ready;
            core_source_source_first <= core_reg_tx_conv_source_first;
            core_source_source_last <= core_reg_tx_conv_source_last;
            core_source_source_payload_dq <= core_reg_tx_conv_source_payload_dq;
            core_source_source_payload_rwds <= core_reg_tx_conv_source_payload_rwds;
            core_source_source_payload_dat_w <= 1'd1;
            core_source_source_payload_dq_oe <= 1'd1;
            if (core_reg_tx_conv_sink_ready) begin
                core_reg_ack <= 1'd1;
                core_next_state <= 3'd7;
            end
        end
        3'd4: begin
            core_source_source_valid <= 1'd1;
            core_source_source_payload_dat_r <= 1'd1;
            if (core_reg_rx_conv_source_valid) begin
                core_reg_ack <= 1'd1;
                core_reg_dat_r <= core_reg_rx_conv_source_payload_dq;
                core_next_state <= 3'd7;
            end
        end
        3'd5: begin
            core_dat_tx_conv_sink_valid <= 1'd1;
            core_dat_tx_conv_sink_payload_dq <= core_bus_dat_w1;
            core_dat_tx_conv_sink_payload_rwds <= (~core_bus_sel1);
            core_source_source_valid <= core_dat_tx_conv_source_valid;
            core_dat_tx_conv_source_ready <= core_source_source_ready;
            core_source_source_first <= core_dat_tx_conv_source_first;
            core_source_source_last <= core_dat_tx_conv_source_last;
            core_source_source_payload_dq <= core_dat_tx_conv_source_payload_dq;
            core_source_source_payload_rwds <= core_dat_tx_conv_source_payload_rwds;
            core_source_source_payload_dq_oe <= 1'd1;
            core_source_source_payload_rwds_oe <= 1'd1;
            core_source_source_payload_dat_w <= 1'd1;
            if (core_dat_tx_conv_sink_ready) begin
                core_bus_ack <= (((1'd1 & core_bus_cyc) & core_bus_stb) & core_burst_w);
                if (core_bus_ack) begin
                    core_bus_latch <= 1'd1;
                    core_next_state <= 3'd5;
                end else begin
                    core_next_state <= 3'd7;
                end
            end
        end
        3'd6: begin
            core_source_source_valid <= 1'd1;
            core_source_source_payload_dat_r <= 1'd1;
            if (core_dat_rx_conv_source_valid) begin
                core_burst_r_first_main_next_value2 <= 1'd0;
                core_burst_r_first_main_next_value_ce2 <= 1'd1;
                core_bus_ack <= (core_burst_r_first | (((1'd1 & core_bus_cyc) & core_bus_stb) & core_burst_r));
                core_bus_dat_r <= core_dat_rx_conv_source_payload_dq;
                if (core_bus_ack) begin
                    core_bus_latch <= 1'd1;
                    core_next_state <= 3'd6;
                end else begin
                    core_next_state <= 3'd7;
                end
            end
        end
        3'd7: begin
            core_cycles_main_next_value1 <= (core_cycles + 1'd1);
            core_cycles_main_next_value_ce1 <= 1'd1;
            if ((core_cycles == 4'd8)) begin
                core_next_state <= 1'd0;
            end
        end
        default: begin
            if (((core_bus_cyc & core_bus_stb) | core_reg_stb)) begin
                core_next_state <= 1'd1;
            end
        end
    endcase
end
assign tx_cdc_sink_valid = core_source_source_valid;
assign core_source_source_ready = tx_cdc_sink_ready;
assign tx_cdc_sink_first = core_source_source_first;
assign tx_cdc_sink_last = core_source_source_last;
assign tx_cdc_sink_payload_cmd = core_source_source_payload_cmd;
assign tx_cdc_sink_payload_dat_w = core_source_source_payload_dat_w;
assign tx_cdc_sink_payload_dat_r = core_source_source_payload_dat_r;
assign tx_cdc_sink_payload_dq = core_source_source_payload_dq;
assign tx_cdc_sink_payload_dq_oe = core_source_source_payload_dq_oe;
assign tx_cdc_sink_payload_rwds = core_source_source_payload_rwds;
assign tx_cdc_sink_payload_rwds_oe = core_source_source_payload_rwds_oe;
assign syncfifo0_sink_valid = tx_cdc_source_valid;
assign tx_cdc_source_ready = syncfifo0_sink_ready;
assign syncfifo0_sink_first = tx_cdc_source_first;
assign syncfifo0_sink_last = tx_cdc_source_last;
assign syncfifo0_sink_payload_cmd = tx_cdc_source_payload_cmd;
assign syncfifo0_sink_payload_dat_w = tx_cdc_source_payload_dat_w;
assign syncfifo0_sink_payload_dat_r = tx_cdc_source_payload_dat_r;
assign syncfifo0_sink_payload_dq = tx_cdc_source_payload_dq;
assign syncfifo0_sink_payload_dq_oe = tx_cdc_source_payload_dq_oe;
assign syncfifo0_sink_payload_rwds = tx_cdc_source_payload_rwds;
assign syncfifo0_sink_payload_rwds_oe = tx_cdc_source_payload_rwds_oe;
assign hyperramsdrphy_sink_valid = syncfifo0_source_valid;
assign syncfifo0_source_ready = hyperramsdrphy_sink_ready;
assign hyperramsdrphy_sink_first = syncfifo0_source_first;
assign hyperramsdrphy_sink_last = syncfifo0_source_last;
assign hyperramsdrphy_sink_payload_cmd = syncfifo0_source_payload_cmd;
assign hyperramsdrphy_sink_payload_dat_w = syncfifo0_source_payload_dat_w;
assign hyperramsdrphy_sink_payload_dat_r = syncfifo0_source_payload_dat_r;
assign hyperramsdrphy_sink_payload_dq = syncfifo0_source_payload_dq;
assign hyperramsdrphy_sink_payload_dq_oe = syncfifo0_source_payload_dq_oe;
assign hyperramsdrphy_sink_payload_rwds = syncfifo0_source_payload_rwds;
assign hyperramsdrphy_sink_payload_rwds_oe = syncfifo0_source_payload_rwds_oe;
assign syncfifo1_sink_valid = hyperramsdrphy_source_valid;
assign hyperramsdrphy_source_ready = syncfifo1_sink_ready;
assign syncfifo1_sink_first = hyperramsdrphy_source_first;
assign syncfifo1_sink_last = hyperramsdrphy_source_last;
assign syncfifo1_sink_payload_dq = hyperramsdrphy_source_payload_dq;
assign rx_cdc_sink_valid = syncfifo1_source_valid;
assign syncfifo1_source_ready = rx_cdc_sink_ready;
assign rx_cdc_sink_first = syncfifo1_source_first;
assign rx_cdc_sink_last = syncfifo1_source_last;
assign rx_cdc_sink_payload_dq = syncfifo1_source_payload_dq;
assign core_sink_sink_valid = rx_cdc_source_valid;
assign rx_cdc_source_ready = core_sink_sink_ready;
assign core_sink_sink_first = rx_cdc_source_first;
assign core_sink_sink_last = rx_cdc_source_last;
assign core_sink_sink_payload_dq = rx_cdc_source_payload_dq;
always @(*) begin
    core_reg_adr <= 3'd0;
    core_reg_dat_w <= 16'd0;
    core_reg_stb <= 1'd0;
    core_reg_we <= 1'd0;
    fsm_next_state <= 2'd0;
    hyperram_done <= 1'd0;
    hyperram_reg_rdata_status_builder_next_value <= 16'd0;
    hyperram_reg_rdata_status_builder_next_value_ce <= 1'd0;
    fsm_next_state <= fsm_state;
    case (fsm_state)
        1'd1: begin
            core_reg_stb <= 1'd1;
            core_reg_we <= 1'd1;
            core_reg_adr <= hyperram_addr;
            core_reg_dat_w <= hyperram_reg_wdata_storage;
            if (core_reg_ack) begin
                fsm_next_state <= 1'd0;
            end
        end
        2'd2: begin
            core_reg_stb <= 1'd1;
            core_reg_we <= 1'd0;
            core_reg_adr <= hyperram_addr;
            if (core_reg_ack) begin
                hyperram_reg_rdata_status_builder_next_value <= core_reg_dat_r;
                hyperram_reg_rdata_status_builder_next_value_ce <= 1'd1;
                fsm_next_state <= 1'd0;
            end
        end
        default: begin
            hyperram_done <= 1'd1;
            if (hyperram_write) begin
                fsm_next_state <= 1'd1;
            end else begin
                if (hyperram_read) begin
                    fsm_next_state <= 2'd2;
                end
            end
        end
    endcase
end
assign ice40_io_vio_0_oe = ice40_io_vio_0_oe_storage;
assign ice40_io_vio_0_o = ice40_io_vio_0_out_storage;
assign ice40_io_vio_1_oe = ice40_io_vio_1_oe_storage;
assign ice40_io_vio_1_o = ice40_io_vio_1_out_storage;
assign ice40_io_vio_2_oe = ice40_io_vio_2_oe_storage;
assign ice40_io_vio_2_o = ice40_io_vio_2_out_storage;
assign ice40_io_vio_3_oe = ice40_io_vio_3_oe_storage;
assign ice40_io_vio_3_o = ice40_io_vio_3_out_storage;
assign ice40_io_vio_4_oe = ice40_io_vio_4_oe_storage;
assign ice40_io_vio_4_o = ice40_io_vio_4_out_storage;
assign ice40_io_vio_5_oe = ice40_io_vio_5_oe_storage;
assign ice40_io_vio_5_o = ice40_io_vio_5_out_storage;
assign ice40_io_vcore_0_oe = ice40_io_vcore_0_oe_storage;
assign ice40_io_vcore_0_o = ice40_io_vcore_0_out_storage;
assign ice40_io_vcore_1_oe = ice40_io_vcore_1_oe_storage;
assign ice40_io_vcore_1_o = ice40_io_vcore_1_out_storage;
assign ice40_io_vcore_2_oe = ice40_io_vcore_2_oe_storage;
assign ice40_io_vcore_2_o = ice40_io_vcore_2_out_storage;
assign ice40_io_vcore_4_oe = ice40_io_vcore_4_oe_storage;
assign ice40_io_vcore_4_o = ice40_io_vcore_4_out_storage;
assign gatemate_debug_4_oe = gatemate_debug_4_oe_storage;
assign gatemate_debug_4_o = gatemate_debug_4_out_storage;
assign gatemate_debug_5_oe = gatemate_debug_5_oe_storage;
assign gatemate_debug_5_o = gatemate_debug_5_out_storage;
assign gatemate_debug_3_oe = gatemate_debug_3_oe_storage;
assign gatemate_debug_3_o = gatemate_debug_3_out_storage;
always @(*) begin
    interface0_ack <= 1'd0;
    interface0_dat_r <= 32'd0;
    interface1_adr <= 14'd0;
    interface1_dat_w <= 32'd0;
    interface1_re <= 1'd0;
    interface1_we <= 1'd0;
    next_state <= 1'd0;
    next_state <= state;
    case (state)
        1'd1: begin
            interface0_ack <= 1'd1;
            interface0_dat_r <= interface1_dat_r;
            next_state <= 1'd0;
        end
        default: begin
            interface1_dat_w <= interface0_dat_w;
            if ((interface0_cyc & interface0_stb)) begin
                interface1_adr <= interface0_adr;
                interface1_re <= ((~interface0_we) & (interface0_sel != 1'd0));
                interface1_we <= (interface0_we & (interface0_sel != 1'd0));
                next_state <= 1'd1;
            end
        end
    endcase
end
assign csr_bankarray_csrbank0_sel = (csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd0);
assign csr_bankarray_csrbank0_reset0_r = csr_bankarray_interface0_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank0_reset0_re <= 1'd0;
    csr_bankarray_csrbank0_reset0_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank0_reset0_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_reset0_we <= csr_bankarray_interface0_bank_bus_re;
    end
end
assign csr_bankarray_csrbank0_scratch0_r = csr_bankarray_interface0_bank_bus_dat_w;
always @(*) begin
    csr_bankarray_csrbank0_scratch0_re <= 1'd0;
    csr_bankarray_csrbank0_scratch0_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank0_scratch0_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_scratch0_we <= csr_bankarray_interface0_bank_bus_re;
    end
end
assign csr_bankarray_csrbank0_bus_errors_r = csr_bankarray_interface0_bank_bus_dat_w;
always @(*) begin
    csr_bankarray_csrbank0_bus_errors_re <= 1'd0;
    csr_bankarray_csrbank0_bus_errors_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank0_bus_errors_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_bus_errors_we <= csr_bankarray_interface0_bank_bus_re;
    end
end
always @(*) begin
    basesoc_soc_rst <= 1'd0;
    if (basesoc_reset_re) begin
        basesoc_soc_rst <= basesoc_reset_storage[0];
    end
end
assign basesoc_cpu_rst = basesoc_reset_storage[1];
assign csr_bankarray_csrbank0_reset0_w = basesoc_reset_storage;
assign csr_bankarray_csrbank0_scratch0_w = basesoc_scratch_storage;
assign csr_bankarray_csrbank0_bus_errors_w = basesoc_bus_errors_status;
assign basesoc_bus_errors_we = csr_bankarray_csrbank0_bus_errors_we;
assign csr_bankarray_csrbank1_sel = (csr_bankarray_interface1_bank_bus_adr[13:9] == 1'd1);
assign csr_bankarray_csrbank1_tx0_r = csr_bankarray_interface1_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank1_tx0_re <= 1'd0;
    csr_bankarray_csrbank1_tx0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank1_tx0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_tx0_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_rx_r = csr_bankarray_interface1_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank1_rx_re <= 1'd0;
    csr_bankarray_csrbank1_rx_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank1_rx_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_rx_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_busy_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank1_busy_re <= 1'd0;
    csr_bankarray_csrbank1_busy_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank1_busy_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_busy_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_control0_r = csr_bankarray_interface1_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank1_control0_re <= 1'd0;
    csr_bankarray_csrbank1_control0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank1_control0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_control0_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_ss_n0_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank1_ss_n0_re <= 1'd0;
    csr_bankarray_csrbank1_ss_n0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank1_ss_n0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_ss_n0_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_tx0_w = flash_tx_storage;
assign csr_bankarray_csrbank1_rx_w = flash_rx_status;
assign flash_rx_we = csr_bankarray_csrbank1_rx_we;
assign csr_bankarray_csrbank1_busy_w = flash_busy_status;
assign flash_busy_we = csr_bankarray_csrbank1_busy_we;
always @(*) begin
    flash_enable0 <= 1'd0;
    if (flash_control_re) begin
        flash_enable0 <= flash_control_storage[0];
    end
end
assign flash_cpol0 = flash_control_storage[1];
assign flash_cpha0 = flash_control_storage[2];
assign csr_bankarray_csrbank1_control0_w = flash_control_storage;
assign csr_bankarray_csrbank1_ss_n0_w = flash_ss_n_storage;
assign csr_bankarray_csrbank2_sel = (csr_bankarray_interface2_bank_bus_adr[13:9] == 2'd2);
assign csr_bankarray_csrbank2_oe0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_oe0_re <= 1'd0;
    csr_bankarray_csrbank2_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank2_oe0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_oe0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_in_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_in_re <= 1'd0;
    csr_bankarray_csrbank2_in_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank2_in_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_in_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_out0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_out0_re <= 1'd0;
    csr_bankarray_csrbank2_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank2_out0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_out0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_oe0_w = gatemate_debug_3_oe_storage;
assign csr_bankarray_csrbank2_in_w = gatemate_debug_3_in_status;
assign gatemate_debug_3_in_we = csr_bankarray_csrbank2_in_we;
assign csr_bankarray_csrbank2_out0_w = gatemate_debug_3_out_storage;
assign csr_bankarray_csrbank3_sel = (csr_bankarray_interface3_bank_bus_adr[13:9] == 2'd3);
assign csr_bankarray_csrbank3_oe0_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_oe0_re <= 1'd0;
    csr_bankarray_csrbank3_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank3_oe0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_oe0_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_in_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_in_re <= 1'd0;
    csr_bankarray_csrbank3_in_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank3_in_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_in_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_out0_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_out0_re <= 1'd0;
    csr_bankarray_csrbank3_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank3_out0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_out0_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_oe0_w = gatemate_debug_4_oe_storage;
assign csr_bankarray_csrbank3_in_w = gatemate_debug_4_in_status;
assign gatemate_debug_4_in_we = csr_bankarray_csrbank3_in_we;
assign csr_bankarray_csrbank3_out0_w = gatemate_debug_4_out_storage;
assign csr_bankarray_csrbank4_sel = (csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd4);
assign csr_bankarray_csrbank4_oe0_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank4_oe0_re <= 1'd0;
    csr_bankarray_csrbank4_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank4_oe0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_oe0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_in_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank4_in_re <= 1'd0;
    csr_bankarray_csrbank4_in_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank4_in_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_in_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_out0_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank4_out0_re <= 1'd0;
    csr_bankarray_csrbank4_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank4_out0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_out0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_oe0_w = gatemate_debug_5_oe_storage;
assign csr_bankarray_csrbank4_in_w = gatemate_debug_5_in_status;
assign gatemate_debug_5_in_we = csr_bankarray_csrbank4_in_we;
assign csr_bankarray_csrbank4_out0_w = gatemate_debug_5_out_storage;
assign csr_bankarray_csrbank5_sel = (csr_bankarray_interface5_bank_bus_adr[13:9] == 3'd5);
assign csr_bankarray_csrbank5_config0_r = csr_bankarray_interface5_bank_bus_dat_w[15:0];
always @(*) begin
    csr_bankarray_csrbank5_config0_re <= 1'd0;
    csr_bankarray_csrbank5_config0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank5_config0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_config0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_status_r = csr_bankarray_interface5_bank_bus_dat_w[4:0];
always @(*) begin
    csr_bankarray_csrbank5_status_re <= 1'd0;
    csr_bankarray_csrbank5_status_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank5_status_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_status_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_reg_control0_r = csr_bankarray_interface5_bank_bus_dat_w[9:0];
always @(*) begin
    csr_bankarray_csrbank5_reg_control0_re <= 1'd0;
    csr_bankarray_csrbank5_reg_control0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank5_reg_control0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_reg_control0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_reg_status_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank5_reg_status_re <= 1'd0;
    csr_bankarray_csrbank5_reg_status_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank5_reg_status_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_reg_status_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_reg_wdata0_r = csr_bankarray_interface5_bank_bus_dat_w[15:0];
always @(*) begin
    csr_bankarray_csrbank5_reg_wdata0_re <= 1'd0;
    csr_bankarray_csrbank5_reg_wdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank5_reg_wdata0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_reg_wdata0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_reg_rdata_r = csr_bankarray_interface5_bank_bus_dat_w[15:0];
always @(*) begin
    csr_bankarray_csrbank5_reg_rdata_re <= 1'd0;
    csr_bankarray_csrbank5_reg_rdata_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank5_reg_rdata_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_reg_rdata_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
always @(*) begin
    hyperram_rst <= 1'd0;
    if (hyperram_config_re) begin
        hyperram_rst <= hyperram_config_storage[0];
    end
end
assign hyperram_latency = hyperram_config_storage[15:8];
assign csr_bankarray_csrbank5_config0_w = hyperram_config_storage;
always @(*) begin
    hyperram_status_status <= 5'd8;
    hyperram_status_status[0] <= hyperram_latency_mode;
    hyperram_status_status[4:1] <= hyperram_clk_ratio;
end
assign csr_bankarray_csrbank5_status_w = hyperram_status_status;
assign hyperram_status_we = csr_bankarray_csrbank5_status_we;
always @(*) begin
    hyperram_write <= 1'd0;
    if (hyperram_reg_control_re) begin
        hyperram_write <= hyperram_reg_control_storage[0];
    end
end
always @(*) begin
    hyperram_read <= 1'd0;
    if (hyperram_reg_control_re) begin
        hyperram_read <= hyperram_reg_control_storage[1];
    end
end
assign hyperram_addr = hyperram_reg_control_storage[9:8];
assign csr_bankarray_csrbank5_reg_control0_w = hyperram_reg_control_storage;
assign hyperram_reg_status_status = hyperram_done;
assign csr_bankarray_csrbank5_reg_status_w = hyperram_reg_status_status;
assign hyperram_reg_status_we = csr_bankarray_csrbank5_reg_status_we;
assign csr_bankarray_csrbank5_reg_wdata0_w = hyperram_reg_wdata_storage;
assign csr_bankarray_csrbank5_reg_rdata_w = hyperram_reg_rdata_status;
assign hyperram_reg_rdata_we = csr_bankarray_csrbank5_reg_rdata_we;
assign csr_bankarray_csrbank6_sel = (csr_bankarray_interface6_bank_bus_adr[13:9] == 3'd6);
assign csr_bankarray_csrbank6_w0_r = csr_bankarray_interface6_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank6_w0_re <= 1'd0;
    csr_bankarray_csrbank6_w0_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank6_w0_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_w0_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_r_r = csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank6_r_re <= 1'd0;
    csr_bankarray_csrbank6_r_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank6_r_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_r_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign i2c0_scl_1 = i2c0__w_storage[0];
assign i2c0_oe = i2c0__w_storage[1];
assign i2c0_sda0 = i2c0__w_storage[2];
assign csr_bankarray_csrbank6_w0_w = i2c0__w_storage;
assign i2c0__r_status = i2c0_sda1;
assign csr_bankarray_csrbank6_r_w = i2c0__r_status;
assign i2c0__r_we = csr_bankarray_csrbank6_r_we;
assign csr_bankarray_csrbank7_sel = (csr_bankarray_interface7_bank_bus_adr[13:9] == 3'd7);
assign csr_bankarray_csrbank7_w0_r = csr_bankarray_interface7_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank7_w0_re <= 1'd0;
    csr_bankarray_csrbank7_w0_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank7_w0_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_w0_we <= csr_bankarray_interface7_bank_bus_re;
    end
end
assign csr_bankarray_csrbank7_r_r = csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank7_r_re <= 1'd0;
    csr_bankarray_csrbank7_r_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank7_r_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_r_we <= csr_bankarray_interface7_bank_bus_re;
    end
end
assign i2c1_scl_1 = i2c1__w_storage[0];
assign i2c1_oe = i2c1__w_storage[1];
assign i2c1_sda0 = i2c1__w_storage[2];
assign csr_bankarray_csrbank7_w0_w = i2c1__w_storage;
assign i2c1__r_status = i2c1_sda1;
assign csr_bankarray_csrbank7_r_w = i2c1__r_status;
assign i2c1__r_we = csr_bankarray_csrbank7_r_we;
assign csr_bankarray_csrbank8_sel = (csr_bankarray_interface8_bank_bus_adr[13:9] == 4'd8);
assign csr_bankarray_csrbank8_tx0_r = csr_bankarray_interface8_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank8_tx0_re <= 1'd0;
    csr_bankarray_csrbank8_tx0_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank8_tx0_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_tx0_we <= csr_bankarray_interface8_bank_bus_re;
    end
end
assign csr_bankarray_csrbank8_rx_r = csr_bankarray_interface8_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank8_rx_re <= 1'd0;
    csr_bankarray_csrbank8_rx_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank8_rx_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_rx_we <= csr_bankarray_interface8_bank_bus_re;
    end
end
assign csr_bankarray_csrbank8_busy_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank8_busy_re <= 1'd0;
    csr_bankarray_csrbank8_busy_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank8_busy_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_busy_we <= csr_bankarray_interface8_bank_bus_re;
    end
end
assign csr_bankarray_csrbank8_control0_r = csr_bankarray_interface8_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank8_control0_re <= 1'd0;
    csr_bankarray_csrbank8_control0_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank8_control0_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_control0_we <= csr_bankarray_interface8_bank_bus_re;
    end
end
assign csr_bankarray_csrbank8_ss_n0_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank8_ss_n0_re <= 1'd0;
    csr_bankarray_csrbank8_ss_n0_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank8_ss_n0_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_ss_n0_we <= csr_bankarray_interface8_bank_bus_re;
    end
end
assign csr_bankarray_csrbank8_tx0_w = ice40_tx_storage;
assign csr_bankarray_csrbank8_rx_w = ice40_rx_status;
assign ice40_rx_we = csr_bankarray_csrbank8_rx_we;
assign csr_bankarray_csrbank8_busy_w = ice40_busy_status;
assign ice40_busy_we = csr_bankarray_csrbank8_busy_we;
always @(*) begin
    ice40_enable0 <= 1'd0;
    if (ice40_control_re) begin
        ice40_enable0 <= ice40_control_storage[0];
    end
end
assign ice40_cpol0 = ice40_control_storage[1];
assign ice40_cpha0 = ice40_control_storage[2];
assign csr_bankarray_csrbank8_control0_w = ice40_control_storage;
assign csr_bankarray_csrbank8_ss_n0_w = ice40_ss_n_storage;
assign csr_bankarray_csrbank9_sel = (csr_bankarray_interface9_bank_bus_adr[13:9] == 4'd9);
assign csr_bankarray_csrbank9_in_r = csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank9_in_re <= 1'd0;
    csr_bankarray_csrbank9_in_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank9_in_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_in_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_in_w = ice40_cd_status;
assign ice40_cd_we = csr_bankarray_csrbank9_in_we;
assign csr_bankarray_csrbank10_sel = (csr_bankarray_interface10_bank_bus_adr[13:9] == 4'd10);
assign csr_bankarray_csrbank10_out0_r = csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank10_out0_re <= 1'd0;
    csr_bankarray_csrbank10_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank10_out0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_out0_we <= csr_bankarray_interface10_bank_bus_re;
    end
end
assign csr_bankarray_csrbank10_out0_w = ice40_core_en_storage;
assign csr_bankarray_csrbank11_sel = (csr_bankarray_interface11_bank_bus_adr[13:9] == 4'd11);
assign csr_bankarray_csrbank11_oe0_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_oe0_re <= 1'd0;
    csr_bankarray_csrbank11_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank11_oe0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_oe0_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_in_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_in_re <= 1'd0;
    csr_bankarray_csrbank11_in_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank11_in_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_in_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_out0_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_out0_re <= 1'd0;
    csr_bankarray_csrbank11_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank11_out0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_out0_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_oe0_w = ice40_cp_oe_storage;
assign csr_bankarray_csrbank11_in_w = ice40_cp_in_status;
assign ice40_cp_in_we = csr_bankarray_csrbank11_in_we;
assign csr_bankarray_csrbank11_out0_w = ice40_cp_out_storage;
assign csr_bankarray_csrbank12_sel = (csr_bankarray_interface12_bank_bus_adr[13:9] == 4'd12);
assign csr_bankarray_csrbank12_oe0_r = csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank12_oe0_re <= 1'd0;
    csr_bankarray_csrbank12_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank12_oe0_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_oe0_we <= csr_bankarray_interface12_bank_bus_re;
    end
end
assign csr_bankarray_csrbank12_in_r = csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank12_in_re <= 1'd0;
    csr_bankarray_csrbank12_in_we <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank12_in_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_in_we <= csr_bankarray_interface12_bank_bus_re;
    end
end
assign csr_bankarray_csrbank12_out0_r = csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank12_out0_re <= 1'd0;
    csr_bankarray_csrbank12_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank12_out0_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_out0_we <= csr_bankarray_interface12_bank_bus_re;
    end
end
assign csr_bankarray_csrbank12_oe0_w = ice40_io_vcore_0_oe_storage;
assign csr_bankarray_csrbank12_in_w = ice40_io_vcore_0_in_status;
assign ice40_io_vcore_0_in_we = csr_bankarray_csrbank12_in_we;
assign csr_bankarray_csrbank12_out0_w = ice40_io_vcore_0_out_storage;
assign csr_bankarray_csrbank13_sel = (csr_bankarray_interface13_bank_bus_adr[13:9] == 4'd13);
assign csr_bankarray_csrbank13_oe0_r = csr_bankarray_interface13_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank13_oe0_re <= 1'd0;
    csr_bankarray_csrbank13_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank13_oe0_re <= csr_bankarray_interface13_bank_bus_we;
        csr_bankarray_csrbank13_oe0_we <= csr_bankarray_interface13_bank_bus_re;
    end
end
assign csr_bankarray_csrbank13_in_r = csr_bankarray_interface13_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank13_in_re <= 1'd0;
    csr_bankarray_csrbank13_in_we <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank13_in_re <= csr_bankarray_interface13_bank_bus_we;
        csr_bankarray_csrbank13_in_we <= csr_bankarray_interface13_bank_bus_re;
    end
end
assign csr_bankarray_csrbank13_out0_r = csr_bankarray_interface13_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank13_out0_re <= 1'd0;
    csr_bankarray_csrbank13_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank13_out0_re <= csr_bankarray_interface13_bank_bus_we;
        csr_bankarray_csrbank13_out0_we <= csr_bankarray_interface13_bank_bus_re;
    end
end
assign csr_bankarray_csrbank13_oe0_w = ice40_io_vcore_1_oe_storage;
assign csr_bankarray_csrbank13_in_w = ice40_io_vcore_1_in_status;
assign ice40_io_vcore_1_in_we = csr_bankarray_csrbank13_in_we;
assign csr_bankarray_csrbank13_out0_w = ice40_io_vcore_1_out_storage;
assign csr_bankarray_csrbank14_sel = (csr_bankarray_interface14_bank_bus_adr[13:9] == 4'd14);
assign csr_bankarray_csrbank14_oe0_r = csr_bankarray_interface14_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank14_oe0_re <= 1'd0;
    csr_bankarray_csrbank14_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank14_sel & (csr_bankarray_interface14_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank14_oe0_re <= csr_bankarray_interface14_bank_bus_we;
        csr_bankarray_csrbank14_oe0_we <= csr_bankarray_interface14_bank_bus_re;
    end
end
assign csr_bankarray_csrbank14_in_r = csr_bankarray_interface14_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank14_in_re <= 1'd0;
    csr_bankarray_csrbank14_in_we <= 1'd0;
    if ((csr_bankarray_csrbank14_sel & (csr_bankarray_interface14_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank14_in_re <= csr_bankarray_interface14_bank_bus_we;
        csr_bankarray_csrbank14_in_we <= csr_bankarray_interface14_bank_bus_re;
    end
end
assign csr_bankarray_csrbank14_out0_r = csr_bankarray_interface14_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank14_out0_re <= 1'd0;
    csr_bankarray_csrbank14_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank14_sel & (csr_bankarray_interface14_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank14_out0_re <= csr_bankarray_interface14_bank_bus_we;
        csr_bankarray_csrbank14_out0_we <= csr_bankarray_interface14_bank_bus_re;
    end
end
assign csr_bankarray_csrbank14_oe0_w = ice40_io_vcore_2_oe_storage;
assign csr_bankarray_csrbank14_in_w = ice40_io_vcore_2_in_status;
assign ice40_io_vcore_2_in_we = csr_bankarray_csrbank14_in_we;
assign csr_bankarray_csrbank14_out0_w = ice40_io_vcore_2_out_storage;
assign csr_bankarray_csrbank15_sel = (csr_bankarray_interface15_bank_bus_adr[13:9] == 4'd15);
assign csr_bankarray_csrbank15_oe0_r = csr_bankarray_interface15_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank15_oe0_re <= 1'd0;
    csr_bankarray_csrbank15_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank15_sel & (csr_bankarray_interface15_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank15_oe0_re <= csr_bankarray_interface15_bank_bus_we;
        csr_bankarray_csrbank15_oe0_we <= csr_bankarray_interface15_bank_bus_re;
    end
end
assign csr_bankarray_csrbank15_in_r = csr_bankarray_interface15_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank15_in_re <= 1'd0;
    csr_bankarray_csrbank15_in_we <= 1'd0;
    if ((csr_bankarray_csrbank15_sel & (csr_bankarray_interface15_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank15_in_re <= csr_bankarray_interface15_bank_bus_we;
        csr_bankarray_csrbank15_in_we <= csr_bankarray_interface15_bank_bus_re;
    end
end
assign csr_bankarray_csrbank15_out0_r = csr_bankarray_interface15_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank15_out0_re <= 1'd0;
    csr_bankarray_csrbank15_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank15_sel & (csr_bankarray_interface15_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank15_out0_re <= csr_bankarray_interface15_bank_bus_we;
        csr_bankarray_csrbank15_out0_we <= csr_bankarray_interface15_bank_bus_re;
    end
end
assign csr_bankarray_csrbank15_oe0_w = ice40_io_vcore_4_oe_storage;
assign csr_bankarray_csrbank15_in_w = ice40_io_vcore_4_in_status;
assign ice40_io_vcore_4_in_we = csr_bankarray_csrbank15_in_we;
assign csr_bankarray_csrbank15_out0_w = ice40_io_vcore_4_out_storage;
assign csr_bankarray_csrbank16_sel = (csr_bankarray_interface16_bank_bus_adr[13:9] == 5'd16);
assign csr_bankarray_csrbank16_oe0_r = csr_bankarray_interface16_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank16_oe0_re <= 1'd0;
    csr_bankarray_csrbank16_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank16_sel & (csr_bankarray_interface16_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank16_oe0_re <= csr_bankarray_interface16_bank_bus_we;
        csr_bankarray_csrbank16_oe0_we <= csr_bankarray_interface16_bank_bus_re;
    end
end
assign csr_bankarray_csrbank16_in_r = csr_bankarray_interface16_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank16_in_re <= 1'd0;
    csr_bankarray_csrbank16_in_we <= 1'd0;
    if ((csr_bankarray_csrbank16_sel & (csr_bankarray_interface16_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank16_in_re <= csr_bankarray_interface16_bank_bus_we;
        csr_bankarray_csrbank16_in_we <= csr_bankarray_interface16_bank_bus_re;
    end
end
assign csr_bankarray_csrbank16_out0_r = csr_bankarray_interface16_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank16_out0_re <= 1'd0;
    csr_bankarray_csrbank16_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank16_sel & (csr_bankarray_interface16_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank16_out0_re <= csr_bankarray_interface16_bank_bus_we;
        csr_bankarray_csrbank16_out0_we <= csr_bankarray_interface16_bank_bus_re;
    end
end
assign csr_bankarray_csrbank16_oe0_w = ice40_io_vio_0_oe_storage;
assign csr_bankarray_csrbank16_in_w = ice40_io_vio_0_in_status;
assign ice40_io_vio_0_in_we = csr_bankarray_csrbank16_in_we;
assign csr_bankarray_csrbank16_out0_w = ice40_io_vio_0_out_storage;
assign csr_bankarray_csrbank17_sel = (csr_bankarray_interface17_bank_bus_adr[13:9] == 5'd17);
assign csr_bankarray_csrbank17_oe0_r = csr_bankarray_interface17_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank17_oe0_re <= 1'd0;
    csr_bankarray_csrbank17_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank17_sel & (csr_bankarray_interface17_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank17_oe0_re <= csr_bankarray_interface17_bank_bus_we;
        csr_bankarray_csrbank17_oe0_we <= csr_bankarray_interface17_bank_bus_re;
    end
end
assign csr_bankarray_csrbank17_in_r = csr_bankarray_interface17_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank17_in_re <= 1'd0;
    csr_bankarray_csrbank17_in_we <= 1'd0;
    if ((csr_bankarray_csrbank17_sel & (csr_bankarray_interface17_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank17_in_re <= csr_bankarray_interface17_bank_bus_we;
        csr_bankarray_csrbank17_in_we <= csr_bankarray_interface17_bank_bus_re;
    end
end
assign csr_bankarray_csrbank17_out0_r = csr_bankarray_interface17_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank17_out0_re <= 1'd0;
    csr_bankarray_csrbank17_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank17_sel & (csr_bankarray_interface17_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank17_out0_re <= csr_bankarray_interface17_bank_bus_we;
        csr_bankarray_csrbank17_out0_we <= csr_bankarray_interface17_bank_bus_re;
    end
end
assign csr_bankarray_csrbank17_oe0_w = ice40_io_vio_1_oe_storage;
assign csr_bankarray_csrbank17_in_w = ice40_io_vio_1_in_status;
assign ice40_io_vio_1_in_we = csr_bankarray_csrbank17_in_we;
assign csr_bankarray_csrbank17_out0_w = ice40_io_vio_1_out_storage;
assign csr_bankarray_csrbank18_sel = (csr_bankarray_interface18_bank_bus_adr[13:9] == 5'd18);
assign csr_bankarray_csrbank18_oe0_r = csr_bankarray_interface18_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank18_oe0_re <= 1'd0;
    csr_bankarray_csrbank18_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank18_sel & (csr_bankarray_interface18_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank18_oe0_re <= csr_bankarray_interface18_bank_bus_we;
        csr_bankarray_csrbank18_oe0_we <= csr_bankarray_interface18_bank_bus_re;
    end
end
assign csr_bankarray_csrbank18_in_r = csr_bankarray_interface18_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank18_in_re <= 1'd0;
    csr_bankarray_csrbank18_in_we <= 1'd0;
    if ((csr_bankarray_csrbank18_sel & (csr_bankarray_interface18_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank18_in_re <= csr_bankarray_interface18_bank_bus_we;
        csr_bankarray_csrbank18_in_we <= csr_bankarray_interface18_bank_bus_re;
    end
end
assign csr_bankarray_csrbank18_out0_r = csr_bankarray_interface18_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank18_out0_re <= 1'd0;
    csr_bankarray_csrbank18_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank18_sel & (csr_bankarray_interface18_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank18_out0_re <= csr_bankarray_interface18_bank_bus_we;
        csr_bankarray_csrbank18_out0_we <= csr_bankarray_interface18_bank_bus_re;
    end
end
assign csr_bankarray_csrbank18_oe0_w = ice40_io_vio_2_oe_storage;
assign csr_bankarray_csrbank18_in_w = ice40_io_vio_2_in_status;
assign ice40_io_vio_2_in_we = csr_bankarray_csrbank18_in_we;
assign csr_bankarray_csrbank18_out0_w = ice40_io_vio_2_out_storage;
assign csr_bankarray_csrbank19_sel = (csr_bankarray_interface19_bank_bus_adr[13:9] == 5'd19);
assign csr_bankarray_csrbank19_oe0_r = csr_bankarray_interface19_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank19_oe0_re <= 1'd0;
    csr_bankarray_csrbank19_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank19_sel & (csr_bankarray_interface19_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank19_oe0_re <= csr_bankarray_interface19_bank_bus_we;
        csr_bankarray_csrbank19_oe0_we <= csr_bankarray_interface19_bank_bus_re;
    end
end
assign csr_bankarray_csrbank19_in_r = csr_bankarray_interface19_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank19_in_re <= 1'd0;
    csr_bankarray_csrbank19_in_we <= 1'd0;
    if ((csr_bankarray_csrbank19_sel & (csr_bankarray_interface19_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank19_in_re <= csr_bankarray_interface19_bank_bus_we;
        csr_bankarray_csrbank19_in_we <= csr_bankarray_interface19_bank_bus_re;
    end
end
assign csr_bankarray_csrbank19_out0_r = csr_bankarray_interface19_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank19_out0_re <= 1'd0;
    csr_bankarray_csrbank19_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank19_sel & (csr_bankarray_interface19_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank19_out0_re <= csr_bankarray_interface19_bank_bus_we;
        csr_bankarray_csrbank19_out0_we <= csr_bankarray_interface19_bank_bus_re;
    end
end
assign csr_bankarray_csrbank19_oe0_w = ice40_io_vio_3_oe_storage;
assign csr_bankarray_csrbank19_in_w = ice40_io_vio_3_in_status;
assign ice40_io_vio_3_in_we = csr_bankarray_csrbank19_in_we;
assign csr_bankarray_csrbank19_out0_w = ice40_io_vio_3_out_storage;
assign csr_bankarray_csrbank20_sel = (csr_bankarray_interface20_bank_bus_adr[13:9] == 5'd20);
assign csr_bankarray_csrbank20_oe0_r = csr_bankarray_interface20_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank20_oe0_re <= 1'd0;
    csr_bankarray_csrbank20_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank20_sel & (csr_bankarray_interface20_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank20_oe0_re <= csr_bankarray_interface20_bank_bus_we;
        csr_bankarray_csrbank20_oe0_we <= csr_bankarray_interface20_bank_bus_re;
    end
end
assign csr_bankarray_csrbank20_in_r = csr_bankarray_interface20_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank20_in_re <= 1'd0;
    csr_bankarray_csrbank20_in_we <= 1'd0;
    if ((csr_bankarray_csrbank20_sel & (csr_bankarray_interface20_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank20_in_re <= csr_bankarray_interface20_bank_bus_we;
        csr_bankarray_csrbank20_in_we <= csr_bankarray_interface20_bank_bus_re;
    end
end
assign csr_bankarray_csrbank20_out0_r = csr_bankarray_interface20_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank20_out0_re <= 1'd0;
    csr_bankarray_csrbank20_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank20_sel & (csr_bankarray_interface20_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank20_out0_re <= csr_bankarray_interface20_bank_bus_we;
        csr_bankarray_csrbank20_out0_we <= csr_bankarray_interface20_bank_bus_re;
    end
end
assign csr_bankarray_csrbank20_oe0_w = ice40_io_vio_4_oe_storage;
assign csr_bankarray_csrbank20_in_w = ice40_io_vio_4_in_status;
assign ice40_io_vio_4_in_we = csr_bankarray_csrbank20_in_we;
assign csr_bankarray_csrbank20_out0_w = ice40_io_vio_4_out_storage;
assign csr_bankarray_csrbank21_sel = (csr_bankarray_interface21_bank_bus_adr[13:9] == 5'd21);
assign csr_bankarray_csrbank21_oe0_r = csr_bankarray_interface21_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank21_oe0_re <= 1'd0;
    csr_bankarray_csrbank21_oe0_we <= 1'd0;
    if ((csr_bankarray_csrbank21_sel & (csr_bankarray_interface21_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank21_oe0_re <= csr_bankarray_interface21_bank_bus_we;
        csr_bankarray_csrbank21_oe0_we <= csr_bankarray_interface21_bank_bus_re;
    end
end
assign csr_bankarray_csrbank21_in_r = csr_bankarray_interface21_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank21_in_re <= 1'd0;
    csr_bankarray_csrbank21_in_we <= 1'd0;
    if ((csr_bankarray_csrbank21_sel & (csr_bankarray_interface21_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank21_in_re <= csr_bankarray_interface21_bank_bus_we;
        csr_bankarray_csrbank21_in_we <= csr_bankarray_interface21_bank_bus_re;
    end
end
assign csr_bankarray_csrbank21_out0_r = csr_bankarray_interface21_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank21_out0_re <= 1'd0;
    csr_bankarray_csrbank21_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank21_sel & (csr_bankarray_interface21_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank21_out0_re <= csr_bankarray_interface21_bank_bus_we;
        csr_bankarray_csrbank21_out0_we <= csr_bankarray_interface21_bank_bus_re;
    end
end
assign csr_bankarray_csrbank21_oe0_w = ice40_io_vio_5_oe_storage;
assign csr_bankarray_csrbank21_in_w = ice40_io_vio_5_in_status;
assign ice40_io_vio_5_in_we = csr_bankarray_csrbank21_in_we;
assign csr_bankarray_csrbank21_out0_w = ice40_io_vio_5_out_storage;
assign csr_bankarray_csrbank22_sel = (csr_bankarray_interface22_bank_bus_adr[13:9] == 5'd22);
assign csr_bankarray_csrbank22_out0_r = csr_bankarray_interface22_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank22_out0_re <= 1'd0;
    csr_bankarray_csrbank22_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank22_sel & (csr_bankarray_interface22_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank22_out0_re <= csr_bankarray_interface22_bank_bus_we;
        csr_bankarray_csrbank22_out0_we <= csr_bankarray_interface22_bank_bus_re;
    end
end
assign csr_bankarray_csrbank22_out0_w = ice40_osc_en_storage;
assign csr_bankarray_csrbank23_sel = (csr_bankarray_interface23_bank_bus_adr[13:9] == 5'd23);
assign csr_bankarray_csrbank23_in_r = csr_bankarray_interface23_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank23_in_re <= 1'd0;
    csr_bankarray_csrbank23_in_we <= 1'd0;
    if ((csr_bankarray_csrbank23_sel & (csr_bankarray_interface23_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank23_in_re <= csr_bankarray_interface23_bank_bus_we;
        csr_bankarray_csrbank23_in_we <= csr_bankarray_interface23_bank_bus_re;
    end
end
assign csr_bankarray_csrbank23_in_w = ice40_power_fauld_status;
assign ice40_power_fauld_we = csr_bankarray_csrbank23_in_we;
assign csr_bankarray_csrbank24_sel = (csr_bankarray_interface24_bank_bus_adr[13:9] == 5'd24);
assign csr_bankarray_csrbank24_out0_r = csr_bankarray_interface24_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank24_out0_re <= 1'd0;
    csr_bankarray_csrbank24_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank24_sel & (csr_bankarray_interface24_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank24_out0_re <= csr_bankarray_interface24_bank_bus_we;
        csr_bankarray_csrbank24_out0_we <= csr_bankarray_interface24_bank_bus_re;
    end
end
assign csr_bankarray_csrbank24_out0_w = ice40_vio_en_storage;
assign csr_bankarray_sel = (csr_bankarray_sram_bus_adr[13:9] == 5'd25);
always @(*) begin
    csr_bankarray_sram_bus_dat_r <= 32'd0;
    if (csr_bankarray_sel_r) begin
        csr_bankarray_sram_bus_dat_r <= csr_bankarray_dat_r;
    end
end
assign csr_bankarray_adr = csr_bankarray_sram_bus_adr[5:0];
assign csr_bankarray_csrbank25_sel = (csr_bankarray_interface25_bank_bus_adr[13:9] == 5'd26);
assign csr_bankarray_csrbank25_out0_r = csr_bankarray_interface25_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank25_out0_re <= 1'd0;
    csr_bankarray_csrbank25_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank25_sel & (csr_bankarray_interface25_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank25_out0_re <= csr_bankarray_interface25_bank_bus_we;
        csr_bankarray_csrbank25_out0_we <= csr_bankarray_interface25_bank_bus_re;
    end
end
assign csr_bankarray_csrbank25_out0_w = leds_storage;
assign csr_bankarray_csrbank26_sel = (csr_bankarray_interface26_bank_bus_adr[13:9] == 5'd27);
assign csr_bankarray_csrbank26_load0_r = csr_bankarray_interface26_bank_bus_dat_w;
always @(*) begin
    csr_bankarray_csrbank26_load0_re <= 1'd0;
    csr_bankarray_csrbank26_load0_we <= 1'd0;
    if ((csr_bankarray_csrbank26_sel & (csr_bankarray_interface26_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank26_load0_re <= csr_bankarray_interface26_bank_bus_we;
        csr_bankarray_csrbank26_load0_we <= csr_bankarray_interface26_bank_bus_re;
    end
end
assign csr_bankarray_csrbank26_reload0_r = csr_bankarray_interface26_bank_bus_dat_w;
always @(*) begin
    csr_bankarray_csrbank26_reload0_re <= 1'd0;
    csr_bankarray_csrbank26_reload0_we <= 1'd0;
    if ((csr_bankarray_csrbank26_sel & (csr_bankarray_interface26_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank26_reload0_re <= csr_bankarray_interface26_bank_bus_we;
        csr_bankarray_csrbank26_reload0_we <= csr_bankarray_interface26_bank_bus_re;
    end
end
assign csr_bankarray_csrbank26_en0_r = csr_bankarray_interface26_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank26_en0_re <= 1'd0;
    csr_bankarray_csrbank26_en0_we <= 1'd0;
    if ((csr_bankarray_csrbank26_sel & (csr_bankarray_interface26_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank26_en0_re <= csr_bankarray_interface26_bank_bus_we;
        csr_bankarray_csrbank26_en0_we <= csr_bankarray_interface26_bank_bus_re;
    end
end
assign csr_bankarray_csrbank26_update_value0_r = csr_bankarray_interface26_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank26_update_value0_re <= 1'd0;
    csr_bankarray_csrbank26_update_value0_we <= 1'd0;
    if ((csr_bankarray_csrbank26_sel & (csr_bankarray_interface26_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank26_update_value0_re <= csr_bankarray_interface26_bank_bus_we;
        csr_bankarray_csrbank26_update_value0_we <= csr_bankarray_interface26_bank_bus_re;
    end
end
assign csr_bankarray_csrbank26_value_r = csr_bankarray_interface26_bank_bus_dat_w;
always @(*) begin
    csr_bankarray_csrbank26_value_re <= 1'd0;
    csr_bankarray_csrbank26_value_we <= 1'd0;
    if ((csr_bankarray_csrbank26_sel & (csr_bankarray_interface26_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank26_value_re <= csr_bankarray_interface26_bank_bus_we;
        csr_bankarray_csrbank26_value_we <= csr_bankarray_interface26_bank_bus_re;
    end
end
assign csr_bankarray_csrbank26_ev_status_r = csr_bankarray_interface26_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank26_ev_status_re <= 1'd0;
    csr_bankarray_csrbank26_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank26_sel & (csr_bankarray_interface26_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank26_ev_status_re <= csr_bankarray_interface26_bank_bus_we;
        csr_bankarray_csrbank26_ev_status_we <= csr_bankarray_interface26_bank_bus_re;
    end
end
assign csr_bankarray_csrbank26_ev_pending_r = csr_bankarray_interface26_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank26_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank26_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank26_sel & (csr_bankarray_interface26_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank26_ev_pending_re <= csr_bankarray_interface26_bank_bus_we;
        csr_bankarray_csrbank26_ev_pending_we <= csr_bankarray_interface26_bank_bus_re;
    end
end
assign csr_bankarray_csrbank26_ev_enable0_r = csr_bankarray_interface26_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank26_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank26_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank26_sel & (csr_bankarray_interface26_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank26_ev_enable0_re <= csr_bankarray_interface26_bank_bus_we;
        csr_bankarray_csrbank26_ev_enable0_we <= csr_bankarray_interface26_bank_bus_re;
    end
end
assign csr_bankarray_csrbank26_load0_w = basesoc_timer_load_storage;
assign csr_bankarray_csrbank26_reload0_w = basesoc_timer_reload_storage;
assign csr_bankarray_csrbank26_en0_w = basesoc_timer_en_storage;
assign csr_bankarray_csrbank26_update_value0_w = basesoc_timer_update_value_storage;
assign csr_bankarray_csrbank26_value_w = basesoc_timer_value_status;
assign basesoc_timer_value_we = csr_bankarray_csrbank26_value_we;
assign basesoc_timer_status_status = basesoc_timer_zero0;
assign csr_bankarray_csrbank26_ev_status_w = basesoc_timer_status_status;
assign basesoc_timer_status_we = csr_bankarray_csrbank26_ev_status_we;
assign basesoc_timer_pending_status = basesoc_timer_zero1;
assign csr_bankarray_csrbank26_ev_pending_w = basesoc_timer_pending_status;
assign basesoc_timer_pending_we = csr_bankarray_csrbank26_ev_pending_we;
assign basesoc_timer_zero2 = basesoc_timer_enable_storage;
assign csr_bankarray_csrbank26_ev_enable0_w = basesoc_timer_enable_storage;
assign csr_bankarray_csrbank27_sel = (csr_bankarray_interface27_bank_bus_adr[13:9] == 5'd28);
assign csr_bankarray_csrbank27_load0_r = csr_bankarray_interface27_bank_bus_dat_w;
always @(*) begin
    csr_bankarray_csrbank27_load0_re <= 1'd0;
    csr_bankarray_csrbank27_load0_we <= 1'd0;
    if ((csr_bankarray_csrbank27_sel & (csr_bankarray_interface27_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank27_load0_re <= csr_bankarray_interface27_bank_bus_we;
        csr_bankarray_csrbank27_load0_we <= csr_bankarray_interface27_bank_bus_re;
    end
end
assign csr_bankarray_csrbank27_reload0_r = csr_bankarray_interface27_bank_bus_dat_w;
always @(*) begin
    csr_bankarray_csrbank27_reload0_re <= 1'd0;
    csr_bankarray_csrbank27_reload0_we <= 1'd0;
    if ((csr_bankarray_csrbank27_sel & (csr_bankarray_interface27_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank27_reload0_re <= csr_bankarray_interface27_bank_bus_we;
        csr_bankarray_csrbank27_reload0_we <= csr_bankarray_interface27_bank_bus_re;
    end
end
assign csr_bankarray_csrbank27_en0_r = csr_bankarray_interface27_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank27_en0_re <= 1'd0;
    csr_bankarray_csrbank27_en0_we <= 1'd0;
    if ((csr_bankarray_csrbank27_sel & (csr_bankarray_interface27_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank27_en0_re <= csr_bankarray_interface27_bank_bus_we;
        csr_bankarray_csrbank27_en0_we <= csr_bankarray_interface27_bank_bus_re;
    end
end
assign csr_bankarray_csrbank27_update_value0_r = csr_bankarray_interface27_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank27_update_value0_re <= 1'd0;
    csr_bankarray_csrbank27_update_value0_we <= 1'd0;
    if ((csr_bankarray_csrbank27_sel & (csr_bankarray_interface27_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank27_update_value0_re <= csr_bankarray_interface27_bank_bus_we;
        csr_bankarray_csrbank27_update_value0_we <= csr_bankarray_interface27_bank_bus_re;
    end
end
assign csr_bankarray_csrbank27_value_r = csr_bankarray_interface27_bank_bus_dat_w;
always @(*) begin
    csr_bankarray_csrbank27_value_re <= 1'd0;
    csr_bankarray_csrbank27_value_we <= 1'd0;
    if ((csr_bankarray_csrbank27_sel & (csr_bankarray_interface27_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank27_value_re <= csr_bankarray_interface27_bank_bus_we;
        csr_bankarray_csrbank27_value_we <= csr_bankarray_interface27_bank_bus_re;
    end
end
assign csr_bankarray_csrbank27_ev_status_r = csr_bankarray_interface27_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank27_ev_status_re <= 1'd0;
    csr_bankarray_csrbank27_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank27_sel & (csr_bankarray_interface27_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank27_ev_status_re <= csr_bankarray_interface27_bank_bus_we;
        csr_bankarray_csrbank27_ev_status_we <= csr_bankarray_interface27_bank_bus_re;
    end
end
assign csr_bankarray_csrbank27_ev_pending_r = csr_bankarray_interface27_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank27_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank27_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank27_sel & (csr_bankarray_interface27_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank27_ev_pending_re <= csr_bankarray_interface27_bank_bus_we;
        csr_bankarray_csrbank27_ev_pending_we <= csr_bankarray_interface27_bank_bus_re;
    end
end
assign csr_bankarray_csrbank27_ev_enable0_r = csr_bankarray_interface27_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank27_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank27_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank27_sel & (csr_bankarray_interface27_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank27_ev_enable0_re <= csr_bankarray_interface27_bank_bus_we;
        csr_bankarray_csrbank27_ev_enable0_we <= csr_bankarray_interface27_bank_bus_re;
    end
end
assign csr_bankarray_csrbank27_load0_w = timer1_load_storage;
assign csr_bankarray_csrbank27_reload0_w = timer1_reload_storage;
assign csr_bankarray_csrbank27_en0_w = timer1_en_storage;
assign csr_bankarray_csrbank27_update_value0_w = timer1_update_value_storage;
assign csr_bankarray_csrbank27_value_w = timer1_value_status;
assign timer1_value_we = csr_bankarray_csrbank27_value_we;
assign timer1_status_status = timer1_zero0;
assign csr_bankarray_csrbank27_ev_status_w = timer1_status_status;
assign timer1_status_we = csr_bankarray_csrbank27_ev_status_we;
assign timer1_pending_status = timer1_zero1;
assign csr_bankarray_csrbank27_ev_pending_w = timer1_pending_status;
assign timer1_pending_we = csr_bankarray_csrbank27_ev_pending_we;
assign timer1_zero2 = timer1_enable_storage;
assign csr_bankarray_csrbank27_ev_enable0_w = timer1_enable_storage;
assign csr_bankarray_csrbank28_sel = (csr_bankarray_interface28_bank_bus_adr[13:9] == 5'd29);
assign basesoc_uart_rxtx_r = csr_bankarray_interface28_bank_bus_dat_w[7:0];
always @(*) begin
    basesoc_uart_rxtx_re <= 1'd0;
    basesoc_uart_rxtx_we <= 1'd0;
    if ((csr_bankarray_csrbank28_sel & (csr_bankarray_interface28_bank_bus_adr[8:0] == 1'd0))) begin
        basesoc_uart_rxtx_re <= csr_bankarray_interface28_bank_bus_we;
        basesoc_uart_rxtx_we <= csr_bankarray_interface28_bank_bus_re;
    end
end
assign csr_bankarray_csrbank28_txfull_r = csr_bankarray_interface28_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank28_txfull_re <= 1'd0;
    csr_bankarray_csrbank28_txfull_we <= 1'd0;
    if ((csr_bankarray_csrbank28_sel & (csr_bankarray_interface28_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank28_txfull_re <= csr_bankarray_interface28_bank_bus_we;
        csr_bankarray_csrbank28_txfull_we <= csr_bankarray_interface28_bank_bus_re;
    end
end
assign csr_bankarray_csrbank28_rxempty_r = csr_bankarray_interface28_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank28_rxempty_re <= 1'd0;
    csr_bankarray_csrbank28_rxempty_we <= 1'd0;
    if ((csr_bankarray_csrbank28_sel & (csr_bankarray_interface28_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank28_rxempty_re <= csr_bankarray_interface28_bank_bus_we;
        csr_bankarray_csrbank28_rxempty_we <= csr_bankarray_interface28_bank_bus_re;
    end
end
assign csr_bankarray_csrbank28_ev_status_r = csr_bankarray_interface28_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank28_ev_status_re <= 1'd0;
    csr_bankarray_csrbank28_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank28_sel & (csr_bankarray_interface28_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank28_ev_status_re <= csr_bankarray_interface28_bank_bus_we;
        csr_bankarray_csrbank28_ev_status_we <= csr_bankarray_interface28_bank_bus_re;
    end
end
assign csr_bankarray_csrbank28_ev_pending_r = csr_bankarray_interface28_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank28_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank28_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank28_sel & (csr_bankarray_interface28_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank28_ev_pending_re <= csr_bankarray_interface28_bank_bus_we;
        csr_bankarray_csrbank28_ev_pending_we <= csr_bankarray_interface28_bank_bus_re;
    end
end
assign csr_bankarray_csrbank28_ev_enable0_r = csr_bankarray_interface28_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank28_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank28_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank28_sel & (csr_bankarray_interface28_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank28_ev_enable0_re <= csr_bankarray_interface28_bank_bus_we;
        csr_bankarray_csrbank28_ev_enable0_we <= csr_bankarray_interface28_bank_bus_re;
    end
end
assign csr_bankarray_csrbank28_txempty_r = csr_bankarray_interface28_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank28_txempty_re <= 1'd0;
    csr_bankarray_csrbank28_txempty_we <= 1'd0;
    if ((csr_bankarray_csrbank28_sel & (csr_bankarray_interface28_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank28_txempty_re <= csr_bankarray_interface28_bank_bus_we;
        csr_bankarray_csrbank28_txempty_we <= csr_bankarray_interface28_bank_bus_re;
    end
end
assign csr_bankarray_csrbank28_rxfull_r = csr_bankarray_interface28_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank28_rxfull_re <= 1'd0;
    csr_bankarray_csrbank28_rxfull_we <= 1'd0;
    if ((csr_bankarray_csrbank28_sel & (csr_bankarray_interface28_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank28_rxfull_re <= csr_bankarray_interface28_bank_bus_we;
        csr_bankarray_csrbank28_rxfull_we <= csr_bankarray_interface28_bank_bus_re;
    end
end
assign csr_bankarray_csrbank28_txfull_w = basesoc_uart_txfull_status;
assign basesoc_uart_txfull_we = csr_bankarray_csrbank28_txfull_we;
assign csr_bankarray_csrbank28_rxempty_w = basesoc_uart_rxempty_status;
assign basesoc_uart_rxempty_we = csr_bankarray_csrbank28_rxempty_we;
always @(*) begin
    basesoc_uart_status_status <= 2'd0;
    basesoc_uart_status_status[0] <= basesoc_uart_tx0;
    basesoc_uart_status_status[1] <= basesoc_uart_rx0;
end
assign csr_bankarray_csrbank28_ev_status_w = basesoc_uart_status_status;
assign basesoc_uart_status_we = csr_bankarray_csrbank28_ev_status_we;
always @(*) begin
    basesoc_uart_pending_status <= 2'd0;
    basesoc_uart_pending_status[0] <= basesoc_uart_tx1;
    basesoc_uart_pending_status[1] <= basesoc_uart_rx1;
end
assign csr_bankarray_csrbank28_ev_pending_w = basesoc_uart_pending_status;
assign basesoc_uart_pending_we = csr_bankarray_csrbank28_ev_pending_we;
assign basesoc_uart_tx2 = basesoc_uart_enable_storage[0];
assign basesoc_uart_rx2 = basesoc_uart_enable_storage[1];
assign csr_bankarray_csrbank28_ev_enable0_w = basesoc_uart_enable_storage;
assign csr_bankarray_csrbank28_txempty_w = basesoc_uart_txempty_status;
assign basesoc_uart_txempty_we = csr_bankarray_csrbank28_txempty_we;
assign csr_bankarray_csrbank28_rxfull_w = basesoc_uart_rxfull_status;
assign basesoc_uart_rxfull_we = csr_bankarray_csrbank28_rxfull_we;
assign csr_bankarray_csrbank29_sel = (csr_bankarray_interface29_bank_bus_adr[13:9] == 5'd30);
assign csr_bankarray_csrbank29_tx_data0_r = csr_bankarray_interface29_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank29_tx_data0_re <= 1'd0;
    csr_bankarray_csrbank29_tx_data0_we <= 1'd0;
    if ((csr_bankarray_csrbank29_sel & (csr_bankarray_interface29_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank29_tx_data0_re <= csr_bankarray_interface29_bank_bus_we;
        csr_bankarray_csrbank29_tx_data0_we <= csr_bankarray_interface29_bank_bus_re;
    end
end
assign csr_bankarray_csrbank29_rx_data_r = csr_bankarray_interface29_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank29_rx_data_re <= 1'd0;
    csr_bankarray_csrbank29_rx_data_we <= 1'd0;
    if ((csr_bankarray_csrbank29_sel & (csr_bankarray_interface29_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank29_rx_data_re <= csr_bankarray_interface29_bank_bus_we;
        csr_bankarray_csrbank29_rx_data_we <= csr_bankarray_interface29_bank_bus_re;
    end
end
assign csr_bankarray_csrbank29_control0_r = csr_bankarray_interface29_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank29_control0_re <= 1'd0;
    csr_bankarray_csrbank29_control0_we <= 1'd0;
    if ((csr_bankarray_csrbank29_sel & (csr_bankarray_interface29_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank29_control0_re <= csr_bankarray_interface29_bank_bus_we;
        csr_bankarray_csrbank29_control0_we <= csr_bankarray_interface29_bank_bus_re;
    end
end
assign csr_bankarray_csrbank29_status_r = csr_bankarray_interface29_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank29_status_re <= 1'd0;
    csr_bankarray_csrbank29_status_we <= 1'd0;
    if ((csr_bankarray_csrbank29_sel & (csr_bankarray_interface29_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank29_status_re <= csr_bankarray_interface29_bank_bus_we;
        csr_bankarray_csrbank29_status_we <= csr_bankarray_interface29_bank_bus_re;
    end
end
assign csr_bankarray_csrbank29_ev_status_r = csr_bankarray_interface29_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank29_ev_status_re <= 1'd0;
    csr_bankarray_csrbank29_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank29_sel & (csr_bankarray_interface29_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank29_ev_status_re <= csr_bankarray_interface29_bank_bus_we;
        csr_bankarray_csrbank29_ev_status_we <= csr_bankarray_interface29_bank_bus_re;
    end
end
assign csr_bankarray_csrbank29_ev_pending_r = csr_bankarray_interface29_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank29_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank29_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank29_sel & (csr_bankarray_interface29_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank29_ev_pending_re <= csr_bankarray_interface29_bank_bus_we;
        csr_bankarray_csrbank29_ev_pending_we <= csr_bankarray_interface29_bank_bus_re;
    end
end
assign csr_bankarray_csrbank29_ev_enable0_r = csr_bankarray_interface29_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank29_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank29_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank29_sel & (csr_bankarray_interface29_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank29_ev_enable0_re <= csr_bankarray_interface29_bank_bus_we;
        csr_bankarray_csrbank29_ev_enable0_we <= csr_bankarray_interface29_bank_bus_re;
    end
end
assign csr_bankarray_csrbank29_tx_data0_w = uart_ice40_tx_data_storage;
assign csr_bankarray_csrbank29_rx_data_w = uart_ice40_rx_data_status;
assign uart_ice40_rx_data_we = csr_bankarray_csrbank29_rx_data_we;
always @(*) begin
    uart_ice40_DIN_VLD <= 1'd0;
    if (uart_ice40_control_re) begin
        uart_ice40_DIN_VLD <= uart_ice40_control_storage;
    end
end
assign csr_bankarray_csrbank29_control0_w = uart_ice40_control_storage;
always @(*) begin
    uart_ice40_status_status0 <= 4'd0;
    uart_ice40_status_status0[0] <= uart_ice40_DIN_RDY;
    uart_ice40_status_status0[1] <= uart_ice40_DOUT_VLD;
    uart_ice40_status_status0[2] <= uart_ice40_FE;
    uart_ice40_status_status0[3] <= uart_ice40_PE;
end
assign csr_bankarray_csrbank29_status_w = uart_ice40_status_status0;
assign uart_ice40_status_we0 = csr_bankarray_csrbank29_status_we;
assign uart_ice40_status_status1 = uart_ice40_rx0;
assign csr_bankarray_csrbank29_ev_status_w = uart_ice40_status_status1;
assign uart_ice40_status_we1 = csr_bankarray_csrbank29_ev_status_we;
assign uart_ice40_pending_status = uart_ice40_rx1;
assign csr_bankarray_csrbank29_ev_pending_w = uart_ice40_pending_status;
assign uart_ice40_pending_we = csr_bankarray_csrbank29_ev_pending_we;
assign uart_ice40_rx2 = uart_ice40_enable_storage;
assign csr_bankarray_csrbank29_ev_enable0_w = uart_ice40_enable_storage;
assign csr_bankarray_csrbank30_sel = (csr_bankarray_interface30_bank_bus_adr[13:9] == 5'd31);
assign csr_bankarray_csrbank30_tx_data0_r = csr_bankarray_interface30_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank30_tx_data0_re <= 1'd0;
    csr_bankarray_csrbank30_tx_data0_we <= 1'd0;
    if ((csr_bankarray_csrbank30_sel & (csr_bankarray_interface30_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank30_tx_data0_re <= csr_bankarray_interface30_bank_bus_we;
        csr_bankarray_csrbank30_tx_data0_we <= csr_bankarray_interface30_bank_bus_re;
    end
end
assign csr_bankarray_csrbank30_rx_data_r = csr_bankarray_interface30_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank30_rx_data_re <= 1'd0;
    csr_bankarray_csrbank30_rx_data_we <= 1'd0;
    if ((csr_bankarray_csrbank30_sel & (csr_bankarray_interface30_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank30_rx_data_re <= csr_bankarray_interface30_bank_bus_we;
        csr_bankarray_csrbank30_rx_data_we <= csr_bankarray_interface30_bank_bus_re;
    end
end
assign csr_bankarray_csrbank30_control0_r = csr_bankarray_interface30_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank30_control0_re <= 1'd0;
    csr_bankarray_csrbank30_control0_we <= 1'd0;
    if ((csr_bankarray_csrbank30_sel & (csr_bankarray_interface30_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank30_control0_re <= csr_bankarray_interface30_bank_bus_we;
        csr_bankarray_csrbank30_control0_we <= csr_bankarray_interface30_bank_bus_re;
    end
end
assign csr_bankarray_csrbank30_status_r = csr_bankarray_interface30_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank30_status_re <= 1'd0;
    csr_bankarray_csrbank30_status_we <= 1'd0;
    if ((csr_bankarray_csrbank30_sel & (csr_bankarray_interface30_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank30_status_re <= csr_bankarray_interface30_bank_bus_we;
        csr_bankarray_csrbank30_status_we <= csr_bankarray_interface30_bank_bus_re;
    end
end
assign csr_bankarray_csrbank30_ev_status_r = csr_bankarray_interface30_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank30_ev_status_re <= 1'd0;
    csr_bankarray_csrbank30_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank30_sel & (csr_bankarray_interface30_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank30_ev_status_re <= csr_bankarray_interface30_bank_bus_we;
        csr_bankarray_csrbank30_ev_status_we <= csr_bankarray_interface30_bank_bus_re;
    end
end
assign csr_bankarray_csrbank30_ev_pending_r = csr_bankarray_interface30_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank30_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank30_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank30_sel & (csr_bankarray_interface30_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank30_ev_pending_re <= csr_bankarray_interface30_bank_bus_we;
        csr_bankarray_csrbank30_ev_pending_we <= csr_bankarray_interface30_bank_bus_re;
    end
end
assign csr_bankarray_csrbank30_ev_enable0_r = csr_bankarray_interface30_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank30_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank30_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank30_sel & (csr_bankarray_interface30_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank30_ev_enable0_re <= csr_bankarray_interface30_bank_bus_we;
        csr_bankarray_csrbank30_ev_enable0_we <= csr_bankarray_interface30_bank_bus_re;
    end
end
assign csr_bankarray_csrbank30_tx_data0_w = uart_logging_tx_data_storage;
assign csr_bankarray_csrbank30_rx_data_w = uart_logging_rx_data_status;
assign uart_logging_rx_data_we = csr_bankarray_csrbank30_rx_data_we;
always @(*) begin
    uart_logging_DIN_VLD <= 1'd0;
    if (uart_logging_control_re) begin
        uart_logging_DIN_VLD <= uart_logging_control_storage;
    end
end
assign csr_bankarray_csrbank30_control0_w = uart_logging_control_storage;
always @(*) begin
    uart_logging_status_status0 <= 4'd0;
    uart_logging_status_status0[0] <= uart_logging_DIN_RDY;
    uart_logging_status_status0[1] <= uart_logging_DOUT_VLD;
    uart_logging_status_status0[2] <= uart_logging_FE;
    uart_logging_status_status0[3] <= uart_logging_PE;
end
assign csr_bankarray_csrbank30_status_w = uart_logging_status_status0;
assign uart_logging_status_we0 = csr_bankarray_csrbank30_status_we;
assign uart_logging_status_status1 = uart_logging_rx0;
assign csr_bankarray_csrbank30_ev_status_w = uart_logging_status_status1;
assign uart_logging_status_we1 = csr_bankarray_csrbank30_ev_status_we;
assign uart_logging_pending_status = uart_logging_rx1;
assign csr_bankarray_csrbank30_ev_pending_w = uart_logging_pending_status;
assign uart_logging_pending_we = csr_bankarray_csrbank30_ev_pending_we;
assign uart_logging_rx2 = uart_logging_enable_storage;
assign csr_bankarray_csrbank30_ev_enable0_w = uart_logging_enable_storage;
assign csr_interconnect_adr = interface1_adr;
assign csr_interconnect_re = interface1_re;
assign csr_interconnect_we = interface1_we;
assign csr_interconnect_dat_w = interface1_dat_w;
assign interface1_dat_r = csr_interconnect_dat_r;
assign csr_bankarray_interface0_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface1_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface2_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface3_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface4_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface5_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface6_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface7_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface8_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface9_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface10_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface11_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface12_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface13_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface14_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface15_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface16_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface17_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface18_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface19_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface20_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface21_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface22_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface23_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface24_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface25_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface26_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface27_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface28_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface29_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface30_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_sram_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface0_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface1_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface2_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface3_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface4_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface5_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface6_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface7_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface8_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface9_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface10_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface11_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface12_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface13_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface14_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface15_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface16_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface17_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface18_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface19_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface20_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface21_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface22_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface23_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface24_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface25_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface26_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface27_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface28_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface29_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface30_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_sram_bus_re = csr_interconnect_re;
assign csr_bankarray_interface0_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface1_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface2_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface3_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface4_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface5_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface6_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface7_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface8_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface9_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface10_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface11_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface12_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface13_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface14_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface15_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface16_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface17_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface18_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface19_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface20_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface21_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface22_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface23_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface24_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface25_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface26_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface27_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface28_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface29_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface30_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_sram_bus_we = csr_interconnect_we;
assign csr_bankarray_interface0_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface1_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface2_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface3_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface4_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface5_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface6_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface7_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface8_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface9_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface10_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface11_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface12_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface13_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface14_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface15_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface16_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface17_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface18_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface19_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface20_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface21_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface22_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface23_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface24_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface25_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface26_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface27_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface28_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface29_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface30_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_sram_bus_dat_w = csr_interconnect_dat_w;
assign csr_interconnect_dat_r = (((((((((((((((((((((((((((((((csr_bankarray_interface0_bank_bus_dat_r | csr_bankarray_interface1_bank_bus_dat_r) | csr_bankarray_interface2_bank_bus_dat_r) | csr_bankarray_interface3_bank_bus_dat_r) | csr_bankarray_interface4_bank_bus_dat_r) | csr_bankarray_interface5_bank_bus_dat_r) | csr_bankarray_interface6_bank_bus_dat_r) | csr_bankarray_interface7_bank_bus_dat_r) | csr_bankarray_interface8_bank_bus_dat_r) | csr_bankarray_interface9_bank_bus_dat_r) | csr_bankarray_interface10_bank_bus_dat_r) | csr_bankarray_interface11_bank_bus_dat_r) | csr_bankarray_interface12_bank_bus_dat_r) | csr_bankarray_interface13_bank_bus_dat_r) | csr_bankarray_interface14_bank_bus_dat_r) | csr_bankarray_interface15_bank_bus_dat_r) | csr_bankarray_interface16_bank_bus_dat_r) | csr_bankarray_interface17_bank_bus_dat_r) | csr_bankarray_interface18_bank_bus_dat_r) | csr_bankarray_interface19_bank_bus_dat_r) | csr_bankarray_interface20_bank_bus_dat_r) | csr_bankarray_interface21_bank_bus_dat_r) | csr_bankarray_interface22_bank_bus_dat_r) | csr_bankarray_interface23_bank_bus_dat_r) | csr_bankarray_interface24_bank_bus_dat_r) | csr_bankarray_interface25_bank_bus_dat_r) | csr_bankarray_interface26_bank_bus_dat_r) | csr_bankarray_interface27_bank_bus_dat_r) | csr_bankarray_interface28_bank_bus_dat_r) | csr_bankarray_interface29_bank_bus_dat_r) | csr_bankarray_interface30_bank_bus_dat_r) | csr_bankarray_sram_bus_dat_r);
always @(*) begin
    self0 <= 30'd0;
    case (grant)
        1'd0: begin
            self0 <= basesoc_ibus_adr;
        end
        default: begin
            self0 <= basesoc_dbus_adr;
        end
    endcase
end
always @(*) begin
    self1 <= 32'd0;
    case (grant)
        1'd0: begin
            self1 <= basesoc_ibus_dat_w;
        end
        default: begin
            self1 <= basesoc_dbus_dat_w;
        end
    endcase
end
always @(*) begin
    self2 <= 4'd0;
    case (grant)
        1'd0: begin
            self2 <= basesoc_ibus_sel;
        end
        default: begin
            self2 <= basesoc_dbus_sel;
        end
    endcase
end
always @(*) begin
    self3 <= 1'd0;
    case (grant)
        1'd0: begin
            self3 <= basesoc_ibus_cyc;
        end
        default: begin
            self3 <= basesoc_dbus_cyc;
        end
    endcase
end
always @(*) begin
    self4 <= 1'd0;
    case (grant)
        1'd0: begin
            self4 <= basesoc_ibus_stb;
        end
        default: begin
            self4 <= basesoc_dbus_stb;
        end
    endcase
end
always @(*) begin
    self5 <= 1'd0;
    case (grant)
        1'd0: begin
            self5 <= basesoc_ibus_we;
        end
        default: begin
            self5 <= basesoc_dbus_we;
        end
    endcase
end
always @(*) begin
    self6 <= 3'd0;
    case (grant)
        1'd0: begin
            self6 <= basesoc_ibus_cti;
        end
        default: begin
            self6 <= basesoc_dbus_cti;
        end
    endcase
end
always @(*) begin
    self7 <= 2'd0;
    case (grant)
        1'd0: begin
            self7 <= basesoc_ibus_bte;
        end
        default: begin
            self7 <= basesoc_dbus_bte;
        end
    endcase
end
assign basesoc_rx_rx = multiregimpl01;
assign ice40_power_fauld_status = multiregimpl11;
assign ice40_cp_in_status = multiregimpl21;
assign ice40_cd_status = multiregimpl31;
assign hyperram_cs_n = multiregimpl4;
assign hyperram_rst_n = multiregimpl5;
assign hyperram_clk_p = multiregimpl62;
assign hyperram_clk_n = multiregimpl72;
assign hyperramsdrphy_dq_oe = multiregimpl82;
always @(*) begin
    hyperramsdrphy_dq_o <= 8'd0;
    hyperramsdrphy_dq_o[0] <= multiregimpl92;
    hyperramsdrphy_dq_o[1] <= multiregimpl112;
    hyperramsdrphy_dq_o[2] <= multiregimpl132;
    hyperramsdrphy_dq_o[3] <= multiregimpl152;
    hyperramsdrphy_dq_o[4] <= multiregimpl172;
    hyperramsdrphy_dq_o[5] <= multiregimpl192;
    hyperramsdrphy_dq_o[6] <= multiregimpl212;
    hyperramsdrphy_dq_o[7] <= multiregimpl232;
end
always @(*) begin
    hyperramsdrphy_ios_dq_i <= 8'd0;
    hyperramsdrphy_ios_dq_i[0] <= multiregimpl10_1;
    hyperramsdrphy_ios_dq_i[1] <= multiregimpl12;
    hyperramsdrphy_ios_dq_i[2] <= multiregimpl14;
    hyperramsdrphy_ios_dq_i[3] <= multiregimpl16;
    hyperramsdrphy_ios_dq_i[4] <= multiregimpl18;
    hyperramsdrphy_ios_dq_i[5] <= multiregimpl20_1;
    hyperramsdrphy_ios_dq_i[6] <= multiregimpl22;
    hyperramsdrphy_ios_dq_i[7] <= multiregimpl24;
end
assign hyperramsdrphy_rwds_oe = multiregimpl252;
assign hyperramsdrphy_rwds_o = multiregimpl262;
assign hyperramsdrphy_ios_rwds_i = multiregimpl27;
assign ice40_io_vio_0_in_status = multiregimpl281;
assign ice40_io_vio_1_in_status = multiregimpl291;
assign ice40_io_vio_2_in_status = multiregimpl301;
assign ice40_io_vio_3_in_status = multiregimpl311;
assign ice40_io_vio_4_in_status = multiregimpl321;
assign ice40_io_vio_5_in_status = multiregimpl331;
assign ice40_io_vcore_0_in_status = multiregimpl341;
assign ice40_io_vcore_1_in_status = multiregimpl351;
assign ice40_io_vcore_2_in_status = multiregimpl361;
assign ice40_io_vcore_4_in_status = multiregimpl371;
assign gatemate_debug_4_in_status = multiregimpl381;
assign gatemate_debug_5_in_status = multiregimpl391;
assign gatemate_debug_3_in_status = multiregimpl401;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge sys_clk) begin
    case (grant)
        1'd0: begin
            if ((~request[0])) begin
                if (request[1]) begin
                    grant <= 1'd1;
                end
            end
        end
        1'd1: begin
            if ((~request[1])) begin
                if (request[0]) begin
                    grant <= 1'd0;
                end
            end
        end
    endcase
    slave_sel_r <= slave_sel;
    if (wait_1) begin
        if ((~done)) begin
            count <= (count - 1'd1);
        end
    end else begin
        count <= 20'd1000000;
    end
    if ((basesoc_bus_errors != 32'd4294967295)) begin
        if (basesoc_bus_error) begin
            basesoc_bus_errors <= (basesoc_bus_errors + 1'd1);
        end
    end
    basesoc_basesoc_ram_bus_ack <= 1'd0;
    if (((basesoc_basesoc_ram_bus_cyc & basesoc_basesoc_ram_bus_stb) & ((~basesoc_basesoc_ram_bus_ack) | basesoc_basesoc_adr_burst))) begin
        basesoc_basesoc_ram_bus_ack <= 1'd1;
    end
    basesoc_ram_bus_ram_bus_ack <= 1'd0;
    if (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & ((~basesoc_ram_bus_ram_bus_ack) | basesoc_ram_adr_burst))) begin
        basesoc_ram_bus_ram_bus_ack <= 1'd1;
    end
    {basesoc_tx_tick, basesoc_tx_phase} <= 26'd61847529;
    if (basesoc_tx_enable) begin
        {basesoc_tx_tick, basesoc_tx_phase} <= (basesoc_tx_phase + 26'd61847529);
    end
    rs232phytx_state <= rs232phytx_next_state;
    if (basesoc_tx_count_builder_rs232phytx_next_value_ce0) begin
        basesoc_tx_count <= basesoc_tx_count_builder_rs232phytx_next_value0;
    end
    if (basesoc_usb_uart_tx_builder_rs232phytx_next_value_ce1) begin
        usb_uart_tx <= basesoc_usb_uart_tx_builder_rs232phytx_next_value1;
    end
    if (basesoc_tx_data_builder_rs232phytx_next_value_ce2) begin
        basesoc_tx_data <= basesoc_tx_data_builder_rs232phytx_next_value2;
    end
    basesoc_rx_rx_d <= basesoc_rx_rx;
    {basesoc_rx_tick, basesoc_rx_phase} <= 32'd2147483648;
    if (basesoc_rx_enable) begin
        {basesoc_rx_tick, basesoc_rx_phase} <= (basesoc_rx_phase + 26'd61847529);
    end
    rs232phyrx_state <= rs232phyrx_next_state;
    if (basesoc_rx_count_builder_rs232phyrx_next_value_ce0) begin
        basesoc_rx_count <= basesoc_rx_count_builder_rs232phyrx_next_value0;
    end
    if (basesoc_rx_data_builder_rs232phyrx_next_value_ce1) begin
        basesoc_rx_data <= basesoc_rx_data_builder_rs232phyrx_next_value1;
    end
    if (basesoc_uart_tx_clear) begin
        basesoc_uart_tx_pending <= 1'd0;
    end
    basesoc_uart_tx_trigger_d <= basesoc_uart_tx_trigger;
    if ((basesoc_uart_tx_trigger & (~basesoc_uart_tx_trigger_d))) begin
        basesoc_uart_tx_pending <= 1'd1;
    end
    if (basesoc_uart_rx_clear) begin
        basesoc_uart_rx_pending <= 1'd0;
    end
    basesoc_uart_rx_trigger_d <= basesoc_uart_rx_trigger;
    if ((basesoc_uart_rx_trigger & (~basesoc_uart_rx_trigger_d))) begin
        basesoc_uart_rx_pending <= 1'd1;
    end
    if (basesoc_uart_tx_fifo_syncfifo_re) begin
        basesoc_uart_tx_fifo_readable <= 1'd1;
    end else begin
        if (basesoc_uart_tx_fifo_re) begin
            basesoc_uart_tx_fifo_readable <= 1'd0;
        end
    end
    if (((basesoc_uart_tx_fifo_syncfifo_we & basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_uart_tx_fifo_replace))) begin
        basesoc_uart_tx_fifo_produce <= (basesoc_uart_tx_fifo_produce + 1'd1);
    end
    if (basesoc_uart_tx_fifo_do_read) begin
        basesoc_uart_tx_fifo_consume <= (basesoc_uart_tx_fifo_consume + 1'd1);
    end
    if (((basesoc_uart_tx_fifo_syncfifo_we & basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_uart_tx_fifo_replace))) begin
        if ((~basesoc_uart_tx_fifo_do_read)) begin
            basesoc_uart_tx_fifo_level0 <= (basesoc_uart_tx_fifo_level0 + 1'd1);
        end
    end else begin
        if (basesoc_uart_tx_fifo_do_read) begin
            basesoc_uart_tx_fifo_level0 <= (basesoc_uart_tx_fifo_level0 - 1'd1);
        end
    end
    if (basesoc_uart_rx_fifo_syncfifo_re) begin
        basesoc_uart_rx_fifo_readable <= 1'd1;
    end else begin
        if (basesoc_uart_rx_fifo_re) begin
            basesoc_uart_rx_fifo_readable <= 1'd0;
        end
    end
    if (((basesoc_uart_rx_fifo_syncfifo_we & basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_uart_rx_fifo_replace))) begin
        basesoc_uart_rx_fifo_produce <= (basesoc_uart_rx_fifo_produce + 1'd1);
    end
    if (basesoc_uart_rx_fifo_do_read) begin
        basesoc_uart_rx_fifo_consume <= (basesoc_uart_rx_fifo_consume + 1'd1);
    end
    if (((basesoc_uart_rx_fifo_syncfifo_we & basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_uart_rx_fifo_replace))) begin
        if ((~basesoc_uart_rx_fifo_do_read)) begin
            basesoc_uart_rx_fifo_level0 <= (basesoc_uart_rx_fifo_level0 + 1'd1);
        end
    end else begin
        if (basesoc_uart_rx_fifo_do_read) begin
            basesoc_uart_rx_fifo_level0 <= (basesoc_uart_rx_fifo_level0 - 1'd1);
        end
    end
    if (basesoc_timer_en_storage) begin
        if ((basesoc_timer_value == 1'd0)) begin
            basesoc_timer_value <= basesoc_timer_reload_storage;
        end else begin
            basesoc_timer_value <= (basesoc_timer_value - 1'd1);
        end
    end else begin
        basesoc_timer_value <= basesoc_timer_load_storage;
    end
    if (basesoc_timer_update_value_re) begin
        basesoc_timer_value_status <= basesoc_timer_value;
    end
    if (basesoc_timer_zero_clear) begin
        basesoc_timer_zero_pending <= 1'd0;
    end
    basesoc_timer_zero_trigger_d <= basesoc_timer_zero_trigger;
    if ((basesoc_timer_zero_trigger & (~basesoc_timer_zero_trigger_d))) begin
        basesoc_timer_zero_pending <= 1'd1;
    end
    if (timer1_en_storage) begin
        if ((timer1_value == 1'd0)) begin
            timer1_value <= timer1_reload_storage;
        end else begin
            timer1_value <= (timer1_value - 1'd1);
        end
    end else begin
        timer1_value <= timer1_load_storage;
    end
    if (timer1_update_value_re) begin
        timer1_value_status <= timer1_value;
    end
    if (timer1_zero_clear) begin
        timer1_zero_pending <= 1'd0;
    end
    timer1_zero_trigger_d <= timer1_zero_trigger;
    if ((timer1_zero_trigger & (~timer1_zero_trigger_d))) begin
        timer1_zero_pending <= 1'd1;
    end
    if (uart_logging_dout_vld_sig) begin
        uart_logging_rx_data_buffer <= uart_logging_rx_data_raw;
    end
    if (uart_logging_rx_clear) begin
        uart_logging_rx_pending <= 1'd0;
    end
    uart_logging_rx_trigger_d <= uart_logging_rx_trigger;
    if ((uart_logging_rx_trigger & (~uart_logging_rx_trigger_d))) begin
        uart_logging_rx_pending <= 1'd1;
    end
    if (uart_ice40_dout_vld_sig) begin
        uart_ice40_rx_data_buffer <= uart_ice40_rx_data_raw;
    end
    if (uart_ice40_rx_clear) begin
        uart_ice40_rx_pending <= 1'd0;
    end
    uart_ice40_rx_trigger_d <= uart_ice40_rx_trigger;
    if ((uart_ice40_rx_trigger & (~uart_ice40_rx_trigger_d))) begin
        uart_ice40_rx_pending <= 1'd1;
    end
    if ((ice40_spi_clk_counter == 1'd0)) begin
        ice40_spi_clk <= 1'd1;
        ice40_spi_clk_counter <= 4'd10;
    end else begin
        ice40_spi_clk <= 1'd0;
        ice40_spi_clk_counter <= (ice40_spi_clk_counter - 1'd1);
    end
    if ((flash_spi_clk_counter == 1'd0)) begin
        flash_spi_clk <= 1'd1;
        flash_spi_clk_counter <= 4'd10;
    end else begin
        flash_spi_clk <= 1'd0;
        flash_spi_clk_counter <= (flash_spi_clk_counter - 1'd1);
    end
    hyperramsdrphy_rwds_i_d <= hyperramsdrphy_ios_rwds_i;
    hyperramsdrphy_phase <= (hyperramsdrphy_phase + 1'd1);
    clockdomainsrenamer_state <= clockdomainsrenamer_next_state;
    if (((syncfifo0_syncfifo0_we & syncfifo0_syncfifo0_writable) & (~syncfifo0_replace))) begin
        syncfifo0_produce <= (syncfifo0_produce + 1'd1);
    end
    if (syncfifo0_do_read) begin
        syncfifo0_consume <= (syncfifo0_consume + 1'd1);
    end
    if (((syncfifo0_syncfifo0_we & syncfifo0_syncfifo0_writable) & (~syncfifo0_replace))) begin
        if ((~syncfifo0_do_read)) begin
            syncfifo0_level <= (syncfifo0_level + 1'd1);
        end
    end else begin
        if (syncfifo0_do_read) begin
            syncfifo0_level <= (syncfifo0_level - 1'd1);
        end
    end
    if (((syncfifo1_syncfifo1_we & syncfifo1_syncfifo1_writable) & (~syncfifo1_replace))) begin
        syncfifo1_produce <= (syncfifo1_produce + 1'd1);
    end
    if (syncfifo1_do_read) begin
        syncfifo1_consume <= (syncfifo1_consume + 1'd1);
    end
    if (((syncfifo1_syncfifo1_we & syncfifo1_syncfifo1_writable) & (~syncfifo1_replace))) begin
        if ((~syncfifo1_do_read)) begin
            syncfifo1_level <= (syncfifo1_level + 1'd1);
        end
    end else begin
        if (syncfifo1_do_read) begin
            syncfifo1_level <= (syncfifo1_level - 1'd1);
        end
    end
    if (core_bus_latch) begin
        core_bus_cti1 <= core_bus_cti1;
        core_bus_we1 <= core_bus_we0;
        core_bus_sel1 <= core_bus_sel0;
        core_bus_adr1 <= core_bus_adr0;
        core_bus_dat_w1 <= core_bus_dat_w0;
    end
    if ((core_next_state != core_state)) begin
        core_cycles <= 1'd0;
    end
    if ((core_cmd_tx_conv_converter_source_valid & core_cmd_tx_conv_converter_source_ready)) begin
        if (core_cmd_tx_conv_converter_last) begin
            core_cmd_tx_conv_converter_mux <= 1'd0;
        end else begin
            core_cmd_tx_conv_converter_mux <= (core_cmd_tx_conv_converter_mux + 1'd1);
        end
    end
    if ((core_reg_tx_conv_converter_source_valid & core_reg_tx_conv_converter_source_ready)) begin
        if (core_reg_tx_conv_converter_last) begin
            core_reg_tx_conv_converter_mux <= 1'd0;
        end else begin
            core_reg_tx_conv_converter_mux <= (core_reg_tx_conv_converter_mux + 1'd1);
        end
    end
    if (core_reg_rx_conv_converter_source_ready) begin
        core_reg_rx_conv_converter_strobe_all <= 1'd0;
    end
    if (core_reg_rx_conv_converter_load_part) begin
        if (((core_reg_rx_conv_converter_demux == 1'd1) | core_reg_rx_conv_converter_sink_last)) begin
            core_reg_rx_conv_converter_demux <= 1'd0;
            core_reg_rx_conv_converter_strobe_all <= 1'd1;
        end else begin
            core_reg_rx_conv_converter_demux <= (core_reg_rx_conv_converter_demux + 1'd1);
        end
    end
    if ((core_reg_rx_conv_converter_source_valid & core_reg_rx_conv_converter_source_ready)) begin
        if ((core_reg_rx_conv_converter_sink_valid & core_reg_rx_conv_converter_sink_ready)) begin
            core_reg_rx_conv_converter_source_first <= core_reg_rx_conv_converter_sink_first;
            core_reg_rx_conv_converter_source_last <= core_reg_rx_conv_converter_sink_last;
        end else begin
            core_reg_rx_conv_converter_source_first <= 1'd0;
            core_reg_rx_conv_converter_source_last <= 1'd0;
        end
    end else begin
        if ((core_reg_rx_conv_converter_sink_valid & core_reg_rx_conv_converter_sink_ready)) begin
            core_reg_rx_conv_converter_source_first <= (core_reg_rx_conv_converter_sink_first | core_reg_rx_conv_converter_source_first);
            core_reg_rx_conv_converter_source_last <= (core_reg_rx_conv_converter_sink_last | core_reg_rx_conv_converter_source_last);
        end
    end
    if (core_reg_rx_conv_converter_load_part) begin
        case (core_reg_rx_conv_converter_demux)
            1'd0: begin
                core_reg_rx_conv_converter_source_payload_data[15:8] <= core_reg_rx_conv_converter_sink_payload_data;
            end
            1'd1: begin
                core_reg_rx_conv_converter_source_payload_data[7:0] <= core_reg_rx_conv_converter_sink_payload_data;
            end
        endcase
    end
    if (core_reg_rx_conv_converter_load_part) begin
        core_reg_rx_conv_converter_source_payload_valid_token_count <= (core_reg_rx_conv_converter_demux + 1'd1);
    end
    if ((core_dat_tx_conv_converter_source_valid & core_dat_tx_conv_converter_source_ready)) begin
        if (core_dat_tx_conv_converter_last) begin
            core_dat_tx_conv_converter_mux <= 1'd0;
        end else begin
            core_dat_tx_conv_converter_mux <= (core_dat_tx_conv_converter_mux + 1'd1);
        end
    end
    if (core_dat_rx_conv_converter_source_ready) begin
        core_dat_rx_conv_converter_strobe_all <= 1'd0;
    end
    if (core_dat_rx_conv_converter_load_part) begin
        if (((core_dat_rx_conv_converter_demux == 2'd3) | core_dat_rx_conv_converter_sink_last)) begin
            core_dat_rx_conv_converter_demux <= 1'd0;
            core_dat_rx_conv_converter_strobe_all <= 1'd1;
        end else begin
            core_dat_rx_conv_converter_demux <= (core_dat_rx_conv_converter_demux + 1'd1);
        end
    end
    if ((core_dat_rx_conv_converter_source_valid & core_dat_rx_conv_converter_source_ready)) begin
        if ((core_dat_rx_conv_converter_sink_valid & core_dat_rx_conv_converter_sink_ready)) begin
            core_dat_rx_conv_converter_source_first <= core_dat_rx_conv_converter_sink_first;
            core_dat_rx_conv_converter_source_last <= core_dat_rx_conv_converter_sink_last;
        end else begin
            core_dat_rx_conv_converter_source_first <= 1'd0;
            core_dat_rx_conv_converter_source_last <= 1'd0;
        end
    end else begin
        if ((core_dat_rx_conv_converter_sink_valid & core_dat_rx_conv_converter_sink_ready)) begin
            core_dat_rx_conv_converter_source_first <= (core_dat_rx_conv_converter_sink_first | core_dat_rx_conv_converter_source_first);
            core_dat_rx_conv_converter_source_last <= (core_dat_rx_conv_converter_sink_last | core_dat_rx_conv_converter_source_last);
        end
    end
    if (core_dat_rx_conv_converter_load_part) begin
        case (core_dat_rx_conv_converter_demux)
            1'd0: begin
                core_dat_rx_conv_converter_source_payload_data[31:24] <= core_dat_rx_conv_converter_sink_payload_data;
            end
            1'd1: begin
                core_dat_rx_conv_converter_source_payload_data[23:16] <= core_dat_rx_conv_converter_sink_payload_data;
            end
            2'd2: begin
                core_dat_rx_conv_converter_source_payload_data[15:8] <= core_dat_rx_conv_converter_sink_payload_data;
            end
            2'd3: begin
                core_dat_rx_conv_converter_source_payload_data[7:0] <= core_dat_rx_conv_converter_sink_payload_data;
            end
        endcase
    end
    if (core_dat_rx_conv_converter_load_part) begin
        core_dat_rx_conv_converter_source_payload_valid_token_count <= (core_dat_rx_conv_converter_demux + 1'd1);
    end
    core_state <= core_next_state;
    if (core_latency_x2_main_next_value_ce0) begin
        core_latency_x2 <= core_latency_x2_main_next_value0;
    end
    if (core_cycles_main_next_value_ce1) begin
        core_cycles <= core_cycles_main_next_value1;
    end
    if (core_burst_r_first_main_next_value_ce2) begin
        core_burst_r_first <= core_burst_r_first_main_next_value2;
    end
    fsm_state <= fsm_next_state;
    if (hyperram_reg_rdata_status_builder_next_value_ce) begin
        hyperram_reg_rdata_status <= hyperram_reg_rdata_status_builder_next_value;
    end
    state <= next_state;
    csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank0_sel) begin
        case (csr_bankarray_interface0_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_reset0_w;
            end
            1'd1: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_scratch0_w;
            end
            2'd2: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_bus_errors_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank0_reset0_re) begin
        basesoc_reset_storage <= csr_bankarray_csrbank0_reset0_r;
    end
    basesoc_reset_re <= csr_bankarray_csrbank0_reset0_re;
    if (csr_bankarray_csrbank0_scratch0_re) begin
        basesoc_scratch_storage <= csr_bankarray_csrbank0_scratch0_r;
    end
    basesoc_scratch_re <= csr_bankarray_csrbank0_scratch0_re;
    basesoc_bus_errors_re <= csr_bankarray_csrbank0_bus_errors_re;
    csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank1_sel) begin
        case (csr_bankarray_interface1_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_tx0_w;
            end
            1'd1: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_rx_w;
            end
            2'd2: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_busy_w;
            end
            2'd3: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_control0_w;
            end
            3'd4: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_ss_n0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank1_tx0_re) begin
        flash_tx_storage <= csr_bankarray_csrbank1_tx0_r;
    end
    flash_tx_re <= csr_bankarray_csrbank1_tx0_re;
    flash_rx_re <= csr_bankarray_csrbank1_rx_re;
    flash_busy_re <= csr_bankarray_csrbank1_busy_re;
    if (csr_bankarray_csrbank1_control0_re) begin
        flash_control_storage <= csr_bankarray_csrbank1_control0_r;
    end
    flash_control_re <= csr_bankarray_csrbank1_control0_re;
    if (csr_bankarray_csrbank1_ss_n0_re) begin
        flash_ss_n_storage <= csr_bankarray_csrbank1_ss_n0_r;
    end
    flash_ss_n_re <= csr_bankarray_csrbank1_ss_n0_re;
    csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank2_sel) begin
        case (csr_bankarray_interface2_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_in_w;
            end
            2'd2: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank2_oe0_re) begin
        gatemate_debug_3_oe_storage <= csr_bankarray_csrbank2_oe0_r;
    end
    gatemate_debug_3_oe_re <= csr_bankarray_csrbank2_oe0_re;
    gatemate_debug_3_in_re <= csr_bankarray_csrbank2_in_re;
    if (csr_bankarray_csrbank2_out0_re) begin
        gatemate_debug_3_out_storage <= csr_bankarray_csrbank2_out0_r;
    end
    gatemate_debug_3_out_re <= csr_bankarray_csrbank2_out0_re;
    csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank3_sel) begin
        case (csr_bankarray_interface3_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_in_w;
            end
            2'd2: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank3_oe0_re) begin
        gatemate_debug_4_oe_storage <= csr_bankarray_csrbank3_oe0_r;
    end
    gatemate_debug_4_oe_re <= csr_bankarray_csrbank3_oe0_re;
    gatemate_debug_4_in_re <= csr_bankarray_csrbank3_in_re;
    if (csr_bankarray_csrbank3_out0_re) begin
        gatemate_debug_4_out_storage <= csr_bankarray_csrbank3_out0_r;
    end
    gatemate_debug_4_out_re <= csr_bankarray_csrbank3_out0_re;
    csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank4_sel) begin
        case (csr_bankarray_interface4_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_in_w;
            end
            2'd2: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank4_oe0_re) begin
        gatemate_debug_5_oe_storage <= csr_bankarray_csrbank4_oe0_r;
    end
    gatemate_debug_5_oe_re <= csr_bankarray_csrbank4_oe0_re;
    gatemate_debug_5_in_re <= csr_bankarray_csrbank4_in_re;
    if (csr_bankarray_csrbank4_out0_re) begin
        gatemate_debug_5_out_storage <= csr_bankarray_csrbank4_out0_r;
    end
    gatemate_debug_5_out_re <= csr_bankarray_csrbank4_out0_re;
    csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank5_sel) begin
        case (csr_bankarray_interface5_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_config0_w;
            end
            1'd1: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_status_w;
            end
            2'd2: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_reg_control0_w;
            end
            2'd3: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_reg_status_w;
            end
            3'd4: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_reg_wdata0_w;
            end
            3'd5: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_reg_rdata_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank5_config0_re) begin
        hyperram_config_storage <= csr_bankarray_csrbank5_config0_r;
    end
    hyperram_config_re <= csr_bankarray_csrbank5_config0_re;
    hyperram_status_re <= csr_bankarray_csrbank5_status_re;
    if (csr_bankarray_csrbank5_reg_control0_re) begin
        hyperram_reg_control_storage <= csr_bankarray_csrbank5_reg_control0_r;
    end
    hyperram_reg_control_re <= csr_bankarray_csrbank5_reg_control0_re;
    hyperram_reg_status_re <= csr_bankarray_csrbank5_reg_status_re;
    if (csr_bankarray_csrbank5_reg_wdata0_re) begin
        hyperram_reg_wdata_storage <= csr_bankarray_csrbank5_reg_wdata0_r;
    end
    hyperram_reg_wdata_re <= csr_bankarray_csrbank5_reg_wdata0_re;
    hyperram_reg_rdata_re <= csr_bankarray_csrbank5_reg_rdata_re;
    csr_bankarray_interface6_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank6_sel) begin
        case (csr_bankarray_interface6_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_w0_w;
            end
            1'd1: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_r_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank6_w0_re) begin
        i2c0__w_storage <= csr_bankarray_csrbank6_w0_r;
    end
    i2c0__w_re <= csr_bankarray_csrbank6_w0_re;
    i2c0__r_re <= csr_bankarray_csrbank6_r_re;
    csr_bankarray_interface7_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank7_sel) begin
        case (csr_bankarray_interface7_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_w0_w;
            end
            1'd1: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_r_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank7_w0_re) begin
        i2c1__w_storage <= csr_bankarray_csrbank7_w0_r;
    end
    i2c1__w_re <= csr_bankarray_csrbank7_w0_re;
    i2c1__r_re <= csr_bankarray_csrbank7_r_re;
    csr_bankarray_interface8_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank8_sel) begin
        case (csr_bankarray_interface8_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_tx0_w;
            end
            1'd1: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_rx_w;
            end
            2'd2: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_busy_w;
            end
            2'd3: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_control0_w;
            end
            3'd4: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_ss_n0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank8_tx0_re) begin
        ice40_tx_storage <= csr_bankarray_csrbank8_tx0_r;
    end
    ice40_tx_re <= csr_bankarray_csrbank8_tx0_re;
    ice40_rx_re <= csr_bankarray_csrbank8_rx_re;
    ice40_busy_re <= csr_bankarray_csrbank8_busy_re;
    if (csr_bankarray_csrbank8_control0_re) begin
        ice40_control_storage <= csr_bankarray_csrbank8_control0_r;
    end
    ice40_control_re <= csr_bankarray_csrbank8_control0_re;
    if (csr_bankarray_csrbank8_ss_n0_re) begin
        ice40_ss_n_storage <= csr_bankarray_csrbank8_ss_n0_r;
    end
    ice40_ss_n_re <= csr_bankarray_csrbank8_ss_n0_re;
    csr_bankarray_interface9_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank9_sel) begin
        case (csr_bankarray_interface9_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_in_w;
            end
        endcase
    end
    ice40_cd_re <= csr_bankarray_csrbank9_in_re;
    csr_bankarray_interface10_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank10_sel) begin
        case (csr_bankarray_interface10_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank10_out0_re) begin
        ice40_core_en_storage <= csr_bankarray_csrbank10_out0_r;
    end
    ice40_core_en_re <= csr_bankarray_csrbank10_out0_re;
    csr_bankarray_interface11_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank11_sel) begin
        case (csr_bankarray_interface11_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_in_w;
            end
            2'd2: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank11_oe0_re) begin
        ice40_cp_oe_storage <= csr_bankarray_csrbank11_oe0_r;
    end
    ice40_cp_oe_re <= csr_bankarray_csrbank11_oe0_re;
    ice40_cp_in_re <= csr_bankarray_csrbank11_in_re;
    if (csr_bankarray_csrbank11_out0_re) begin
        ice40_cp_out_storage <= csr_bankarray_csrbank11_out0_r;
    end
    ice40_cp_out_re <= csr_bankarray_csrbank11_out0_re;
    csr_bankarray_interface12_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank12_sel) begin
        case (csr_bankarray_interface12_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_in_w;
            end
            2'd2: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank12_oe0_re) begin
        ice40_io_vcore_0_oe_storage <= csr_bankarray_csrbank12_oe0_r;
    end
    ice40_io_vcore_0_oe_re <= csr_bankarray_csrbank12_oe0_re;
    ice40_io_vcore_0_in_re <= csr_bankarray_csrbank12_in_re;
    if (csr_bankarray_csrbank12_out0_re) begin
        ice40_io_vcore_0_out_storage <= csr_bankarray_csrbank12_out0_r;
    end
    ice40_io_vcore_0_out_re <= csr_bankarray_csrbank12_out0_re;
    csr_bankarray_interface13_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank13_sel) begin
        case (csr_bankarray_interface13_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface13_bank_bus_dat_r <= csr_bankarray_csrbank13_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface13_bank_bus_dat_r <= csr_bankarray_csrbank13_in_w;
            end
            2'd2: begin
                csr_bankarray_interface13_bank_bus_dat_r <= csr_bankarray_csrbank13_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank13_oe0_re) begin
        ice40_io_vcore_1_oe_storage <= csr_bankarray_csrbank13_oe0_r;
    end
    ice40_io_vcore_1_oe_re <= csr_bankarray_csrbank13_oe0_re;
    ice40_io_vcore_1_in_re <= csr_bankarray_csrbank13_in_re;
    if (csr_bankarray_csrbank13_out0_re) begin
        ice40_io_vcore_1_out_storage <= csr_bankarray_csrbank13_out0_r;
    end
    ice40_io_vcore_1_out_re <= csr_bankarray_csrbank13_out0_re;
    csr_bankarray_interface14_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank14_sel) begin
        case (csr_bankarray_interface14_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface14_bank_bus_dat_r <= csr_bankarray_csrbank14_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface14_bank_bus_dat_r <= csr_bankarray_csrbank14_in_w;
            end
            2'd2: begin
                csr_bankarray_interface14_bank_bus_dat_r <= csr_bankarray_csrbank14_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank14_oe0_re) begin
        ice40_io_vcore_2_oe_storage <= csr_bankarray_csrbank14_oe0_r;
    end
    ice40_io_vcore_2_oe_re <= csr_bankarray_csrbank14_oe0_re;
    ice40_io_vcore_2_in_re <= csr_bankarray_csrbank14_in_re;
    if (csr_bankarray_csrbank14_out0_re) begin
        ice40_io_vcore_2_out_storage <= csr_bankarray_csrbank14_out0_r;
    end
    ice40_io_vcore_2_out_re <= csr_bankarray_csrbank14_out0_re;
    csr_bankarray_interface15_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank15_sel) begin
        case (csr_bankarray_interface15_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface15_bank_bus_dat_r <= csr_bankarray_csrbank15_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface15_bank_bus_dat_r <= csr_bankarray_csrbank15_in_w;
            end
            2'd2: begin
                csr_bankarray_interface15_bank_bus_dat_r <= csr_bankarray_csrbank15_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank15_oe0_re) begin
        ice40_io_vcore_4_oe_storage <= csr_bankarray_csrbank15_oe0_r;
    end
    ice40_io_vcore_4_oe_re <= csr_bankarray_csrbank15_oe0_re;
    ice40_io_vcore_4_in_re <= csr_bankarray_csrbank15_in_re;
    if (csr_bankarray_csrbank15_out0_re) begin
        ice40_io_vcore_4_out_storage <= csr_bankarray_csrbank15_out0_r;
    end
    ice40_io_vcore_4_out_re <= csr_bankarray_csrbank15_out0_re;
    csr_bankarray_interface16_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank16_sel) begin
        case (csr_bankarray_interface16_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface16_bank_bus_dat_r <= csr_bankarray_csrbank16_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface16_bank_bus_dat_r <= csr_bankarray_csrbank16_in_w;
            end
            2'd2: begin
                csr_bankarray_interface16_bank_bus_dat_r <= csr_bankarray_csrbank16_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank16_oe0_re) begin
        ice40_io_vio_0_oe_storage <= csr_bankarray_csrbank16_oe0_r;
    end
    ice40_io_vio_0_oe_re <= csr_bankarray_csrbank16_oe0_re;
    ice40_io_vio_0_in_re <= csr_bankarray_csrbank16_in_re;
    if (csr_bankarray_csrbank16_out0_re) begin
        ice40_io_vio_0_out_storage <= csr_bankarray_csrbank16_out0_r;
    end
    ice40_io_vio_0_out_re <= csr_bankarray_csrbank16_out0_re;
    csr_bankarray_interface17_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank17_sel) begin
        case (csr_bankarray_interface17_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface17_bank_bus_dat_r <= csr_bankarray_csrbank17_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface17_bank_bus_dat_r <= csr_bankarray_csrbank17_in_w;
            end
            2'd2: begin
                csr_bankarray_interface17_bank_bus_dat_r <= csr_bankarray_csrbank17_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank17_oe0_re) begin
        ice40_io_vio_1_oe_storage <= csr_bankarray_csrbank17_oe0_r;
    end
    ice40_io_vio_1_oe_re <= csr_bankarray_csrbank17_oe0_re;
    ice40_io_vio_1_in_re <= csr_bankarray_csrbank17_in_re;
    if (csr_bankarray_csrbank17_out0_re) begin
        ice40_io_vio_1_out_storage <= csr_bankarray_csrbank17_out0_r;
    end
    ice40_io_vio_1_out_re <= csr_bankarray_csrbank17_out0_re;
    csr_bankarray_interface18_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank18_sel) begin
        case (csr_bankarray_interface18_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface18_bank_bus_dat_r <= csr_bankarray_csrbank18_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface18_bank_bus_dat_r <= csr_bankarray_csrbank18_in_w;
            end
            2'd2: begin
                csr_bankarray_interface18_bank_bus_dat_r <= csr_bankarray_csrbank18_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank18_oe0_re) begin
        ice40_io_vio_2_oe_storage <= csr_bankarray_csrbank18_oe0_r;
    end
    ice40_io_vio_2_oe_re <= csr_bankarray_csrbank18_oe0_re;
    ice40_io_vio_2_in_re <= csr_bankarray_csrbank18_in_re;
    if (csr_bankarray_csrbank18_out0_re) begin
        ice40_io_vio_2_out_storage <= csr_bankarray_csrbank18_out0_r;
    end
    ice40_io_vio_2_out_re <= csr_bankarray_csrbank18_out0_re;
    csr_bankarray_interface19_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank19_sel) begin
        case (csr_bankarray_interface19_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface19_bank_bus_dat_r <= csr_bankarray_csrbank19_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface19_bank_bus_dat_r <= csr_bankarray_csrbank19_in_w;
            end
            2'd2: begin
                csr_bankarray_interface19_bank_bus_dat_r <= csr_bankarray_csrbank19_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank19_oe0_re) begin
        ice40_io_vio_3_oe_storage <= csr_bankarray_csrbank19_oe0_r;
    end
    ice40_io_vio_3_oe_re <= csr_bankarray_csrbank19_oe0_re;
    ice40_io_vio_3_in_re <= csr_bankarray_csrbank19_in_re;
    if (csr_bankarray_csrbank19_out0_re) begin
        ice40_io_vio_3_out_storage <= csr_bankarray_csrbank19_out0_r;
    end
    ice40_io_vio_3_out_re <= csr_bankarray_csrbank19_out0_re;
    csr_bankarray_interface20_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank20_sel) begin
        case (csr_bankarray_interface20_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface20_bank_bus_dat_r <= csr_bankarray_csrbank20_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface20_bank_bus_dat_r <= csr_bankarray_csrbank20_in_w;
            end
            2'd2: begin
                csr_bankarray_interface20_bank_bus_dat_r <= csr_bankarray_csrbank20_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank20_oe0_re) begin
        ice40_io_vio_4_oe_storage <= csr_bankarray_csrbank20_oe0_r;
    end
    ice40_io_vio_4_oe_re <= csr_bankarray_csrbank20_oe0_re;
    ice40_io_vio_4_in_re <= csr_bankarray_csrbank20_in_re;
    if (csr_bankarray_csrbank20_out0_re) begin
        ice40_io_vio_4_out_storage <= csr_bankarray_csrbank20_out0_r;
    end
    ice40_io_vio_4_out_re <= csr_bankarray_csrbank20_out0_re;
    csr_bankarray_interface21_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank21_sel) begin
        case (csr_bankarray_interface21_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface21_bank_bus_dat_r <= csr_bankarray_csrbank21_oe0_w;
            end
            1'd1: begin
                csr_bankarray_interface21_bank_bus_dat_r <= csr_bankarray_csrbank21_in_w;
            end
            2'd2: begin
                csr_bankarray_interface21_bank_bus_dat_r <= csr_bankarray_csrbank21_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank21_oe0_re) begin
        ice40_io_vio_5_oe_storage <= csr_bankarray_csrbank21_oe0_r;
    end
    ice40_io_vio_5_oe_re <= csr_bankarray_csrbank21_oe0_re;
    ice40_io_vio_5_in_re <= csr_bankarray_csrbank21_in_re;
    if (csr_bankarray_csrbank21_out0_re) begin
        ice40_io_vio_5_out_storage <= csr_bankarray_csrbank21_out0_r;
    end
    ice40_io_vio_5_out_re <= csr_bankarray_csrbank21_out0_re;
    csr_bankarray_interface22_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank22_sel) begin
        case (csr_bankarray_interface22_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface22_bank_bus_dat_r <= csr_bankarray_csrbank22_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank22_out0_re) begin
        ice40_osc_en_storage <= csr_bankarray_csrbank22_out0_r;
    end
    ice40_osc_en_re <= csr_bankarray_csrbank22_out0_re;
    csr_bankarray_interface23_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank23_sel) begin
        case (csr_bankarray_interface23_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface23_bank_bus_dat_r <= csr_bankarray_csrbank23_in_w;
            end
        endcase
    end
    ice40_power_fauld_re <= csr_bankarray_csrbank23_in_re;
    csr_bankarray_interface24_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank24_sel) begin
        case (csr_bankarray_interface24_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface24_bank_bus_dat_r <= csr_bankarray_csrbank24_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank24_out0_re) begin
        ice40_vio_en_storage <= csr_bankarray_csrbank24_out0_r;
    end
    ice40_vio_en_re <= csr_bankarray_csrbank24_out0_re;
    csr_bankarray_sel_r <= csr_bankarray_sel;
    csr_bankarray_interface25_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank25_sel) begin
        case (csr_bankarray_interface25_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface25_bank_bus_dat_r <= csr_bankarray_csrbank25_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank25_out0_re) begin
        leds_storage <= csr_bankarray_csrbank25_out0_r;
    end
    leds_re <= csr_bankarray_csrbank25_out0_re;
    csr_bankarray_interface26_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank26_sel) begin
        case (csr_bankarray_interface26_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface26_bank_bus_dat_r <= csr_bankarray_csrbank26_load0_w;
            end
            1'd1: begin
                csr_bankarray_interface26_bank_bus_dat_r <= csr_bankarray_csrbank26_reload0_w;
            end
            2'd2: begin
                csr_bankarray_interface26_bank_bus_dat_r <= csr_bankarray_csrbank26_en0_w;
            end
            2'd3: begin
                csr_bankarray_interface26_bank_bus_dat_r <= csr_bankarray_csrbank26_update_value0_w;
            end
            3'd4: begin
                csr_bankarray_interface26_bank_bus_dat_r <= csr_bankarray_csrbank26_value_w;
            end
            3'd5: begin
                csr_bankarray_interface26_bank_bus_dat_r <= csr_bankarray_csrbank26_ev_status_w;
            end
            3'd6: begin
                csr_bankarray_interface26_bank_bus_dat_r <= csr_bankarray_csrbank26_ev_pending_w;
            end
            3'd7: begin
                csr_bankarray_interface26_bank_bus_dat_r <= csr_bankarray_csrbank26_ev_enable0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank26_load0_re) begin
        basesoc_timer_load_storage <= csr_bankarray_csrbank26_load0_r;
    end
    basesoc_timer_load_re <= csr_bankarray_csrbank26_load0_re;
    if (csr_bankarray_csrbank26_reload0_re) begin
        basesoc_timer_reload_storage <= csr_bankarray_csrbank26_reload0_r;
    end
    basesoc_timer_reload_re <= csr_bankarray_csrbank26_reload0_re;
    if (csr_bankarray_csrbank26_en0_re) begin
        basesoc_timer_en_storage <= csr_bankarray_csrbank26_en0_r;
    end
    basesoc_timer_en_re <= csr_bankarray_csrbank26_en0_re;
    if (csr_bankarray_csrbank26_update_value0_re) begin
        basesoc_timer_update_value_storage <= csr_bankarray_csrbank26_update_value0_r;
    end
    basesoc_timer_update_value_re <= csr_bankarray_csrbank26_update_value0_re;
    basesoc_timer_value_re <= csr_bankarray_csrbank26_value_re;
    basesoc_timer_status_re <= csr_bankarray_csrbank26_ev_status_re;
    if (csr_bankarray_csrbank26_ev_pending_re) begin
        basesoc_timer_pending_r <= csr_bankarray_csrbank26_ev_pending_r;
    end
    basesoc_timer_pending_re <= csr_bankarray_csrbank26_ev_pending_re;
    if (csr_bankarray_csrbank26_ev_enable0_re) begin
        basesoc_timer_enable_storage <= csr_bankarray_csrbank26_ev_enable0_r;
    end
    basesoc_timer_enable_re <= csr_bankarray_csrbank26_ev_enable0_re;
    csr_bankarray_interface27_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank27_sel) begin
        case (csr_bankarray_interface27_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface27_bank_bus_dat_r <= csr_bankarray_csrbank27_load0_w;
            end
            1'd1: begin
                csr_bankarray_interface27_bank_bus_dat_r <= csr_bankarray_csrbank27_reload0_w;
            end
            2'd2: begin
                csr_bankarray_interface27_bank_bus_dat_r <= csr_bankarray_csrbank27_en0_w;
            end
            2'd3: begin
                csr_bankarray_interface27_bank_bus_dat_r <= csr_bankarray_csrbank27_update_value0_w;
            end
            3'd4: begin
                csr_bankarray_interface27_bank_bus_dat_r <= csr_bankarray_csrbank27_value_w;
            end
            3'd5: begin
                csr_bankarray_interface27_bank_bus_dat_r <= csr_bankarray_csrbank27_ev_status_w;
            end
            3'd6: begin
                csr_bankarray_interface27_bank_bus_dat_r <= csr_bankarray_csrbank27_ev_pending_w;
            end
            3'd7: begin
                csr_bankarray_interface27_bank_bus_dat_r <= csr_bankarray_csrbank27_ev_enable0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank27_load0_re) begin
        timer1_load_storage <= csr_bankarray_csrbank27_load0_r;
    end
    timer1_load_re <= csr_bankarray_csrbank27_load0_re;
    if (csr_bankarray_csrbank27_reload0_re) begin
        timer1_reload_storage <= csr_bankarray_csrbank27_reload0_r;
    end
    timer1_reload_re <= csr_bankarray_csrbank27_reload0_re;
    if (csr_bankarray_csrbank27_en0_re) begin
        timer1_en_storage <= csr_bankarray_csrbank27_en0_r;
    end
    timer1_en_re <= csr_bankarray_csrbank27_en0_re;
    if (csr_bankarray_csrbank27_update_value0_re) begin
        timer1_update_value_storage <= csr_bankarray_csrbank27_update_value0_r;
    end
    timer1_update_value_re <= csr_bankarray_csrbank27_update_value0_re;
    timer1_value_re <= csr_bankarray_csrbank27_value_re;
    timer1_status_re <= csr_bankarray_csrbank27_ev_status_re;
    if (csr_bankarray_csrbank27_ev_pending_re) begin
        timer1_pending_r <= csr_bankarray_csrbank27_ev_pending_r;
    end
    timer1_pending_re <= csr_bankarray_csrbank27_ev_pending_re;
    if (csr_bankarray_csrbank27_ev_enable0_re) begin
        timer1_enable_storage <= csr_bankarray_csrbank27_ev_enable0_r;
    end
    timer1_enable_re <= csr_bankarray_csrbank27_ev_enable0_re;
    csr_bankarray_interface28_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank28_sel) begin
        case (csr_bankarray_interface28_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface28_bank_bus_dat_r <= basesoc_uart_rxtx_w;
            end
            1'd1: begin
                csr_bankarray_interface28_bank_bus_dat_r <= csr_bankarray_csrbank28_txfull_w;
            end
            2'd2: begin
                csr_bankarray_interface28_bank_bus_dat_r <= csr_bankarray_csrbank28_rxempty_w;
            end
            2'd3: begin
                csr_bankarray_interface28_bank_bus_dat_r <= csr_bankarray_csrbank28_ev_status_w;
            end
            3'd4: begin
                csr_bankarray_interface28_bank_bus_dat_r <= csr_bankarray_csrbank28_ev_pending_w;
            end
            3'd5: begin
                csr_bankarray_interface28_bank_bus_dat_r <= csr_bankarray_csrbank28_ev_enable0_w;
            end
            3'd6: begin
                csr_bankarray_interface28_bank_bus_dat_r <= csr_bankarray_csrbank28_txempty_w;
            end
            3'd7: begin
                csr_bankarray_interface28_bank_bus_dat_r <= csr_bankarray_csrbank28_rxfull_w;
            end
        endcase
    end
    basesoc_uart_txfull_re <= csr_bankarray_csrbank28_txfull_re;
    basesoc_uart_rxempty_re <= csr_bankarray_csrbank28_rxempty_re;
    basesoc_uart_status_re <= csr_bankarray_csrbank28_ev_status_re;
    if (csr_bankarray_csrbank28_ev_pending_re) begin
        basesoc_uart_pending_r <= csr_bankarray_csrbank28_ev_pending_r;
    end
    basesoc_uart_pending_re <= csr_bankarray_csrbank28_ev_pending_re;
    if (csr_bankarray_csrbank28_ev_enable0_re) begin
        basesoc_uart_enable_storage <= csr_bankarray_csrbank28_ev_enable0_r;
    end
    basesoc_uart_enable_re <= csr_bankarray_csrbank28_ev_enable0_re;
    basesoc_uart_txempty_re <= csr_bankarray_csrbank28_txempty_re;
    basesoc_uart_rxfull_re <= csr_bankarray_csrbank28_rxfull_re;
    csr_bankarray_interface29_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank29_sel) begin
        case (csr_bankarray_interface29_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface29_bank_bus_dat_r <= csr_bankarray_csrbank29_tx_data0_w;
            end
            1'd1: begin
                csr_bankarray_interface29_bank_bus_dat_r <= csr_bankarray_csrbank29_rx_data_w;
            end
            2'd2: begin
                csr_bankarray_interface29_bank_bus_dat_r <= csr_bankarray_csrbank29_control0_w;
            end
            2'd3: begin
                csr_bankarray_interface29_bank_bus_dat_r <= csr_bankarray_csrbank29_status_w;
            end
            3'd4: begin
                csr_bankarray_interface29_bank_bus_dat_r <= csr_bankarray_csrbank29_ev_status_w;
            end
            3'd5: begin
                csr_bankarray_interface29_bank_bus_dat_r <= csr_bankarray_csrbank29_ev_pending_w;
            end
            3'd6: begin
                csr_bankarray_interface29_bank_bus_dat_r <= csr_bankarray_csrbank29_ev_enable0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank29_tx_data0_re) begin
        uart_ice40_tx_data_storage <= csr_bankarray_csrbank29_tx_data0_r;
    end
    uart_ice40_tx_data_re <= csr_bankarray_csrbank29_tx_data0_re;
    uart_ice40_rx_data_re <= csr_bankarray_csrbank29_rx_data_re;
    if (csr_bankarray_csrbank29_control0_re) begin
        uart_ice40_control_storage <= csr_bankarray_csrbank29_control0_r;
    end
    uart_ice40_control_re <= csr_bankarray_csrbank29_control0_re;
    uart_ice40_status_re0 <= csr_bankarray_csrbank29_status_re;
    uart_ice40_status_re1 <= csr_bankarray_csrbank29_ev_status_re;
    if (csr_bankarray_csrbank29_ev_pending_re) begin
        uart_ice40_pending_r <= csr_bankarray_csrbank29_ev_pending_r;
    end
    uart_ice40_pending_re <= csr_bankarray_csrbank29_ev_pending_re;
    if (csr_bankarray_csrbank29_ev_enable0_re) begin
        uart_ice40_enable_storage <= csr_bankarray_csrbank29_ev_enable0_r;
    end
    uart_ice40_enable_re <= csr_bankarray_csrbank29_ev_enable0_re;
    csr_bankarray_interface30_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank30_sel) begin
        case (csr_bankarray_interface30_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface30_bank_bus_dat_r <= csr_bankarray_csrbank30_tx_data0_w;
            end
            1'd1: begin
                csr_bankarray_interface30_bank_bus_dat_r <= csr_bankarray_csrbank30_rx_data_w;
            end
            2'd2: begin
                csr_bankarray_interface30_bank_bus_dat_r <= csr_bankarray_csrbank30_control0_w;
            end
            2'd3: begin
                csr_bankarray_interface30_bank_bus_dat_r <= csr_bankarray_csrbank30_status_w;
            end
            3'd4: begin
                csr_bankarray_interface30_bank_bus_dat_r <= csr_bankarray_csrbank30_ev_status_w;
            end
            3'd5: begin
                csr_bankarray_interface30_bank_bus_dat_r <= csr_bankarray_csrbank30_ev_pending_w;
            end
            3'd6: begin
                csr_bankarray_interface30_bank_bus_dat_r <= csr_bankarray_csrbank30_ev_enable0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank30_tx_data0_re) begin
        uart_logging_tx_data_storage <= csr_bankarray_csrbank30_tx_data0_r;
    end
    uart_logging_tx_data_re <= csr_bankarray_csrbank30_tx_data0_re;
    uart_logging_rx_data_re <= csr_bankarray_csrbank30_rx_data_re;
    if (csr_bankarray_csrbank30_control0_re) begin
        uart_logging_control_storage <= csr_bankarray_csrbank30_control0_r;
    end
    uart_logging_control_re <= csr_bankarray_csrbank30_control0_re;
    uart_logging_status_re0 <= csr_bankarray_csrbank30_status_re;
    uart_logging_status_re1 <= csr_bankarray_csrbank30_ev_status_re;
    if (csr_bankarray_csrbank30_ev_pending_re) begin
        uart_logging_pending_r <= csr_bankarray_csrbank30_ev_pending_r;
    end
    uart_logging_pending_re <= csr_bankarray_csrbank30_ev_pending_re;
    if (csr_bankarray_csrbank30_ev_enable0_re) begin
        uart_logging_enable_storage <= csr_bankarray_csrbank30_ev_enable0_r;
    end
    uart_logging_enable_re <= csr_bankarray_csrbank30_ev_enable0_re;
    if (sys_rst) begin
        basesoc_reset_storage <= 2'd0;
        basesoc_reset_re <= 1'd0;
        basesoc_scratch_storage <= 32'd305419896;
        basesoc_scratch_re <= 1'd0;
        basesoc_bus_errors_re <= 1'd0;
        basesoc_bus_errors <= 32'd0;
        basesoc_basesoc_ram_bus_ack <= 1'd0;
        basesoc_ram_bus_ram_bus_ack <= 1'd0;
        usb_uart_tx <= 1'd1;
        basesoc_tx_tick <= 1'd0;
        basesoc_rx_tick <= 1'd0;
        basesoc_rx_rx_d <= 1'd0;
        basesoc_uart_txfull_re <= 1'd0;
        basesoc_uart_rxempty_re <= 1'd0;
        basesoc_uart_tx_pending <= 1'd0;
        basesoc_uart_tx_trigger_d <= 1'd0;
        basesoc_uart_rx_pending <= 1'd0;
        basesoc_uart_rx_trigger_d <= 1'd0;
        basesoc_uart_status_re <= 1'd0;
        basesoc_uart_pending_re <= 1'd0;
        basesoc_uart_pending_r <= 2'd0;
        basesoc_uart_enable_storage <= 2'd0;
        basesoc_uart_enable_re <= 1'd0;
        basesoc_uart_txempty_re <= 1'd0;
        basesoc_uart_rxfull_re <= 1'd0;
        basesoc_uart_tx_fifo_readable <= 1'd0;
        basesoc_uart_tx_fifo_level0 <= 5'd0;
        basesoc_uart_tx_fifo_produce <= 4'd0;
        basesoc_uart_tx_fifo_consume <= 4'd0;
        basesoc_uart_rx_fifo_readable <= 1'd0;
        basesoc_uart_rx_fifo_level0 <= 5'd0;
        basesoc_uart_rx_fifo_produce <= 4'd0;
        basesoc_uart_rx_fifo_consume <= 4'd0;
        basesoc_timer_load_storage <= 32'd0;
        basesoc_timer_load_re <= 1'd0;
        basesoc_timer_reload_storage <= 32'd0;
        basesoc_timer_reload_re <= 1'd0;
        basesoc_timer_en_storage <= 1'd0;
        basesoc_timer_en_re <= 1'd0;
        basesoc_timer_update_value_storage <= 1'd0;
        basesoc_timer_update_value_re <= 1'd0;
        basesoc_timer_value_status <= 32'd0;
        basesoc_timer_value_re <= 1'd0;
        basesoc_timer_zero_pending <= 1'd0;
        basesoc_timer_zero_trigger_d <= 1'd0;
        basesoc_timer_status_re <= 1'd0;
        basesoc_timer_pending_re <= 1'd0;
        basesoc_timer_pending_r <= 1'd0;
        basesoc_timer_enable_storage <= 1'd0;
        basesoc_timer_enable_re <= 1'd0;
        basesoc_timer_value <= 32'd0;
        timer1_load_storage <= 32'd0;
        timer1_load_re <= 1'd0;
        timer1_reload_storage <= 32'd0;
        timer1_reload_re <= 1'd0;
        timer1_en_storage <= 1'd0;
        timer1_en_re <= 1'd0;
        timer1_update_value_storage <= 1'd0;
        timer1_update_value_re <= 1'd0;
        timer1_value_status <= 32'd0;
        timer1_value_re <= 1'd0;
        timer1_zero_pending <= 1'd0;
        timer1_zero_trigger_d <= 1'd0;
        timer1_status_re <= 1'd0;
        timer1_pending_re <= 1'd0;
        timer1_pending_r <= 1'd0;
        timer1_enable_storage <= 1'd0;
        timer1_enable_re <= 1'd0;
        timer1_value <= 32'd0;
        leds_storage <= 4'd0;
        leds_re <= 1'd0;
        uart_logging_tx_data_storage <= 8'd0;
        uart_logging_tx_data_re <= 1'd0;
        uart_logging_rx_data_re <= 1'd0;
        uart_logging_control_storage <= 1'd0;
        uart_logging_control_re <= 1'd0;
        uart_logging_status_re0 <= 1'd0;
        uart_logging_rx_data_buffer <= 8'd0;
        uart_logging_rx_pending <= 1'd0;
        uart_logging_rx_trigger_d <= 1'd0;
        uart_logging_status_re1 <= 1'd0;
        uart_logging_pending_re <= 1'd0;
        uart_logging_pending_r <= 1'd0;
        uart_logging_enable_storage <= 1'd0;
        uart_logging_enable_re <= 1'd0;
        uart_ice40_tx_data_storage <= 8'd0;
        uart_ice40_tx_data_re <= 1'd0;
        uart_ice40_rx_data_re <= 1'd0;
        uart_ice40_control_storage <= 1'd0;
        uart_ice40_control_re <= 1'd0;
        uart_ice40_status_re0 <= 1'd0;
        uart_ice40_rx_data_buffer <= 8'd0;
        uart_ice40_rx_pending <= 1'd0;
        uart_ice40_rx_trigger_d <= 1'd0;
        uart_ice40_status_re1 <= 1'd0;
        uart_ice40_pending_re <= 1'd0;
        uart_ice40_pending_r <= 1'd0;
        uart_ice40_enable_storage <= 1'd0;
        uart_ice40_enable_re <= 1'd0;
        i2c0__w_storage <= 3'd5;
        i2c0__w_re <= 1'd0;
        i2c0__r_re <= 1'd0;
        i2c1__w_storage <= 3'd5;
        i2c1__w_re <= 1'd0;
        i2c1__r_re <= 1'd0;
        ice40_power_fauld_re <= 1'd0;
        ice40_core_en_storage <= 1'd0;
        ice40_core_en_re <= 1'd0;
        ice40_vio_en_storage <= 1'd0;
        ice40_vio_en_re <= 1'd0;
        ice40_osc_en_storage <= 1'd0;
        ice40_osc_en_re <= 1'd0;
        ice40_tx_storage <= 8'd0;
        ice40_tx_re <= 1'd0;
        ice40_rx_re <= 1'd0;
        ice40_busy_re <= 1'd0;
        ice40_control_storage <= 3'd0;
        ice40_control_re <= 1'd0;
        ice40_ss_n_storage <= 1'd1;
        ice40_ss_n_re <= 1'd0;
        ice40_spi_clk <= 1'd0;
        ice40_spi_clk_counter <= 16'd0;
        ice40_cp_oe_storage <= 1'd0;
        ice40_cp_oe_re <= 1'd0;
        ice40_cp_in_re <= 1'd0;
        ice40_cp_out_storage <= 1'd0;
        ice40_cp_out_re <= 1'd0;
        ice40_cd_re <= 1'd0;
        flash_tx_storage <= 8'd0;
        flash_tx_re <= 1'd0;
        flash_rx_re <= 1'd0;
        flash_busy_re <= 1'd0;
        flash_control_storage <= 3'd0;
        flash_control_re <= 1'd0;
        flash_ss_n_storage <= 1'd1;
        flash_ss_n_re <= 1'd0;
        flash_spi_clk <= 1'd0;
        flash_spi_clk_counter <= 16'd0;
        hyperramsdrphy_phase <= 2'd0;
        hyperramsdrphy_rwds_i_d <= 1'd0;
        syncfifo0_level <= 3'd0;
        syncfifo0_produce <= 2'd0;
        syncfifo0_consume <= 2'd0;
        syncfifo1_level <= 3'd0;
        syncfifo1_produce <= 2'd0;
        syncfifo1_consume <= 2'd0;
        core_cycles <= 8'd0;
        core_latency_x2 <= 1'd0;
        core_bus_cti1 <= 3'd0;
        core_bus_we1 <= 1'd0;
        core_bus_sel1 <= 4'd0;
        core_bus_adr1 <= 32'd0;
        core_bus_dat_w1 <= 32'd0;
        core_burst_r_first <= 1'd0;
        core_cmd_tx_conv_converter_mux <= 3'd0;
        core_reg_tx_conv_converter_mux <= 1'd0;
        core_reg_rx_conv_converter_source_payload_data <= 16'd0;
        core_reg_rx_conv_converter_source_payload_valid_token_count <= 2'd0;
        core_reg_rx_conv_converter_demux <= 1'd0;
        core_reg_rx_conv_converter_strobe_all <= 1'd0;
        core_dat_tx_conv_converter_mux <= 2'd0;
        core_dat_rx_conv_converter_source_payload_data <= 32'd0;
        core_dat_rx_conv_converter_source_payload_valid_token_count <= 3'd0;
        core_dat_rx_conv_converter_demux <= 2'd0;
        core_dat_rx_conv_converter_strobe_all <= 1'd0;
        core_state <= 3'd0;
        hyperram_config_storage <= 16'd1792;
        hyperram_config_re <= 1'd0;
        hyperram_status_re <= 1'd0;
        hyperram_reg_control_storage <= 10'd0;
        hyperram_reg_control_re <= 1'd0;
        hyperram_reg_status_re <= 1'd0;
        hyperram_reg_wdata_storage <= 16'd0;
        hyperram_reg_wdata_re <= 1'd0;
        hyperram_reg_rdata_status <= 16'd0;
        hyperram_reg_rdata_re <= 1'd0;
        ice40_io_vio_0_oe_storage <= 1'd0;
        ice40_io_vio_0_oe_re <= 1'd0;
        ice40_io_vio_0_in_re <= 1'd0;
        ice40_io_vio_0_out_storage <= 1'd0;
        ice40_io_vio_0_out_re <= 1'd0;
        ice40_io_vio_1_oe_storage <= 1'd0;
        ice40_io_vio_1_oe_re <= 1'd0;
        ice40_io_vio_1_in_re <= 1'd0;
        ice40_io_vio_1_out_storage <= 1'd0;
        ice40_io_vio_1_out_re <= 1'd0;
        ice40_io_vio_2_oe_storage <= 1'd0;
        ice40_io_vio_2_oe_re <= 1'd0;
        ice40_io_vio_2_in_re <= 1'd0;
        ice40_io_vio_2_out_storage <= 1'd0;
        ice40_io_vio_2_out_re <= 1'd0;
        ice40_io_vio_3_oe_storage <= 1'd0;
        ice40_io_vio_3_oe_re <= 1'd0;
        ice40_io_vio_3_in_re <= 1'd0;
        ice40_io_vio_3_out_storage <= 1'd0;
        ice40_io_vio_3_out_re <= 1'd0;
        ice40_io_vio_4_oe_storage <= 1'd0;
        ice40_io_vio_4_oe_re <= 1'd0;
        ice40_io_vio_4_in_re <= 1'd0;
        ice40_io_vio_4_out_storage <= 1'd0;
        ice40_io_vio_4_out_re <= 1'd0;
        ice40_io_vio_5_oe_storage <= 1'd0;
        ice40_io_vio_5_oe_re <= 1'd0;
        ice40_io_vio_5_in_re <= 1'd0;
        ice40_io_vio_5_out_storage <= 1'd0;
        ice40_io_vio_5_out_re <= 1'd0;
        ice40_io_vcore_0_oe_storage <= 1'd0;
        ice40_io_vcore_0_oe_re <= 1'd0;
        ice40_io_vcore_0_in_re <= 1'd0;
        ice40_io_vcore_0_out_storage <= 1'd0;
        ice40_io_vcore_0_out_re <= 1'd0;
        ice40_io_vcore_1_oe_storage <= 1'd0;
        ice40_io_vcore_1_oe_re <= 1'd0;
        ice40_io_vcore_1_in_re <= 1'd0;
        ice40_io_vcore_1_out_storage <= 1'd0;
        ice40_io_vcore_1_out_re <= 1'd0;
        ice40_io_vcore_2_oe_storage <= 1'd0;
        ice40_io_vcore_2_oe_re <= 1'd0;
        ice40_io_vcore_2_in_re <= 1'd0;
        ice40_io_vcore_2_out_storage <= 1'd0;
        ice40_io_vcore_2_out_re <= 1'd0;
        ice40_io_vcore_4_oe_storage <= 1'd0;
        ice40_io_vcore_4_oe_re <= 1'd0;
        ice40_io_vcore_4_in_re <= 1'd0;
        ice40_io_vcore_4_out_storage <= 1'd0;
        ice40_io_vcore_4_out_re <= 1'd0;
        gatemate_debug_4_oe_storage <= 1'd0;
        gatemate_debug_4_oe_re <= 1'd0;
        gatemate_debug_4_in_re <= 1'd0;
        gatemate_debug_4_out_storage <= 1'd0;
        gatemate_debug_4_out_re <= 1'd0;
        gatemate_debug_5_oe_storage <= 1'd0;
        gatemate_debug_5_oe_re <= 1'd0;
        gatemate_debug_5_in_re <= 1'd0;
        gatemate_debug_5_out_storage <= 1'd0;
        gatemate_debug_5_out_re <= 1'd0;
        gatemate_debug_3_oe_storage <= 1'd0;
        gatemate_debug_3_oe_re <= 1'd0;
        gatemate_debug_3_in_re <= 1'd0;
        gatemate_debug_3_out_storage <= 1'd0;
        gatemate_debug_3_out_re <= 1'd0;
        grant <= 1'd0;
        slave_sel_r <= 4'd0;
        count <= 20'd1000000;
        csr_bankarray_sel_r <= 1'd0;
        rs232phytx_state <= 1'd0;
        rs232phyrx_state <= 1'd0;
        clockdomainsrenamer_state <= 2'd0;
        fsm_state <= 2'd0;
        state <= 1'd0;
    end
    multiregimpl00 <= usb_uart_rx;
    multiregimpl01 <= multiregimpl00;
    multiregimpl10 <= power_fauld_ice40;
    multiregimpl11 <= multiregimpl10;
    multiregimpl20 <= ice40_cp_i;
    multiregimpl21 <= multiregimpl20;
    multiregimpl30 <= cdone_ice40;
    multiregimpl31 <= multiregimpl30;
    multiregimpl4 <= hyperramsdrphy_ios_cs_n;
    multiregimpl5 <= hyperramsdrphy_ios_rst_n;
    multiregimpl60 <= (hyperramsdrphy_ios_clk & hyperram_clk);
    multiregimpl61 <= multiregimpl60;
    multiregimpl62 <= multiregimpl61;
    multiregimpl70 <= (~(hyperramsdrphy_ios_clk & hyperram_clk));
    multiregimpl71 <= multiregimpl70;
    multiregimpl72 <= multiregimpl71;
    multiregimpl80 <= hyperramsdrphy_ios_dq_oe;
    multiregimpl81 <= multiregimpl80;
    multiregimpl82 <= multiregimpl81;
    multiregimpl90 <= hyperramsdrphy_ios_dq_o[0];
    multiregimpl91 <= multiregimpl90;
    multiregimpl92 <= multiregimpl91;
    multiregimpl10_1 <= hyperramsdrphy_dq_i[0];
    multiregimpl110 <= hyperramsdrphy_ios_dq_o[1];
    multiregimpl111 <= multiregimpl110;
    multiregimpl112 <= multiregimpl111;
    multiregimpl12 <= hyperramsdrphy_dq_i[1];
    multiregimpl130 <= hyperramsdrphy_ios_dq_o[2];
    multiregimpl131 <= multiregimpl130;
    multiregimpl132 <= multiregimpl131;
    multiregimpl14 <= hyperramsdrphy_dq_i[2];
    multiregimpl150 <= hyperramsdrphy_ios_dq_o[3];
    multiregimpl151 <= multiregimpl150;
    multiregimpl152 <= multiregimpl151;
    multiregimpl16 <= hyperramsdrphy_dq_i[3];
    multiregimpl170 <= hyperramsdrphy_ios_dq_o[4];
    multiregimpl171 <= multiregimpl170;
    multiregimpl172 <= multiregimpl171;
    multiregimpl18 <= hyperramsdrphy_dq_i[4];
    multiregimpl190 <= hyperramsdrphy_ios_dq_o[5];
    multiregimpl191 <= multiregimpl190;
    multiregimpl192 <= multiregimpl191;
    multiregimpl20_1 <= hyperramsdrphy_dq_i[5];
    multiregimpl210 <= hyperramsdrphy_ios_dq_o[6];
    multiregimpl211 <= multiregimpl210;
    multiregimpl212 <= multiregimpl211;
    multiregimpl22 <= hyperramsdrphy_dq_i[6];
    multiregimpl230 <= hyperramsdrphy_ios_dq_o[7];
    multiregimpl231 <= multiregimpl230;
    multiregimpl232 <= multiregimpl231;
    multiregimpl24 <= hyperramsdrphy_dq_i[7];
    multiregimpl250 <= hyperramsdrphy_ios_rwds_oe;
    multiregimpl251 <= multiregimpl250;
    multiregimpl252 <= multiregimpl251;
    multiregimpl260 <= hyperramsdrphy_ios_rwds_o;
    multiregimpl261 <= multiregimpl260;
    multiregimpl262 <= multiregimpl261;
    multiregimpl27 <= hyperramsdrphy_rwds_i;
    multiregimpl280 <= ice40_io_vio_0_i;
    multiregimpl281 <= multiregimpl280;
    multiregimpl290 <= ice40_io_vio_1_i;
    multiregimpl291 <= multiregimpl290;
    multiregimpl300 <= ice40_io_vio_2_i;
    multiregimpl301 <= multiregimpl300;
    multiregimpl310 <= ice40_io_vio_3_i;
    multiregimpl311 <= multiregimpl310;
    multiregimpl320 <= ice40_io_vio_4_i;
    multiregimpl321 <= multiregimpl320;
    multiregimpl330 <= ice40_io_vio_5_i;
    multiregimpl331 <= multiregimpl330;
    multiregimpl340 <= ice40_io_vcore_0_i;
    multiregimpl341 <= multiregimpl340;
    multiregimpl350 <= ice40_io_vcore_1_i;
    multiregimpl351 <= multiregimpl350;
    multiregimpl360 <= ice40_io_vcore_2_i;
    multiregimpl361 <= multiregimpl360;
    multiregimpl370 <= ice40_io_vcore_4_i;
    multiregimpl371 <= multiregimpl370;
    multiregimpl380 <= gatemate_debug_4_i;
    multiregimpl381 <= multiregimpl380;
    multiregimpl390 <= gatemate_debug_5_i;
    multiregimpl391 <= multiregimpl390;
    multiregimpl400 <= gatemate_debug_3_i;
    multiregimpl401 <= multiregimpl400;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Instance CC_USR_RSTN of CC_USR_RSTN Module.
//------------------------------------------------------------------------------
CC_USR_RSTN CC_USR_RSTN(
	// Outputs.
	.USR_RSTN (crg_rst_n)
);

//------------------------------------------------------------------------------
// Memory rom: 15654-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] rom[0:15653];
initial begin
	$readmemh("colognechip_gatemate_evb_rom.init", rom);
end
reg [31:0] rom_dat0;
always @(posedge sys_clk) begin
	rom_dat0 <= rom[basesoc_basesoc_adr];
end
assign basesoc_basesoc_dat_r = rom_dat0;


//------------------------------------------------------------------------------
// Memory sram: 9216-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] sram[0:9215];
initial begin
	$readmemh("colognechip_gatemate_evb_sram.init", sram);
end
reg [13:0] sram_adr0;
always @(posedge sys_clk) begin
	if (basesoc_ram_we[0])
		sram[basesoc_ram_adr][7:0] <= basesoc_ram_dat_w[7:0];
	if (basesoc_ram_we[1])
		sram[basesoc_ram_adr][15:8] <= basesoc_ram_dat_w[15:8];
	if (basesoc_ram_we[2])
		sram[basesoc_ram_adr][23:16] <= basesoc_ram_dat_w[23:16];
	if (basesoc_ram_we[3])
		sram[basesoc_ram_adr][31:24] <= basesoc_ram_dat_w[31:24];
	sram_adr0 <= basesoc_ram_adr;
end
assign basesoc_ram_dat_r = sram[sram_adr0];


//------------------------------------------------------------------------------
// Memory mem: 46-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem[0:45];
initial begin
	$readmemh("colognechip_gatemate_evb_mem.init", mem);
end
reg [5:0] mem_adr0;
always @(posedge sys_clk) begin
	mem_adr0 <= csr_bankarray_adr;
end
assign csr_bankarray_dat_r = mem[mem_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (basesoc_uart_tx_fifo_wrport_we)
		storage[basesoc_uart_tx_fifo_wrport_adr] <= basesoc_uart_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[basesoc_uart_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_uart_tx_fifo_rdport_re)
		storage_dat1 <= storage[basesoc_uart_tx_fifo_rdport_adr];
end
assign basesoc_uart_tx_fifo_wrport_dat_r = storage_dat0;
assign basesoc_uart_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (basesoc_uart_rx_fifo_wrport_we)
		storage_1[basesoc_uart_rx_fifo_wrport_adr] <= basesoc_uart_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[basesoc_uart_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_uart_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[basesoc_uart_rx_fifo_rdport_adr];
end
assign basesoc_uart_rx_fifo_wrport_dat_r = storage_1_dat0;
assign basesoc_uart_rx_fifo_rdport_dat_r = storage_1_dat1;


//------------------------------------------------------------------------------
// Instance UART of UART Module.
//------------------------------------------------------------------------------
UART UART(
	// Inputs.
	.CLK          (sys_clk),
	.DIN          (uart_logging_tx_data_storage),
	.DIN_VLD      (uart_logging_DIN_VLD),
	.RST          (sys_rst),
	.UART_RXD     (uart_logging_rx),

	// Outputs.
	.DIN_RDY      (uart_logging_DIN_RDY),
	.DOUT         (uart_logging_rx_data_raw),
	.DOUT_VLD     (uart_logging_dout_vld_sig),
	.FRAME_ERROR  (uart_logging_FE),
	.PARITY_ERROR (uart_logging_PE),
	.UART_TXD     (uart_logging_tx)
);

//------------------------------------------------------------------------------
// Instance UART_1 of UART Module.
//------------------------------------------------------------------------------
UART UART_1(
	// Inputs.
	.CLK          (sys_clk),
	.DIN          (uart_ice40_tx_data_storage),
	.DIN_VLD      (uart_ice40_DIN_VLD),
	.RST          (sys_rst),
	.UART_RXD     (uart_ice40_rx),

	// Outputs.
	.DIN_RDY      (uart_ice40_DIN_RDY),
	.DOUT         (uart_ice40_rx_data_raw),
	.DOUT_VLD     (uart_ice40_dout_vld_sig),
	.FRAME_ERROR  (uart_ice40_FE),
	.PARITY_ERROR (uart_ice40_PE),
	.UART_TXD     (uart_ice40_tx)
);

assign i2c0_scl = (~i2c0_scl_1) ? 1'd0 : 1'bz;

assign i2c0_sda = (i2c0_oe & (~i2c0_sda0)) ? 1'd0 : 1'bz;
assign i2c0_sda1 = i2c0_sda;

assign i2c1_scl = (~i2c1_scl_1) ? 1'd0 : 1'bz;

assign i2c1_sda = (i2c1_oe & (~i2c1_sda0)) ? 1'd0 : 1'bz;
assign i2c1_sda1 = i2c1_sda;

assign creset_ice40 = ice40_cp_oe ? ice40_cp_o : 1'bz;
assign ice40_cp_i = creset_ice40;

assign hyperram_dq = hyperramsdrphy_dq_oe ? hyperramsdrphy_dq_o : 8'bz;
assign hyperramsdrphy_dq_i = hyperram_dq;

assign hyperram_rwds = hyperramsdrphy_rwds_oe ? hyperramsdrphy_rwds_o : 1'bz;
assign hyperramsdrphy_rwds_i = hyperram_rwds;

//------------------------------------------------------------------------------
// Memory storage_2: 4-words x 16-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 16 
// Port 1 | Read: Async | Write: ---- | 
reg [15:0] storage_2[0:3];
reg [15:0] storage_2_dat0;
always @(posedge sys_clk) begin
	if (syncfifo0_wrport_we)
		storage_2[syncfifo0_wrport_adr] <= syncfifo0_wrport_dat_w;
	storage_2_dat0 <= storage_2[syncfifo0_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign syncfifo0_wrport_dat_r = storage_2_dat0;
assign syncfifo0_rdport_dat_r = storage_2[syncfifo0_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_3: 4-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Async | Write: ---- | 
reg [9:0] storage_3[0:3];
reg [9:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (syncfifo1_wrport_we)
		storage_3[syncfifo1_wrport_adr] <= syncfifo1_wrport_dat_w;
	storage_3_dat0 <= storage_3[syncfifo1_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign syncfifo1_wrport_dat_r = storage_3_dat0;
assign syncfifo1_rdport_dat_r = storage_3[syncfifo1_rdport_adr];


assign ice40_io_vio_0 = ice40_io_vio_0_oe ? ice40_io_vio_0_o : 1'bz;
assign ice40_io_vio_0_i = ice40_io_vio_0;

assign ice40_io_vio_1 = ice40_io_vio_1_oe ? ice40_io_vio_1_o : 1'bz;
assign ice40_io_vio_1_i = ice40_io_vio_1;

assign ice40_io_vio_2 = ice40_io_vio_2_oe ? ice40_io_vio_2_o : 1'bz;
assign ice40_io_vio_2_i = ice40_io_vio_2;

assign ice40_io_vio_3 = ice40_io_vio_3_oe ? ice40_io_vio_3_o : 1'bz;
assign ice40_io_vio_3_i = ice40_io_vio_3;

assign ice40_io_vio_4 = ice40_io_vio_4_oe ? ice40_io_vio_4_o : 1'bz;
assign ice40_io_vio_4_i = ice40_io_vio_4;

assign ice40_io_vio_5 = ice40_io_vio_5_oe ? ice40_io_vio_5_o : 1'bz;
assign ice40_io_vio_5_i = ice40_io_vio_5;

assign ice40_io_vcore_0 = ice40_io_vcore_0_oe ? ice40_io_vcore_0_o : 1'bz;
assign ice40_io_vcore_0_i = ice40_io_vcore_0;

assign ice40_io_vcore_1 = ice40_io_vcore_1_oe ? ice40_io_vcore_1_o : 1'bz;
assign ice40_io_vcore_1_i = ice40_io_vcore_1;

assign ice40_io_vcore_2 = ice40_io_vcore_2_oe ? ice40_io_vcore_2_o : 1'bz;
assign ice40_io_vcore_2_i = ice40_io_vcore_2;

assign ice40_io_vcore_4 = ice40_io_vcore_4_oe ? ice40_io_vcore_4_o : 1'bz;
assign ice40_io_vcore_4_i = ice40_io_vcore_4;

assign gatemate_debug_4 = gatemate_debug_4_oe ? gatemate_debug_4_o : 1'bz;
assign gatemate_debug_4_i = gatemate_debug_4;

assign gatemate_debug_5 = gatemate_debug_5_oe ? gatemate_debug_5_o : 1'bz;
assign gatemate_debug_5_i = gatemate_debug_5;

assign gatemate_debug_3 = gatemate_debug_3_oe ? gatemate_debug_3_o : 1'bz;
assign gatemate_debug_3_i = gatemate_debug_3;

//------------------------------------------------------------------------------
// Instance CC_PLL of CC_PLL Module.
//------------------------------------------------------------------------------
CC_PLL #(
	// Parameters.
	.CI_FILTER_CONST (2'd2),
	.CLK180_DOUB     (1'd0),
	.CLK270_DOUB     (1'd0),
	.CP_FILTER_CONST (3'd4),
	.LOCK_REQ        (1'd1),
	.LOW_JITTER      (1'd1),
	.OUT_CLK         ("8.0"),
	.PERF_MD         ("ECONOMY"),
	.REF_CLK         ("10.0")
) CC_PLL (
	// Inputs.
	.CLK_FEEDBACK        (1'd0),
	.CLK_REF             (crg_clkin),
	.USR_CLK_REF         (gatematepll3),
	.USR_LOCKED_STDY_RST (1'd0),

	// Outputs.
	.CLK0                (crg_clkout),
	.CLK180              (gatematepll1),
	.CLK270              (gatematepll2),
	.CLK90               (gatematepll0),
	.CLK_REF_OUT         (gatematepll4),
	.USR_PLL_LOCKED      (gatematepll_locked_s1),
	.USR_PLL_LOCKED_STDY (gatematepll5)
);

//------------------------------------------------------------------------------
// Instance VexRiscv of VexRiscv Module.
//------------------------------------------------------------------------------
VexRiscv VexRiscv(
	// Inputs.
	.clk                    (sys_clk),
	.dBusWishbone_ACK       (basesoc_dbus_ack),
	.dBusWishbone_DAT_MISO  (basesoc_dbus_dat_r),
	.dBusWishbone_ERR       (basesoc_dbus_err),
	.externalInterruptArray (basesoc_interrupt),
	.externalResetVector    (basesoc_vexriscv),
	.iBusWishbone_ACK       (basesoc_ibus_ack),
	.iBusWishbone_DAT_MISO  (basesoc_ibus_dat_r),
	.iBusWishbone_ERR       (basesoc_ibus_err),
	.reset                  ((sys_rst | basesoc_reset)),
	.softwareInterrupt      (1'd0),
	.timerInterrupt         (1'd0),

	// Outputs.
	.dBusWishbone_ADR       (basesoc_dbus_adr),
	.dBusWishbone_BTE       (basesoc_dbus_bte),
	.dBusWishbone_CTI       (basesoc_dbus_cti),
	.dBusWishbone_CYC       (basesoc_dbus_cyc),
	.dBusWishbone_DAT_MOSI  (basesoc_dbus_dat_w),
	.dBusWishbone_SEL       (basesoc_dbus_sel),
	.dBusWishbone_STB       (basesoc_dbus_stb),
	.dBusWishbone_WE        (basesoc_dbus_we),
	.iBusWishbone_ADR       (basesoc_ibus_adr),
	.iBusWishbone_BTE       (basesoc_ibus_bte),
	.iBusWishbone_CTI       (basesoc_ibus_cti),
	.iBusWishbone_CYC       (basesoc_ibus_cyc),
	.iBusWishbone_DAT_MOSI  (basesoc_ibus_dat_w),
	.iBusWishbone_SEL       (basesoc_ibus_sel),
	.iBusWishbone_STB       (basesoc_ibus_stb),
	.iBusWishbone_WE        (basesoc_ibus_we)
);

//------------------------------------------------------------------------------
// Instance spi_master of spi_master Module.
//------------------------------------------------------------------------------
spi_master spi_master(
	// Inputs.
	.clk     (sys_clk),
	.cpha    (ice40_cpha1),
	.cpol    (ice40_cpol1),
	.div_clk (ice40_spi_clk),
	.enable  (ice40_enable1),
	.miso    (spi_ice40_miso),
	.reset_n ((~sys_rst)),
	.tx      (ice40_tx_storage),

	// Outputs.
	.busy    (ice40_busy_status),
	.mosi    (spi_ice40_mosi),
	.rx      (ice40_rx_status),
	.sclk    (spi_ice40_clk)
);

//------------------------------------------------------------------------------
// Instance spi_master_1 of spi_master_1 Module.
//------------------------------------------------------------------------------
spi_master_1 spi_master_1(
	// Inputs.
	.clk     (sys_clk),
	.cpha    (flash_cpha1),
	.cpol    (flash_cpol1),
	.div_clk (flash_spi_clk),
	.enable  (flash_enable1),
	.miso    (spi_flash_miso),
	.reset_n ((~sys_rst)),
	.tx      (flash_tx_storage),

	// Outputs.
	.busy    (flash_busy_status),
	.mosi    (spi_flash_mosi),
	.rx      (flash_rx_status),
	.sclk    (spi_flash_clk)
);

//------------------------------------------------------------------------------
// Instance CC_DFF of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd1)
) CC_DFF (
	// Inputs.
	.CLK (sys_clk),
	.D   (1'd0),
	.EN  (1'd1),
	.SR  ((~crg_locked)),

	// Outputs.
	.Q   (rst1)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_1 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd1)
) CC_DFF_1 (
	// Inputs.
	.CLK (sys_clk),
	.D   (rst1),
	.EN  (1'd1),
	.SR  ((~crg_locked)),

	// Outputs.
	.Q   (sys_rst)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2025-02-27 00:37:19.
//------------------------------------------------------------------------------
